

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Apr 06 00:10:44 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F15344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	stringtext15,global,class=STRCODE,delta=2
    19                           	psect	stringtext16,global,class=STRCODE,delta=2
    20                           	psect	stringtext17,global,class=STRCODE,delta=2
    21                           	psect	stringtext18,global,class=STRCODE,delta=2
    22                           	psect	stringtext19,global,class=STRCODE,delta=2
    23                           	psect	stringtext20,global,class=STRCODE,delta=2
    24                           	psect	stringtext21,global,class=STRCODE,delta=2
    25                           	psect	stringtext22,global,class=STRCODE,delta=2
    26                           	psect	cinit,global,class=CODE,merge=1,delta=2
    27                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.44
    53                           ; Generated 14/09/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F15344 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0119                     	;# 
   114  0119                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011A                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011B                     	;# 
   123  011B                     	;# 
   124  011C                     	;# 
   125  011C                     	;# 
   126  011C                     	;# 
   127  011D                     	;# 
   128  011D                     	;# 
   129  011D                     	;# 
   130  011E                     	;# 
   131  011E                     	;# 
   132  011E                     	;# 
   133  011F                     	;# 
   134  011F                     	;# 
   135  011F                     	;# 
   136  011F                     	;# 
   137  011F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  018F                     	;# 
   142  0190                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  020C                     	;# 
   146  020C                     	;# 
   147  020D                     	;# 
   148  020E                     	;# 
   149  020F                     	;# 
   150  020F                     	;# 
   151  0210                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  028C                     	;# 
   156  028C                     	;# 
   157  028D                     	;# 
   158  028D                     	;# 
   159  028E                     	;# 
   160  028F                     	;# 
   161  0290                     	;# 
   162  0291                     	;# 
   163  030C                     	;# 
   164  030C                     	;# 
   165  030D                     	;# 
   166  030E                     	;# 
   167  030F                     	;# 
   168  0310                     	;# 
   169  0310                     	;# 
   170  0311                     	;# 
   171  0312                     	;# 
   172  0313                     	;# 
   173  0314                     	;# 
   174  0315                     	;# 
   175  0316                     	;# 
   176  0318                     	;# 
   177  0319                     	;# 
   178  031A                     	;# 
   179  031C                     	;# 
   180  031D                     	;# 
   181  031E                     	;# 
   182  038C                     	;# 
   183  038D                     	;# 
   184  038E                     	;# 
   185  058C                     	;# 
   186  058C                     	;# 
   187  058D                     	;# 
   188  058E                     	;# 
   189  058F                     	;# 
   190  058F                     	;# 
   191  0590                     	;# 
   192  0591                     	;# 
   193  0592                     	;# 
   194  0593                     	;# 
   195  059C                     	;# 
   196  059C                     	;# 
   197  059D                     	;# 
   198  059D                     	;# 
   199  059E                     	;# 
   200  059F                     	;# 
   201  060C                     	;# 
   202  060D                     	;# 
   203  060E                     	;# 
   204  060F                     	;# 
   205  0610                     	;# 
   206  0611                     	;# 
   207  0612                     	;# 
   208  0613                     	;# 
   209  0614                     	;# 
   210  070C                     	;# 
   211  070D                     	;# 
   212  070E                     	;# 
   213  070F                     	;# 
   214  0710                     	;# 
   215  0711                     	;# 
   216  0712                     	;# 
   217  0713                     	;# 
   218  0716                     	;# 
   219  0717                     	;# 
   220  0718                     	;# 
   221  0719                     	;# 
   222  071A                     	;# 
   223  071B                     	;# 
   224  071C                     	;# 
   225  071D                     	;# 
   226  0796                     	;# 
   227  0797                     	;# 
   228  0798                     	;# 
   229  0799                     	;# 
   230  079A                     	;# 
   231  079B                     	;# 
   232  080C                     	;# 
   233  080D                     	;# 
   234  080E                     	;# 
   235  080F                     	;# 
   236  0810                     	;# 
   237  0811                     	;# 
   238  0812                     	;# 
   239  0813                     	;# 
   240  0814                     	;# 
   241  081A                     	;# 
   242  081A                     	;# 
   243  081B                     	;# 
   244  081C                     	;# 
   245  081C                     	;# 
   246  081D                     	;# 
   247  081E                     	;# 
   248  081F                     	;# 
   249  088C                     	;# 
   250  088D                     	;# 
   251  088E                     	;# 
   252  088F                     	;# 
   253  0890                     	;# 
   254  0891                     	;# 
   255  0892                     	;# 
   256  0893                     	;# 
   257  0895                     	;# 
   258  0896                     	;# 
   259  090C                     	;# 
   260  090E                     	;# 
   261  090F                     	;# 
   262  091F                     	;# 
   263  098F                     	;# 
   264  098F                     	;# 
   265  0990                     	;# 
   266  0991                     	;# 
   267  0992                     	;# 
   268  0993                     	;# 
   269  0994                     	;# 
   270  0995                     	;# 
   271  0996                     	;# 
   272  0997                     	;# 
   273  0A19                     	;# 
   274  0A19                     	;# 
   275  0A1A                     	;# 
   276  0A1A                     	;# 
   277  0A1B                     	;# 
   278  0A1B                     	;# 
   279  0A1B                     	;# 
   280  0A1C                     	;# 
   281  0A1C                     	;# 
   282  0A1D                     	;# 
   283  0A1D                     	;# 
   284  0A1E                     	;# 
   285  0A1E                     	;# 
   286  0A1F                     	;# 
   287  0A1F                     	;# 
   288  0A1F                     	;# 
   289  1E0F                     	;# 
   290  1E10                     	;# 
   291  1E11                     	;# 
   292  1E12                     	;# 
   293  1E13                     	;# 
   294  1E14                     	;# 
   295  1E15                     	;# 
   296  1E16                     	;# 
   297  1E17                     	;# 
   298  1E18                     	;# 
   299  1E19                     	;# 
   300  1E1A                     	;# 
   301  1E1B                     	;# 
   302  1E1C                     	;# 
   303  1E1D                     	;# 
   304  1E1E                     	;# 
   305  1E1F                     	;# 
   306  1E20                     	;# 
   307  1E21                     	;# 
   308  1E22                     	;# 
   309  1E23                     	;# 
   310  1E24                     	;# 
   311  1E25                     	;# 
   312  1E26                     	;# 
   313  1E27                     	;# 
   314  1E28                     	;# 
   315  1E29                     	;# 
   316  1E2A                     	;# 
   317  1E2B                     	;# 
   318  1E2C                     	;# 
   319  1E2D                     	;# 
   320  1E2E                     	;# 
   321  1E2F                     	;# 
   322  1E30                     	;# 
   323  1E31                     	;# 
   324  1E32                     	;# 
   325  1E33                     	;# 
   326  1E34                     	;# 
   327  1E35                     	;# 
   328  1E36                     	;# 
   329  1E37                     	;# 
   330  1E8F                     	;# 
   331  1E90                     	;# 
   332  1E91                     	;# 
   333  1E92                     	;# 
   334  1E93                     	;# 
   335  1E9C                     	;# 
   336  1EA1                     	;# 
   337  1EA2                     	;# 
   338  1EB1                     	;# 
   339  1EBB                     	;# 
   340  1EBC                     	;# 
   341  1EBD                     	;# 
   342  1EBE                     	;# 
   343  1EC3                     	;# 
   344  1EC5                     	;# 
   345  1EC6                     	;# 
   346  1EC7                     	;# 
   347  1ECB                     	;# 
   348  1ECC                     	;# 
   349  1ECD                     	;# 
   350  1ECE                     	;# 
   351  1F10                     	;# 
   352  1F11                     	;# 
   353  1F12                     	;# 
   354  1F13                     	;# 
   355  1F14                     	;# 
   356  1F15                     	;# 
   357  1F1C                     	;# 
   358  1F1D                     	;# 
   359  1F1E                     	;# 
   360  1F1F                     	;# 
   361  1F20                     	;# 
   362  1F21                     	;# 
   363  1F22                     	;# 
   364  1F23                     	;# 
   365  1F24                     	;# 
   366  1F25                     	;# 
   367  1F26                     	;# 
   368  1F27                     	;# 
   369  1F38                     	;# 
   370  1F39                     	;# 
   371  1F3A                     	;# 
   372  1F3B                     	;# 
   373  1F3C                     	;# 
   374  1F3D                     	;# 
   375  1F3E                     	;# 
   376  1F3F                     	;# 
   377  1F43                     	;# 
   378  1F44                     	;# 
   379  1F45                     	;# 
   380  1F46                     	;# 
   381  1F47                     	;# 
   382  1F48                     	;# 
   383  1F49                     	;# 
   384  1F4A                     	;# 
   385  1F4E                     	;# 
   386  1F4F                     	;# 
   387  1F50                     	;# 
   388  1F51                     	;# 
   389  1F52                     	;# 
   390  1F53                     	;# 
   391  1F54                     	;# 
   392  1F55                     	;# 
   393  1FE4                     	;# 
   394  1FE5                     	;# 
   395  1FE6                     	;# 
   396  1FE7                     	;# 
   397  1FE8                     	;# 
   398  1FE8                     	;# 
   399  1FE9                     	;# 
   400  1FEA                     	;# 
   401  1FEA                     	;# 
   402  1FEB                     	;# 
   403  1FED                     	;# 
   404  1FEE                     	;# 
   405  1FEF                     	;# 
   406  000B                     _INTCONbits	set	11
   407  00A5                     _TRISC5	set	165
   408  0095                     _TRISA5	set	149
   409  00A0                     _TRISC0	set	160
   410  00A3                     _TRISC3	set	163
   411  009D                     _TRISB5	set	157
   412  011B                     _SP1BRG	set	283
   413  011E                     _TX1STAbits	set	286
   414  0119                     _RC1REG	set	281
   415  011D                     _RC1STAbits	set	285
   416  011A                     _TX1REG	set	282
   417  059F                     _T0CON1	set	1439
   418  059E                     _T0CON0	set	1438
   419  059E                     _T0CON0bits	set	1438
   420  0716                     _PIE0bits	set	1814
   421  070C                     _PIR0bits	set	1804
   422  070F                     _PIR3bits	set	1807
   423  0A1B                     _SP2BRG	set	2587
   424  0A19                     _RC2REG	set	2585
   425  0A1A                     _TX2REG	set	2586
   426  0A1D                     _RC2STAbits	set	2589
   427  0A1E                     _TX2STAbits	set	2590
   428  1ECB                     _RX1DTPPSbits	set	7883
   429  1ECD                     _RX2DTPPSbits	set	7885
   430  1F24                     _RC4PPS	set	7972
   431  1F14                     _RA4PPS	set	7956
   432  1F21                     _RC1PPS	set	7969
   433  1F26                     _RC6PPS	set	7974
   434  1F1E                     _RB6PPS	set	7966
   435  1F4E                     _ANSELC	set	8014
   436  1F43                     _ANSELB	set	8003
   437  1F38                     _ANSELA	set	7992
   438                           
   439                           	psect	stringtext1
   440  0351                     __pstringtext1:	
   441  0351                     STR_2:	
   442  0351  3441               	retlw	65	;'A'
   443  0352  3454               	retlw	84	;'T'
   444  0353  342B               	retlw	43	;'+'
   445  0354  3443               	retlw	67	;'C'
   446  0355  3457               	retlw	87	;'W'
   447  0356  344C               	retlw	76	;'L'
   448  0357  3441               	retlw	65	;'A'
   449  0358  3450               	retlw	80	;'P'
   450  0359  344F               	retlw	79	;'O'
   451  035A  3450               	retlw	80	;'P'
   452  035B  3454               	retlw	84	;'T'
   453  035C  343D               	retlw	61	;'='
   454  035D  3431               	retlw	49	;'1'
   455  035E  342C               	retlw	44	;','
   456  035F  3431               	retlw	49	;'1'
   457  0360  3432               	retlw	50	;'2'
   458  0361  340D               	retlw	13
   459  0362  340A               	retlw	10
   460  0363  3400               	retlw	0
   461                           
   462                           	psect	stringtext2
   463  0375                     __pstringtext2:	
   464  0375                     STR_13:	
   465  0375  3453               	retlw	83	;'S'
   466  0376  3449               	retlw	73	;'I'
   467  0377  3447               	retlw	71	;'G'
   468  0378  3446               	retlw	70	;'F'
   469  0379  344F               	retlw	79	;'O'
   470  037A  3458               	retlw	88	;'X'
   471  037B  345F               	retlw	95	;'_'
   472  037C  3453               	retlw	83	;'S'
   473  037D  3454               	retlw	84	;'T'
   474  037E  3441               	retlw	65	;'A'
   475  037F  3452               	retlw	82	;'R'
   476  0380  3454               	retlw	84	;'T'
   477  0381  340D               	retlw	13
   478  0382  340A               	retlw	10
   479  0383  3400               	retlw	0
   480                           
   481                           	psect	stringtext3
   482  0384                     __pstringtext3:	
   483  0384                     STR_15:	
   484  0384  3453               	retlw	83	;'S'
   485  0385  3449               	retlw	73	;'I'
   486  0386  3447               	retlw	71	;'G'
   487  0387  3446               	retlw	70	;'F'
   488  0388  344F               	retlw	79	;'O'
   489  0389  3458               	retlw	88	;'X'
   490  038A  345F               	retlw	95	;'_'
   491  038B  3445               	retlw	69	;'E'
   492  038C  344E               	retlw	78	;'N'
   493  038D  3444               	retlw	68	;'D'
   494  038E  340D               	retlw	13
   495  038F  340A               	retlw	10
   496  0390  3400               	retlw	0
   497                           
   498                           	psect	stringtext4
   499  0391                     __pstringtext4:	
   500  0391                     STR_1:	
   501  0391  3457               	retlw	87	;'W'
   502  0392  3449               	retlw	73	;'I'
   503  0393  3446               	retlw	70	;'F'
   504  0394  3449               	retlw	73	;'I'
   505  0395  345F               	retlw	95	;'_'
   506  0396  3453               	retlw	83	;'S'
   507  0397  3454               	retlw	84	;'T'
   508  0398  3441               	retlw	65	;'A'
   509  0399  3452               	retlw	82	;'R'
   510  039A  3454               	retlw	84	;'T'
   511  039B  340D               	retlw	13
   512  039C  340A               	retlw	10
   513  039D  3400               	retlw	0
   514                           
   515                           	psect	stringtext5
   516  039E                     __pstringtext5:	
   517  039E                     STR_22:	
   518  039E  3453               	retlw	83	;'S'
   519  039F  3445               	retlw	69	;'E'
   520  03A0  344E               	retlw	78	;'N'
   521  03A1  3444               	retlw	68	;'D'
   522  03A2  345F               	retlw	95	;'_'
   523  03A3  3453               	retlw	83	;'S'
   524  03A4  3449               	retlw	73	;'I'
   525  03A5  3447               	retlw	71	;'G'
   526  03A6  3446               	retlw	70	;'F'
   527  03A7  344F               	retlw	79	;'O'
   528  03A8  3458               	retlw	88	;'X'
   529  03A9  343A               	retlw	58	;':'
   530  03AA  3400               	retlw	0
   531                           
   532                           	psect	stringtext6
   533  03AB                     __pstringtext6:	
   534  03AB                     STR_6:	
   535  03AB  3441               	retlw	65	;'A'
   536  03AC  3454               	retlw	84	;'T'
   537  03AD  342B               	retlw	43	;'+'
   538  03AE  3443               	retlw	67	;'C'
   539  03AF  3452               	retlw	82	;'R'
   540  03B0  3445               	retlw	69	;'E'
   541  03B1  3447               	retlw	71	;'G'
   542  03B2  343D               	retlw	61	;'='
   543  03B3  3432               	retlw	50	;'2'
   544  03B4  340D               	retlw	13
   545  03B5  340A               	retlw	10
   546  03B6  3400               	retlw	0
   547                           
   548                           	psect	stringtext7
   549  03B7                     __pstringtext7:	
   550  03B7                     STR_5:	
   551  03B7  3447               	retlw	71	;'G'
   552  03B8  3453               	retlw	83	;'S'
   553  03B9  344D               	retlw	77	;'M'
   554  03BA  345F               	retlw	95	;'_'
   555  03BB  3453               	retlw	83	;'S'
   556  03BC  3454               	retlw	84	;'T'
   557  03BD  3441               	retlw	65	;'A'
   558  03BE  3452               	retlw	82	;'R'
   559  03BF  3454               	retlw	84	;'T'
   560  03C0  340D               	retlw	13
   561  03C1  340A               	retlw	10
   562  03C2  3400               	retlw	0
   563                           
   564                           	psect	stringtext8
   565  03C3                     __pstringtext8:	
   566  03C3                     STR_10:	
   567  03C3  3447               	retlw	71	;'G'
   568  03C4  3450               	retlw	80	;'P'
   569  03C5  3453               	retlw	83	;'S'
   570  03C6  345F               	retlw	95	;'_'
   571  03C7  3453               	retlw	83	;'S'
   572  03C8  3454               	retlw	84	;'T'
   573  03C9  3441               	retlw	65	;'A'
   574  03CA  3452               	retlw	82	;'R'
   575  03CB  3454               	retlw	84	;'T'
   576  03CC  340D               	retlw	13
   577  03CD  340A               	retlw	10
   578  03CE  3400               	retlw	0
   579                           
   580                           	psect	stringtext9
   581  03CF                     __pstringtext9:	
   582  03CF                     STR_8:	
   583  03CF  3441               	retlw	65	;'A'
   584  03D0  3454               	retlw	84	;'T'
   585  03D1  342B               	retlw	43	;'+'
   586  03D2  3443               	retlw	67	;'C'
   587  03D3  3452               	retlw	82	;'R'
   588  03D4  3445               	retlw	69	;'E'
   589  03D5  3447               	retlw	71	;'G'
   590  03D6  343F               	retlw	63	;'?'
   591  03D7  340D               	retlw	13
   592  03D8  340A               	retlw	10
   593  03D9  3400               	retlw	0
   594                           
   595                           	psect	stringtext10
   596  03DA                     __pstringtext10:	
   597  03DA                     STR_4:	
   598  03DA  3457               	retlw	87	;'W'
   599  03DB  3449               	retlw	73	;'I'
   600  03DC  3446               	retlw	70	;'F'
   601  03DD  3449               	retlw	73	;'I'
   602  03DE  345F               	retlw	95	;'_'
   603  03DF  3445               	retlw	69	;'E'
   604  03E0  344E               	retlw	78	;'N'
   605  03E1  3444               	retlw	68	;'D'
   606  03E2  340D               	retlw	13
   607  03E3  340A               	retlw	10
   608  03E4  3400               	retlw	0
   609                           
   610                           	psect	stringtext11
   611  03E5                     __pstringtext11:	
   612  03E5                     STR_20:	
   613  03E5  3447               	retlw	71	;'G'
   614  03E6  3445               	retlw	69	;'E'
   615  03E7  3454               	retlw	84	;'T'
   616  03E8  345F               	retlw	95	;'_'
   617  03E9  3457               	retlw	87	;'W'
   618  03EA  3449               	retlw	73	;'I'
   619  03EB  3446               	retlw	70	;'F'
   620  03EC  3449               	retlw	73	;'I'
   621  03ED  340D               	retlw	13
   622  03EE  340A               	retlw	10
   623  03EF  3400               	retlw	0
   624                           
   625                           	psect	stringtext12
   626  03F0                     __pstringtext12:	
   627  03F0                     STR_3:	
   628  03F0  3441               	retlw	65	;'A'
   629  03F1  3454               	retlw	84	;'T'
   630  03F2  342B               	retlw	43	;'+'
   631  03F3  3443               	retlw	67	;'C'
   632  03F4  3457               	retlw	87	;'W'
   633  03F5  344C               	retlw	76	;'L'
   634  03F6  3441               	retlw	65	;'A'
   635  03F7  3450               	retlw	80	;'P'
   636  03F8  340D               	retlw	13
   637  03F9  340A               	retlw	10
   638  03FA  3400               	retlw	0
   639                           
   640                           	psect	stringtext13
   641  03FB                     __pstringtext13:	
   642  03FB                     STR_9:	
   643  03FB  3447               	retlw	71	;'G'
   644  03FC  3453               	retlw	83	;'S'
   645  03FD  344D               	retlw	77	;'M'
   646  03FE  345F               	retlw	95	;'_'
   647  03FF  3445               	retlw	69	;'E'
   648  0400  344E               	retlw	78	;'N'
   649  0401  3444               	retlw	68	;'D'
   650  0402  340D               	retlw	13
   651  0403  340A               	retlw	10
   652  0404  3400               	retlw	0
   653                           
   654                           	psect	stringtext14
   655  0405                     __pstringtext14:	
   656  0405                     STR_12:	
   657  0405  3447               	retlw	71	;'G'
   658  0406  3450               	retlw	80	;'P'
   659  0407  3453               	retlw	83	;'S'
   660  0408  345F               	retlw	95	;'_'
   661  0409  3445               	retlw	69	;'E'
   662  040A  344E               	retlw	78	;'N'
   663  040B  3444               	retlw	68	;'D'
   664  040C  340D               	retlw	13
   665  040D  340A               	retlw	10
   666  040E  3400               	retlw	0
   667                           
   668                           	psect	stringtext15
   669  040F                     __pstringtext15:	
   670  040F                     STR_21:	
   671  040F  3447               	retlw	71	;'G'
   672  0410  3445               	retlw	69	;'E'
   673  0411  3454               	retlw	84	;'T'
   674  0412  345F               	retlw	95	;'_'
   675  0413  3441               	retlw	65	;'A'
   676  0414  344C               	retlw	76	;'L'
   677  0415  344C               	retlw	76	;'L'
   678  0416  340D               	retlw	13
   679  0417  340A               	retlw	10
   680  0418  3400               	retlw	0
   681                           
   682                           	psect	stringtext16
   683  0419                     __pstringtext16:	
   684  0419                     STR_19:	
   685  0419  3447               	retlw	71	;'G'
   686  041A  3445               	retlw	69	;'E'
   687  041B  3454               	retlw	84	;'T'
   688  041C  345F               	retlw	95	;'_'
   689  041D  3447               	retlw	71	;'G'
   690  041E  3453               	retlw	83	;'S'
   691  041F  344D               	retlw	77	;'M'
   692  0420  340D               	retlw	13
   693  0421  340A               	retlw	10
   694  0422  3400               	retlw	0
   695                           
   696                           	psect	stringtext17
   697  0423                     __pstringtext17:	
   698  0423                     STR_18:	
   699  0423  3447               	retlw	71	;'G'
   700  0424  3445               	retlw	69	;'E'
   701  0425  3454               	retlw	84	;'T'
   702  0426  345F               	retlw	95	;'_'
   703  0427  3447               	retlw	71	;'G'
   704  0428  3450               	retlw	80	;'P'
   705  0429  3453               	retlw	83	;'S'
   706  042A  340D               	retlw	13
   707  042B  340A               	retlw	10
   708  042C  3400               	retlw	0
   709                           
   710                           	psect	stringtext18
   711  0441                     __pstringtext18:	
   712  0441                     STR_7:	
   713  0441  3441               	retlw	65	;'A'
   714  0442  3454               	retlw	84	;'T'
   715  0443  342B               	retlw	43	;'+'
   716  0444  3443               	retlw	67	;'C'
   717  0445  3453               	retlw	83	;'S'
   718  0446  3451               	retlw	81	;'Q'
   719  0447  340D               	retlw	13
   720  0448  340A               	retlw	10
   721  0449  3400               	retlw	0
   722                           
   723                           	psect	stringtext19
   724  044A                     __pstringtext19:	
   725  044A                     STR_11:	
   726  044A  3424               	retlw	36	;'$'
   727  044B  3447               	retlw	71	;'G'
   728  044C  3450               	retlw	80	;'P'
   729  044D  3447               	retlw	71	;'G'
   730  044E  3447               	retlw	71	;'G'
   731  044F  3441               	retlw	65	;'A'
   732  0450  342C               	retlw	44	;','
   733  0451  3400               	retlw	0
   734                           
   735                           	psect	stringtext20
   736  0462                     __pstringtext20:	
   737  0462                     STR_16:	
   738  0462  3441               	retlw	65	;'A'
   739  0463  3454               	retlw	84	;'T'
   740  0464  3424               	retlw	36	;'$'
   741  0465  3453               	retlw	83	;'S'
   742  0466  3446               	retlw	70	;'F'
   743  0467  343D               	retlw	61	;'='
   744  0468  3400               	retlw	0
   745                           
   746                           	psect	stringtext21
   747  0469                     __pstringtext21:	
   748  0469                     STR_14:	
   749  0469  3441               	retlw	65	;'A'
   750  046A  3454               	retlw	84	;'T'
   751  046B  340D               	retlw	13
   752  046C  340A               	retlw	10
   753  046D  3400               	retlw	0
   754                           
   755                           	psect	stringtext22
   756  0000                     __pstringtext22:	
   757  0361                     
   758                           ; #config settings
   759  0000                     
   760                           	psect	cinit
   761  0027                     start_initialization:	
   762  0027                     __initialization:	
   763                           
   764                           ; Clear objects allocated to COMMON
   765  0027  01FB               	clrf	__pbssCOMMON& (0+127)
   766                           
   767                           ; Clear objects allocated to BANK0
   768  0028  0140               	movlb	0	; select bank0
   769  0029  01E5               	clrf	__pbssBANK0& (0+127)
   770  002A  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   771  002B  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   772  002C  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   773  002D                     end_of_initialization:	
   774                           ;End of C runtime variable initialization code
   775                           
   776  002D                     __end_of__initialization:	
   777  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   778  002E  0140               	movlb	0
   779  002F  3182  2ACF         	ljmp	_main	;jump to C main() function
   780                           
   781                           	psect	bssCOMMON
   782  007B                     __pbssCOMMON:	
   783  007B                     _timerDone:	
   784  007B                     	ds	1
   785                           
   786                           	psect	bssBANK0
   787  0065                     __pbssBANK0:	
   788  0065                     _timerActual:	
   789  0065                     	ds	2
   790  0067                     _timerSetpoint:	
   791  0067                     	ds	2
   792                           
   793                           	psect	cstackCOMMON
   794  0070                     __pcstackCOMMON:	
   795  0070                     ?_initBTSerial:	
   796  0070                     ?_setActivePeripheral:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_waitForCommand:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_main:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_serialWritePeripheral:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_serialReadPeripheral:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_serialWriteBT:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_serialReadBT:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_timerCount:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ??_timerCount:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_getWiFiData:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_getGSMData:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_getGPSData:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_sendSigfox:	
   833                           ; 1 bytes @ 0x0
   834                           
   835                           
   836                           ; 1 bytes @ 0x0
   837  0070                     	ds	1
   838  0071                     ??_initBTSerial:	
   839  0071                     ??_setActivePeripheral:	
   840                           ; 1 bytes @ 0x1
   841                           
   842  0071                     ??_serialWritePeripheral:	
   843                           ; 1 bytes @ 0x1
   844                           
   845  0071                     ??_serialReadPeripheral:	
   846                           ; 1 bytes @ 0x1
   847                           
   848  0071                     ?_serialFindPeripheral:	
   849                           ; 1 bytes @ 0x1
   850                           
   851  0071                     ??_serialWriteBT:	
   852                           ; 1 bytes @ 0x1
   853                           
   854  0071                     ??_serialReadBT:	
   855                           ; 1 bytes @ 0x1
   856                           
   857  0071                     ?_startTimer:	
   858                           ; 1 bytes @ 0x1
   859                           
   860  0071                     ?_strcmp:	
   861                           ; 1 bytes @ 0x1
   862                           
   863  0071                     ?_strncmp:	
   864                           ; 2 bytes @ 0x1
   865                           
   866  0071                     serialWritePeripheral@c:	
   867                           ; 2 bytes @ 0x1
   868                           
   869  0071                     setActivePeripheral@peri:	
   870                           ; 1 bytes @ 0x1
   871                           
   872  0071                     serialWriteBT@c:	
   873                           ; 1 bytes @ 0x1
   874                           
   875  0071                     serialFindPeripheral@s:	
   876                           ; 1 bytes @ 0x1
   877                           
   878  0071                     startTimer@seconds:	
   879                           ; 2 bytes @ 0x1
   880                           
   881  0071                     strcmp@s2:	
   882                           ; 2 bytes @ 0x1
   883                           
   884  0071                     strncmp@s2:	
   885                           ; 2 bytes @ 0x1
   886                           
   887                           
   888                           ; 2 bytes @ 0x1
   889  0071                     	ds	1
   890  0072                     ?_serialPrintPeripheral:	
   891  0072                     ?_serialPrintBT:	
   892                           ; 1 bytes @ 0x2
   893                           
   894  0072                     serialPrintPeripheral@s:	
   895                           ; 1 bytes @ 0x2
   896                           
   897  0072                     serialPrintBT@s:	
   898                           ; 2 bytes @ 0x2
   899                           
   900                           
   901                           ; 2 bytes @ 0x2
   902  0072                     	ds	1
   903  0073                     ??_strcmp:	
   904  0073                     ??_serialFindPeripheral:	
   905                           ; 1 bytes @ 0x3
   906                           
   907  0073                     ??_startTimer:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     strncmp@len:	
   911                           ; 1 bytes @ 0x3
   912                           
   913                           
   914                           ; 2 bytes @ 0x3
   915  0073                     	ds	1
   916  0074                     ??_serialPrintPeripheral:	
   917  0074                     ??_serialPrintBT:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     strcmp@r:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     serialFindPeripheral@i:	
   924                           ; 1 bytes @ 0x4
   925                           
   926                           
   927                           ; 2 bytes @ 0x4
   928  0074                     	ds	1
   929  0075                     ??_strncmp:	
   930  0075                     strcmp@s1:	
   931                           ; 1 bytes @ 0x5
   932                           
   933  0075                     serialPrintPeripheral@i:	
   934                           ; 1 bytes @ 0x5
   935                           
   936  0075                     serialPrintBT@i:	
   937                           ; 2 bytes @ 0x5
   938                           
   939                           
   940                           ; 2 bytes @ 0x5
   941  0075                     	ds	2
   942  0077                     ??_getWiFiData:	
   943  0077                     ??_getGSMData:	
   944                           ; 1 bytes @ 0x7
   945                           
   946  0077                     ??_getGPSData:	
   947                           ; 1 bytes @ 0x7
   948                           
   949  0077                     ??_sendSigfox:	
   950                           ; 1 bytes @ 0x7
   951                           
   952  0077                     sendSigfox@hexMessage:	
   953                           ; 1 bytes @ 0x7
   954                           
   955  0077                     strncmp@s1:	
   956                           ; 1 bytes @ 0x7
   957                           
   958                           
   959                           ; 1 bytes @ 0x7
   960  0077                     	ds	1
   961  0078                     getGPSData@found:	
   962                           
   963                           ; 1 bytes @ 0x8
   964  0078                     	ds	1
   965  0079                     getGPSData@c:	
   966                           
   967                           ; 1 bytes @ 0x9
   968  0079                     	ds	1
   969  007A                     ??_waitForCommand:	
   970                           
   971                           ; 1 bytes @ 0xA
   972  007A                     	ds	1
   973                           
   974                           	psect	cstackBANK0
   975  0020                     __pcstackBANK0:	
   976  0020                     waitForCommand@message:	
   977                           
   978                           ; 30 bytes @ 0x0
   979  0020                     	ds	30
   980  003E                     waitForCommand@command:	
   981                           
   982                           ; 32 bytes @ 0x1E
   983  003E                     	ds	32
   984  005E                     waitForCommand@i:	
   985                           
   986                           ; 2 bytes @ 0x3E
   987  005E                     	ds	2
   988  0060                     waitForCommand@i_431:	
   989                           
   990                           ; 2 bytes @ 0x40
   991  0060                     	ds	2
   992  0062                     waitForCommand@p:	
   993                           
   994                           ; 1 bytes @ 0x42
   995  0062                     	ds	1
   996  0063                     ??_main:	
   997                           
   998                           ; 1 bytes @ 0x43
   999  0063                     	ds	2
  1000                           
  1001                           	psect	maintext
  1002  02CF                     __pmaintext:	
  1003 ;;
  1004 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1005 ;;
  1006 ;; *************** function _main *****************
  1007 ;; Defined at:
  1008 ;;		line 88 in file "main.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : B3F/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1022 ;;      Params:         0       0       0       0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0       0
  1024 ;;      Temps:          0       2       0       0       0       0       0       0
  1025 ;;      Totals:         0       2       0       0       0       0       0       0
  1026 ;;Total ram usage:        2 bytes
  1027 ;; Hardware stack levels required when called:    5
  1028 ;; This function calls:
  1029 ;;		_initBTSerial
  1030 ;;		_setActivePeripheral
  1031 ;;		_waitForCommand
  1032 ;; This function is called by:
  1033 ;;		Startup code after reset
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           
  1038                           ;psect for function _main
  1039  02CF                     _main:	
  1040                           
  1041                           ;main.c: 90: ANSELA = 0;
  1042                           
  1043                           ;incstack = 0
  1044                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1045  02CF  017E               	movlb	62	; select bank62
  1046  02D0  01B8               	clrf	56	;volatile
  1047                           
  1048                           ;main.c: 91: ANSELB = 0;
  1049  02D1  01C3               	clrf	67	;volatile
  1050                           
  1051                           ;main.c: 92: ANSELC = 0;
  1052  02D2  01CE               	clrf	78	;volatile
  1053                           
  1054                           ;main.c: 95: INTCONbits.GIE = 1;
  1055  02D3  178B               	bsf	11,7	;volatile
  1056                           
  1057                           ;main.c: 96: INTCONbits.PEIE = 1;
  1058  02D4  170B               	bsf	11,6	;volatile
  1059                           
  1060                           ;main.c: 99: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1061  02D5  30CB               	movlw	203
  1062  02D6  0140               	movlb	0	; select bank0
  1063  02D7  00E4               	movwf	??_main+1
  1064  02D8  30EC               	movlw	236
  1065  02D9  00E3               	movwf	??_main
  1066  02DA  3084               	movlw	132
  1067  02DB                     u837:	
  1068  02DB  0B89               	decfsz	9,f
  1069  02DC  2ADB               	goto	u837
  1070  02DD  0BE3               	decfsz	??_main,f
  1071  02DE  2ADB               	goto	u837
  1072  02DF  0BE4               	decfsz	??_main+1,f
  1073  02E0  2ADB               	goto	u837
  1074  02E1  0000               	nop
  1075                           
  1076                           ;main.c: 100: initBTSerial();
  1077  02E2  3183  233B  3182   	fcall	_initBTSerial
  1078                           
  1079                           ;main.c: 101: setActivePeripheral(sigfox);
  1080  02E5  3002               	movlw	2
  1081  02E6  3181  214E  3182   	fcall	_setActivePeripheral
  1082  02E9                     l1260:	
  1083                           ;main.c: 103: while (1) {
  1084                           
  1085                           
  1086                           ;main.c: 104: waitForCommand();
  1087  02E9  3180  2031  3182   	fcall	_waitForCommand
  1088  02EC  2AE9               	goto	l1260
  1089  02ED                     __end_of_main:	
  1090                           ;main.c: 106: }
  1091                           ;main.c: 107: return;
  1092                           
  1093                           
  1094                           	psect	text1
  1095  0031                     __ptext1:	
  1096 ;; *************** function _waitForCommand *****************
  1097 ;; Defined at:
  1098 ;;		line 380 in file "main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  message        30    0[BANK0 ] unsigned char [30]
  1103 ;;  i               2   64[BANK0 ] int 
  1104 ;;  p               1   66[BANK0 ] PTR unsigned char 
  1105 ;;		 -> waitForCommand@command(32), 
  1106 ;;  command        32   30[BANK0 ] unsigned char [32]
  1107 ;;  i               2   62[BANK0 ] int 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1117 ;;      Params:         0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0      67       0       0       0       0       0       0
  1119 ;;      Temps:          1       0       0       0       0       0       0       0
  1120 ;;      Totals:         1      67       0       0       0       0       0       0
  1121 ;;Total ram usage:       68 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    4
  1124 ;; This function calls:
  1125 ;;		_getGPSData
  1126 ;;		_getGSMData
  1127 ;;		_getWiFiData
  1128 ;;		_sendSigfox
  1129 ;;		_serialReadBT
  1130 ;;		_startTimer
  1131 ;;		_strcmp
  1132 ;;		_strncmp
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _waitForCommand
  1140  0031                     _waitForCommand:	
  1141  0031                     l210:	
  1142                           ;main.c: 381: char command[32];
  1143                           ;main.c: 383: while (!PIR3bits.RC2IF) {
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _waitForCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1147                           
  1148  0031  014E               	movlb	14	; select bank14
  1149  0032  1F8F               	btfss	15,7	;volatile
  1150  0033  2831               	goto	l210
  1151                           
  1152                           ;main.c: 384: }
  1153                           ;main.c: 386: startTimer(2);
  1154  0034  3002               	movlw	2
  1155  0035  00F1               	movwf	startTimer@seconds
  1156  0036  3000               	movlw	0
  1157  0037  00F2               	movwf	startTimer@seconds+1
  1158  0038  3183  2364  3180   	fcall	_startTimer
  1159                           
  1160                           ;main.c: 387: int i = 0;
  1161  003B  0140               	movlb	0	; select bank0
  1162  003C  01DE               	clrf	waitForCommand@i
  1163  003D  01DF               	clrf	waitForCommand@i+1
  1164  003E                     l1164:	
  1165                           ;main.c: 388: while (!timerDone) {
  1166                           
  1167  003E  087B               	movf	_timerDone,w
  1168  003F  1D03               	btfss	3,2
  1169  0040  2854               	goto	l1166
  1170                           
  1171                           ;main.c: 389: if (PIR3bits.RC2IF) {
  1172  0041  014E               	movlb	14	; select bank14
  1173  0042  1F8F               	btfss	15,7	;volatile
  1174  0043  283E               	goto	l1164
  1175                           
  1176                           ;main.c: 390: command[i] = serialReadBT();
  1177  0044  3184  242D  3180   	fcall	_serialReadBT
  1178  0047  00FA               	movwf	??_waitForCommand
  1179  0048  0140               	movlb	0	; select bank0
  1180  0049  085E               	movf	waitForCommand@i,w
  1181  004A  3E3E               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1182  004B  0086               	movwf	6
  1183  004C  0187               	clrf	7
  1184  004D  087A               	movf	??_waitForCommand,w
  1185  004E  0081               	movwf	1
  1186                           
  1187                           ;main.c: 391: i++;
  1188  004F  3001               	movlw	1
  1189  0050  07DE               	addwf	waitForCommand@i,f
  1190  0051  3000               	movlw	0
  1191  0052  3DDF               	addwfc	waitForCommand@i+1,f
  1192  0053  283E               	goto	l1164
  1193  0054                     l1166:	
  1194                           
  1195                           ;main.c: 392: }
  1196                           ;main.c: 393: }
  1197                           ;main.c: 394: command[i] = '\0';
  1198  0054  0140               	movlb	0	; select bank0
  1199  0055  085E               	movf	waitForCommand@i,w
  1200  0056  3E3E               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1201  0057  0086               	movwf	6
  1202  0058  0187               	clrf	7
  1203  0059  0181               	clrf	1
  1204                           
  1205                           ;main.c: 397: if (strcmp(command, "GET_GPS\r\n") == 0) {
  1206  005A  3023               	movlw	low (STR_18| (0+32768))
  1207  005B  00F1               	movwf	strcmp@s2
  1208  005C  3084               	movlw	high (STR_18| (0+32768))
  1209  005D  00F2               	movwf	strcmp@s2+1
  1210  005E  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1211  005F  3182  2286  3180   	fcall	_strcmp
  1212  0062  0871               	movf	?_strcmp,w
  1213  0063  0472               	iorwf	?_strcmp+1,w
  1214  0064  1D03               	btfss	3,2
  1215  0065  2869               	goto	l1172
  1216                           
  1217                           ;main.c: 398: getGPSData();
  1218  0066  3181  21FB         	fcall	_getGPSData
  1219                           
  1220                           ;main.c: 399: } else if (strcmp(command, "GET_GSM\r\n") == 0) {
  1221  0068  0008               	return
  1222  0069                     l1172:	
  1223  0069  3019               	movlw	low (STR_19| (0+32768))
  1224  006A  00F1               	movwf	strcmp@s2
  1225  006B  3084               	movlw	high (STR_19| (0+32768))
  1226  006C  00F2               	movwf	strcmp@s2+1
  1227  006D  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1228  006E  3182  2286  3180   	fcall	_strcmp
  1229  0071  0871               	movf	?_strcmp,w
  1230  0072  0472               	iorwf	?_strcmp+1,w
  1231  0073  1D03               	btfss	3,2
  1232  0074  2878               	goto	l1176
  1233                           
  1234                           ;main.c: 400: getGSMData();
  1235  0075  3180  20D7         	fcall	_getGSMData
  1236                           
  1237                           ;main.c: 401: } else if (strcmp(command, "GET_WIFI\r\n") == 0) {
  1238  0077  0008               	return
  1239  0078                     l1176:	
  1240  0078  30E5               	movlw	low (STR_20| (0+32768))
  1241  0079  00F1               	movwf	strcmp@s2
  1242  007A  3083               	movlw	high (STR_20| (0+32768))
  1243  007B  00F2               	movwf	strcmp@s2+1
  1244  007C  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1245  007D  3182  2286  3180   	fcall	_strcmp
  1246  0080  0871               	movf	?_strcmp,w
  1247  0081  0472               	iorwf	?_strcmp+1,w
  1248  0082  1D03               	btfss	3,2
  1249  0083  2887               	goto	l1180
  1250                           
  1251                           ;main.c: 402: getWiFiData();
  1252  0084  3181  21A7         	fcall	_getWiFiData
  1253                           
  1254                           ;main.c: 403: } else if (strcmp(command, "GET_ALL\r\n") == 0) {
  1255  0086  0008               	return
  1256  0087                     l1180:	
  1257  0087  300F               	movlw	low (STR_21| (0+32768))
  1258  0088  00F1               	movwf	strcmp@s2
  1259  0089  3084               	movlw	high (STR_21| (0+32768))
  1260  008A  00F2               	movwf	strcmp@s2+1
  1261  008B  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1262  008C  3182  2286  3180   	fcall	_strcmp
  1263  008F  0871               	movf	?_strcmp,w
  1264  0090  0472               	iorwf	?_strcmp+1,w
  1265  0091  1D03               	btfss	3,2
  1266  0092  289C               	goto	l1184
  1267                           
  1268                           ;main.c: 404: getGPSData();
  1269  0093  3181  21FB  3180   	fcall	_getGPSData
  1270                           
  1271                           ;main.c: 405: getGSMData();
  1272  0096  3180  20D7  3180   	fcall	_getGSMData
  1273                           
  1274                           ;main.c: 406: getWiFiData();
  1275  0099  3181  21A7         	fcall	_getWiFiData
  1276                           
  1277                           ;main.c: 407: } else if (strncmp(command, "SEND_SIGFOX:", 12) == 0) {
  1278  009B  0008               	return
  1279  009C                     l1184:	
  1280  009C  309E               	movlw	low (STR_22| (0+32768))
  1281  009D  00F1               	movwf	strncmp@s2
  1282  009E  3083               	movlw	high (STR_22| (0+32768))
  1283  009F  00F2               	movwf	strncmp@s2+1
  1284  00A0  300C               	movlw	12
  1285  00A1  00F3               	movwf	strncmp@len
  1286  00A2  3000               	movlw	0
  1287  00A3  00F4               	movwf	strncmp@len+1
  1288  00A4  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1289  00A5  3182  2246  3180   	fcall	_strncmp
  1290  00A8  0871               	movf	?_strncmp,w
  1291  00A9  0472               	iorwf	?_strncmp+1,w
  1292  00AA  1D03               	btfss	3,2
  1293  00AB  0008               	return
  1294                           
  1295                           ;main.c: 408: char * p;
  1296                           ;main.c: 409: p = command + 12;
  1297  00AC  304A               	movlw	(low ((waitForCommand@command| 0+12)))& (0+255)
  1298  00AD  00FA               	movwf	??_waitForCommand
  1299  00AE  087A               	movf	??_waitForCommand,w
  1300  00AF  0140               	movlb	0	; select bank0
  1301  00B0  00E2               	movwf	waitForCommand@p
  1302                           
  1303                           ;main.c: 410: char message[30];
  1304                           ;main.c: 411: int i = 0;
  1305  00B1  01E0               	clrf	waitForCommand@i_431
  1306  00B2  01E1               	clrf	waitForCommand@i_431+1
  1307  00B3                     l1196:	
  1308                           ;main.c: 413: while(*p != '\r') {
  1309                           
  1310  00B3  0862               	movf	waitForCommand@p,w
  1311  00B4  0086               	movwf	6
  1312  00B5  0187               	clrf	7
  1313  00B6  300D               	movlw	13
  1314  00B7  0601               	xorwf	1,w
  1315  00B8  1903               	btfsc	3,2
  1316  00B9  28CE               	goto	l1198
  1317                           
  1318                           ;main.c: 414: message[i] = *p;
  1319  00BA  0862               	movf	waitForCommand@p,w
  1320  00BB  0086               	movwf	6
  1321  00BC  0187               	clrf	7
  1322  00BD  0801               	movf	1,w
  1323  00BE  00FA               	movwf	??_waitForCommand
  1324  00BF  0860               	movf	waitForCommand@i_431,w
  1325  00C0  3E20               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1326  00C1  0086               	movwf	6
  1327  00C2  0187               	clrf	7
  1328  00C3  087A               	movf	??_waitForCommand,w
  1329  00C4  0081               	movwf	1
  1330                           
  1331                           ;main.c: 415: p++;
  1332  00C5  3001               	movlw	1
  1333  00C6  00FA               	movwf	??_waitForCommand
  1334  00C7  087A               	movf	??_waitForCommand,w
  1335  00C8  07E2               	addwf	waitForCommand@p,f
  1336                           
  1337                           ;main.c: 416: i++;
  1338  00C9  3001               	movlw	1
  1339  00CA  07E0               	addwf	waitForCommand@i_431,f
  1340  00CB  3000               	movlw	0
  1341  00CC  3DE1               	addwfc	waitForCommand@i_431+1,f
  1342  00CD  28B3               	goto	l1196
  1343  00CE                     l1198:	
  1344                           
  1345                           ;main.c: 417: }
  1346                           ;main.c: 418: message[i] = '\0';
  1347  00CE  0860               	movf	waitForCommand@i_431,w
  1348  00CF  3E20               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1349  00D0  0086               	movwf	6
  1350  00D1  0187               	clrf	7
  1351  00D2  0181               	clrf	1
  1352                           
  1353                           ;main.c: 420: sendSigfox(message);
  1354  00D3  3020               	movlw	(low (waitForCommand@message| 0))& (0+255)
  1355  00D4  3182  22ED         	fcall	_sendSigfox
  1356  00D6  0008               	return
  1357  00D7                     __end_of_waitForCommand:	
  1358                           
  1359                           	psect	text2
  1360  0246                     __ptext2:	
  1361 ;; *************** function _strncmp *****************
  1362 ;; Defined at:
  1363 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  s1              1    wreg     PTR const unsigned char 
  1366 ;;		 -> waitForCommand@command(32), 
  1367 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1368 ;;		 -> STR_22(13), 
  1369 ;;  len             2    3[COMMON] unsigned int 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  s1              1    7[COMMON] PTR const unsigned char 
  1372 ;;		 -> waitForCommand@command(32), 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    1[COMMON] int 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1382 ;;      Params:         4       0       0       0       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0       0       0       0
  1385 ;;      Totals:         7       0       0       0       0       0       0       0
  1386 ;;Total ram usage:        7 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_waitForCommand
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _strncmp
  1398  0246                     _strncmp:	
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  1402                           ;strncmp@s1 stored from wreg
  1403  0246  00F7               	movwf	strncmp@s1
  1404  0247                     l1148:	
  1405  0247  3001               	movlw	1
  1406  0248  02F3               	subwf	strncmp@len,f
  1407  0249  3000               	movlw	0
  1408  024A  3BF4               	subwfb	strncmp@len+1,f
  1409  024B  0A73               	incf	strncmp@len,w
  1410  024C  1903               	btfsc	3,2
  1411  024D  0A74               	incf	strncmp@len+1,w
  1412  024E  1903               	btfsc	3,2
  1413  024F  2A83               	goto	l1150
  1414  0250  0877               	movf	strncmp@s1,w
  1415  0251  0086               	movwf	6
  1416  0252  0187               	clrf	7
  1417  0253  0801               	movf	1,w
  1418  0254  1903               	btfsc	3,2
  1419  0255  2A63               	goto	l1140
  1420  0256  0871               	movf	strncmp@s2,w
  1421  0257  0084               	movwf	4
  1422  0258  0872               	movf	strncmp@s2+1,w
  1423  0259  0085               	movwf	5
  1424  025A  0800               	movf	0,w	;code access
  1425  025B  00F5               	movwf	??_strncmp
  1426  025C  0877               	movf	strncmp@s1,w
  1427  025D  0086               	movwf	6
  1428  025E  0187               	clrf	7
  1429  025F  0801               	movf	1,w
  1430  0260  0675               	xorwf	??_strncmp,w
  1431  0261  1903               	skipnz
  1432  0262  2A7A               	goto	l1144
  1433  0263                     l1140:	
  1434  0263  0871               	movf	strncmp@s2,w
  1435  0264  0084               	movwf	4
  1436  0265  0872               	movf	strncmp@s2+1,w
  1437  0266  0085               	movwf	5
  1438  0267  0800               	movf	0,w	;code access
  1439  0268  00F5               	movwf	??_strncmp
  1440  0269  01F6               	clrf	??_strncmp+1
  1441  026A  09F5               	comf	??_strncmp,f
  1442  026B  09F6               	comf	??_strncmp+1,f
  1443  026C  0AF5               	incf	??_strncmp,f
  1444  026D  1903               	skipnz
  1445  026E  0AF6               	incf	??_strncmp+1,f
  1446  026F  0877               	movf	strncmp@s1,w
  1447  0270  0086               	movwf	6
  1448  0271  0187               	clrf	7
  1449  0272  0801               	movf	1,w
  1450  0273  0775               	addwf	??_strncmp,w
  1451  0274  00F1               	movwf	?_strncmp
  1452  0275  0876               	movf	??_strncmp+1,w
  1453  0276  1803               	skipnc
  1454  0277  0A76               	incf	??_strncmp+1,w
  1455  0278  00F2               	movwf	?_strncmp+1
  1456  0279  0008               	return
  1457  027A                     l1144:	
  1458  027A  3001               	movlw	1
  1459  027B  00F5               	movwf	??_strncmp
  1460  027C  0875               	movf	??_strncmp,w
  1461  027D  07F7               	addwf	strncmp@s1,f
  1462  027E  3001               	movlw	1
  1463  027F  07F1               	addwf	strncmp@s2,f
  1464  0280  3000               	movlw	0
  1465  0281  3DF2               	addwfc	strncmp@s2+1,f
  1466  0282  2A47               	goto	l1148
  1467  0283                     l1150:	
  1468  0283  01F1               	clrf	?_strncmp
  1469  0284  01F2               	clrf	?_strncmp+1
  1470  0285  0008               	return
  1471  0286                     __end_of_strncmp:	
  1472                           
  1473                           	psect	text3
  1474  0286                     __ptext3:	
  1475 ;; *************** function _strcmp *****************
  1476 ;; Defined at:
  1477 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  s1              1    wreg     PTR const unsigned char 
  1480 ;;		 -> waitForCommand@command(32), 
  1481 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1482 ;;		 -> STR_21(10), STR_20(11), STR_19(10), STR_18(10), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1485 ;;		 -> waitForCommand@command(32), 
  1486 ;;  r               1    4[COMMON] char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2    1[COMMON] int 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1496 ;;      Params:         2       0       0       0       0       0       0       0
  1497 ;;      Locals:         2       0       0       0       0       0       0       0
  1498 ;;      Temps:          1       0       0       0       0       0       0       0
  1499 ;;      Totals:         5       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        5 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_waitForCommand
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _strcmp
  1512  0286                     _strcmp:	
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  1516                           ;strcmp@s1 stored from wreg
  1517  0286  00F5               	movwf	strcmp@s1
  1518  0287  2A90               	goto	l1126
  1519  0288                     l1124:	
  1520  0288  3001               	movlw	1
  1521  0289  00F3               	movwf	??_strcmp
  1522  028A  0873               	movf	??_strcmp,w
  1523  028B  07F5               	addwf	strcmp@s1,f
  1524  028C  3001               	movlw	1
  1525  028D  07F1               	addwf	strcmp@s2,f
  1526  028E  3000               	movlw	0
  1527  028F  3DF2               	addwfc	strcmp@s2+1,f
  1528  0290                     l1126:	
  1529  0290  0875               	movf	strcmp@s1,w
  1530  0291  0086               	movwf	6
  1531  0292  0187               	clrf	7
  1532  0293  0871               	movf	strcmp@s2,w
  1533  0294  0084               	movwf	4
  1534  0295  0872               	movf	strcmp@s2+1,w
  1535  0296  0085               	movwf	5
  1536  0297  0800               	movf	0,w	;code access
  1537  0298  3AFF               	xorlw	255
  1538  0299  3E01               	addlw	1
  1539  029A  0701               	addwf	1,w
  1540  029B  00F3               	movwf	??_strcmp
  1541  029C  0873               	movf	??_strcmp,w
  1542  029D  00F4               	movwf	strcmp@r
  1543  029E  0874               	movf	strcmp@r,w
  1544  029F  1D03               	btfss	3,2
  1545  02A0  2AA7               	goto	l1130
  1546  02A1  0875               	movf	strcmp@s1,w
  1547  02A2  0086               	movwf	6
  1548  02A3  0187               	clrf	7
  1549  02A4  0801               	movf	1,w
  1550  02A5  1D03               	btfss	3,2
  1551  02A6  2A88               	goto	l1124
  1552  02A7                     l1130:	
  1553  02A7  0874               	movf	strcmp@r,w
  1554  02A8  00F1               	movwf	?_strcmp
  1555  02A9  01F2               	clrf	?_strcmp+1
  1556  02AA  1BF1               	btfsc	?_strcmp,7
  1557  02AB  03F2               	decf	?_strcmp+1,f
  1558  02AC  0008               	return
  1559  02AD                     __end_of_strcmp:	
  1560                           
  1561                           	psect	text4
  1562  042D                     __ptext4:	
  1563 ;; *************** function _serialReadBT *****************
  1564 ;; Defined at:
  1565 ;;		line 235 in file "main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      unsigned char 
  1572 ;; Registers used:
  1573 ;;		wreg
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1579 ;;      Params:         0       0       0       0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0
  1582 ;;      Totals:         0       0       0       0       0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_waitForCommand
  1590 ;;		_serialFindBT
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _serialReadBT
  1596  042D                     _serialReadBT:	
  1597  042D                     l144:	
  1598                           ;main.c: 236: while (!PIR3bits.RC2IF) {
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _serialReadBT: [wreg]
  1602                           
  1603  042D  014E               	movlb	14	; select bank14
  1604  042E  1F8F               	btfss	15,7	;volatile
  1605  042F  2C2D               	goto	l144
  1606                           
  1607                           ;main.c: 237: }
  1608                           ;main.c: 238: if (1 == RC2STAbits.OERR) {
  1609  0430  0154               	movlb	20	; select bank20
  1610  0431  1C9D               	btfss	29,1	;volatile
  1611  0432  2C35               	goto	l1046
  1612                           
  1613                           ;main.c: 239: RC2STAbits.SPEN = 0;
  1614  0433  139D               	bcf	29,7	;volatile
  1615                           
  1616                           ;main.c: 240: RC2STAbits.SPEN = 1;
  1617  0434  179D               	bsf	29,7	;volatile
  1618  0435                     l1046:	
  1619                           
  1620                           ;main.c: 241: }
  1621                           ;main.c: 242: return RC2REG;
  1622  0435  0819               	movf	25,w	;volatile
  1623  0436  0008               	return
  1624  0437                     __end_of_serialReadBT:	
  1625                           
  1626                           	psect	text5
  1627  02ED                     __ptext5:	
  1628 ;; *************** function _sendSigfox *****************
  1629 ;; Defined at:
  1630 ;;		line 373 in file "main.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  hexMessage      1    wreg     PTR unsigned char 
  1633 ;;		 -> waitForCommand@message(30), 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  hexMessage      1    7[COMMON] PTR unsigned char 
  1636 ;;		 -> waitForCommand@message(30), 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1646 ;;      Params:         0       0       0       0       0       0       0       0
  1647 ;;      Locals:         1       0       0       0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0
  1649 ;;      Totals:         1       0       0       0       0       0       0       0
  1650 ;;Total ram usage:        1 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    3
  1653 ;; This function calls:
  1654 ;;		_serialPrintPeripheral
  1655 ;;		_setActivePeripheral
  1656 ;; This function is called by:
  1657 ;;		_waitForCommand
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _sendSigfox
  1663  02ED                     _sendSigfox:	
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _sendSigfox: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1667                           ;sendSigfox@hexMessage stored from wreg
  1668  02ED  00F7               	movwf	sendSigfox@hexMessage
  1669                           
  1670                           ;main.c: 374: setActivePeripheral(sigfox);
  1671  02EE  3002               	movlw	2
  1672  02EF  3181  214E  3182   	fcall	_setActivePeripheral
  1673                           
  1674                           ;main.c: 375: serialPrintPeripheral("AT$SF=");
  1675  02F2  3062               	movlw	low (STR_16| (0+32768))
  1676  02F3  00F2               	movwf	serialPrintPeripheral@s
  1677  02F4  3084               	movlw	high (STR_16| (0+32768))
  1678  02F5  00F3               	movwf	serialPrintPeripheral@s+1
  1679  02F6  3183  2307  3182   	fcall	_serialPrintPeripheral
  1680                           
  1681                           ;main.c: 376: serialPrintPeripheral(hexMessage);
  1682  02F9  0877               	movf	sendSigfox@hexMessage,w
  1683  02FA  00F2               	movwf	serialPrintPeripheral@s
  1684  02FB  3000               	movlw	0
  1685  02FC  00F3               	movwf	serialPrintPeripheral@s+1
  1686  02FD  3183  2307  3182   	fcall	_serialPrintPeripheral
  1687                           
  1688                           ;main.c: 377: serialPrintPeripheral("\r\n");
  1689  0300  3061               	movlw	low ((STR_2+16)| (0+32768))
  1690  0301  00F2               	movwf	serialPrintPeripheral@s
  1691  0302  3083               	movlw	high ((STR_2+16)| (0+32768))
  1692  0303  00F3               	movwf	serialPrintPeripheral@s+1
  1693  0304  3183  2307         	fcall	_serialPrintPeripheral
  1694  0306  0008               	return
  1695  0307                     __end_of_sendSigfox:	
  1696                           
  1697                           	psect	text6
  1698  01A7                     __ptext6:	
  1699 ;; *************** function _getWiFiData *****************
  1700 ;; Defined at:
  1701 ;;		line 282 in file "main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1715 ;;      Params:         0       0       0       0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0
  1717 ;;      Temps:          2       0       0       0       0       0       0       0
  1718 ;;      Totals:         2       0       0       0       0       0       0       0
  1719 ;;Total ram usage:        2 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    3
  1722 ;; This function calls:
  1723 ;;		_serialPrintBT
  1724 ;;		_serialPrintPeripheral
  1725 ;;		_serialReadPeripheral
  1726 ;;		_serialWriteBT
  1727 ;;		_setActivePeripheral
  1728 ;;		_startTimer
  1729 ;; This function is called by:
  1730 ;;		_waitForCommand
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _getWiFiData
  1736  01A7                     _getWiFiData:	
  1737                           
  1738                           ;main.c: 283: serialPrintBT("WIFI_START\r\n");
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _getWiFiData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1742  01A7  3091               	movlw	low (STR_1| (0+32768))
  1743  01A8  00F2               	movwf	serialPrintBT@s
  1744  01A9  3083               	movlw	high (STR_1| (0+32768))
  1745  01AA  00F3               	movwf	serialPrintBT@s+1
  1746  01AB  3183  2321  3181   	fcall	_serialPrintBT
  1747                           
  1748                           ;main.c: 284: setActivePeripheral(wifi);
  1749  01AE  3001               	movlw	1
  1750  01AF  3181  214E  3181   	fcall	_setActivePeripheral
  1751                           
  1752                           ;main.c: 285: serialPrintPeripheral("AT+CWLAPOPT=1,12\r\n");
  1753  01B2  3051               	movlw	low (STR_2| (0+32768))
  1754  01B3  00F2               	movwf	serialPrintPeripheral@s
  1755  01B4  3083               	movlw	high (STR_2| (0+32768))
  1756  01B5  00F3               	movwf	serialPrintPeripheral@s+1
  1757  01B6  3183  2307  3181   	fcall	_serialPrintPeripheral
  1758                           
  1759                           ;main.c: 286: _delay((unsigned long)((500)*(32000000/4000.0)));
  1760  01B9  3015               	movlw	21
  1761  01BA  00F8               	movwf	??_getWiFiData+1
  1762  01BB  304B               	movlw	75
  1763  01BC  00F7               	movwf	??_getWiFiData
  1764  01BD  30BE               	movlw	190
  1765  01BE                     u847:	
  1766  01BE  0B89               	decfsz	9,f
  1767  01BF  29BE               	goto	u847
  1768  01C0  0BF7               	decfsz	??_getWiFiData,f
  1769  01C1  29BE               	goto	u847
  1770  01C2  0BF8               	decfsz	??_getWiFiData+1,f
  1771  01C3  29BE               	goto	u847
  1772  01C4  3200               	nop2
  1773                           
  1774                           ;main.c: 287: serialPrintPeripheral("AT+CWLAP\r\n");
  1775  01C5  30F0               	movlw	low (STR_3| (0+32768))
  1776  01C6  00F2               	movwf	serialPrintPeripheral@s
  1777  01C7  3083               	movlw	high (STR_3| (0+32768))
  1778  01C8  00F3               	movwf	serialPrintPeripheral@s+1
  1779  01C9  3183  2307  3181   	fcall	_serialPrintPeripheral
  1780                           
  1781                           ;main.c: 288: _delay((unsigned long)((10)*(32000000/4000.0)));
  1782  01CC  3068               	movlw	104
  1783  01CD  00F7               	movwf	??_getWiFiData
  1784  01CE  30E4               	movlw	228
  1785  01CF                     u857:	
  1786  01CF  0B89               	decfsz	9,f
  1787  01D0  29CF               	goto	u857
  1788  01D1  0BF7               	decfsz	??_getWiFiData,f
  1789  01D2  29CF               	goto	u857
  1790  01D3  3200               	nop2
  1791                           
  1792                           ;main.c: 290: serialReadPeripheral();
  1793  01D4  3184  2437  3181   	fcall	_serialReadPeripheral
  1794                           
  1795                           ;main.c: 292: startTimer(3);
  1796  01D7  3003               	movlw	3
  1797  01D8  00F1               	movwf	startTimer@seconds
  1798  01D9  3000               	movlw	0
  1799  01DA  00F2               	movwf	startTimer@seconds+1
  1800  01DB  3183  2364  3181   	fcall	_startTimer
  1801  01DE                     l1062:	
  1802                           ;main.c: 293: while (!timerDone) {
  1803                           
  1804  01DE  087B               	movf	_timerDone,w
  1805  01DF  1D03               	btfss	3,2
  1806  01E0  29EB               	goto	l1064
  1807                           
  1808                           ;main.c: 294: if (PIR3bits.RC1IF) {
  1809  01E1  014E               	movlb	14	; select bank14
  1810  01E2  1E8F               	btfss	15,5	;volatile
  1811  01E3  29DE               	goto	l1062
  1812                           
  1813                           ;main.c: 295: serialWriteBT(serialReadPeripheral());
  1814  01E4  3184  2437  3181   	fcall	_serialReadPeripheral
  1815  01E7  3184  245A  3181   	fcall	_serialWriteBT
  1816  01EA  29DE               	goto	l1062
  1817  01EB                     l1064:	
  1818                           
  1819                           ;main.c: 296: }
  1820                           ;main.c: 297: }
  1821                           ;main.c: 298: serialPrintBT("WIFI_END\r\n");
  1822  01EB  30DA               	movlw	low (STR_4| (0+32768))
  1823  01EC  00F2               	movwf	serialPrintBT@s
  1824  01ED  3083               	movlw	high (STR_4| (0+32768))
  1825  01EE  00F3               	movwf	serialPrintBT@s+1
  1826  01EF  3183  2321  3181   	fcall	_serialPrintBT
  1827                           
  1828                           ;main.c: 299: _delay((unsigned long)((10)*(32000000/4000.0)));
  1829  01F2  3068               	movlw	104
  1830  01F3  00F7               	movwf	??_getWiFiData
  1831  01F4  30E4               	movlw	228
  1832  01F5                     u867:	
  1833  01F5  0B89               	decfsz	9,f
  1834  01F6  29F5               	goto	u867
  1835  01F7  0BF7               	decfsz	??_getWiFiData,f
  1836  01F8  29F5               	goto	u867
  1837  01F9  3200               	nop2
  1838  01FA  0008               	return
  1839  01FB                     __end_of_getWiFiData:	
  1840                           
  1841                           	psect	text7
  1842  00D7                     __ptext7:	
  1843 ;; *************** function _getGSMData *****************
  1844 ;; Defined at:
  1845 ;;		line 302 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1859 ;;      Params:         0       0       0       0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0
  1861 ;;      Temps:          2       0       0       0       0       0       0       0
  1862 ;;      Totals:         2       0       0       0       0       0       0       0
  1863 ;;Total ram usage:        2 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    3
  1866 ;; This function calls:
  1867 ;;		_serialPrintBT
  1868 ;;		_serialPrintPeripheral
  1869 ;;		_serialReadPeripheral
  1870 ;;		_serialWriteBT
  1871 ;;		_setActivePeripheral
  1872 ;;		_startTimer
  1873 ;; This function is called by:
  1874 ;;		_waitForCommand
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _getGSMData
  1880  00D7                     _getGSMData:	
  1881                           
  1882                           ;main.c: 303: serialPrintBT("GSM_START\r\n");
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _getGSMData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1886  00D7  30B7               	movlw	low (STR_5| (0+32768))
  1887  00D8  00F2               	movwf	serialPrintBT@s
  1888  00D9  3083               	movlw	high (STR_5| (0+32768))
  1889  00DA  00F3               	movwf	serialPrintBT@s+1
  1890  00DB  3183  2321  3180   	fcall	_serialPrintBT
  1891                           
  1892                           ;main.c: 305: setActivePeripheral(gsm);
  1893  00DE  3003               	movlw	3
  1894  00DF  3181  214E  3180   	fcall	_setActivePeripheral
  1895                           
  1896                           ;main.c: 306: serialPrintPeripheral("AT+CREG=2\r\n");
  1897  00E2  30AB               	movlw	low (STR_6| (0+32768))
  1898  00E3  00F2               	movwf	serialPrintPeripheral@s
  1899  00E4  3083               	movlw	high (STR_6| (0+32768))
  1900  00E5  00F3               	movwf	serialPrintPeripheral@s+1
  1901  00E6  3183  2307  3180   	fcall	_serialPrintPeripheral
  1902                           
  1903                           ;main.c: 307: _delay((unsigned long)((500)*(32000000/4000.0)));
  1904  00E9  3015               	movlw	21
  1905  00EA  00F8               	movwf	??_getGSMData+1
  1906  00EB  304B               	movlw	75
  1907  00EC  00F7               	movwf	??_getGSMData
  1908  00ED  30BE               	movlw	190
  1909  00EE                     u877:	
  1910  00EE  0B89               	decfsz	9,f
  1911  00EF  28EE               	goto	u877
  1912  00F0  0BF7               	decfsz	??_getGSMData,f
  1913  00F1  28EE               	goto	u877
  1914  00F2  0BF8               	decfsz	??_getGSMData+1,f
  1915  00F3  28EE               	goto	u877
  1916  00F4  3200               	nop2
  1917                           
  1918                           ;main.c: 308: serialPrintPeripheral("AT+CSQ\r\n");
  1919  00F5  3041               	movlw	low (STR_7| (0+32768))
  1920  00F6  00F2               	movwf	serialPrintPeripheral@s
  1921  00F7  3084               	movlw	high (STR_7| (0+32768))
  1922  00F8  00F3               	movwf	serialPrintPeripheral@s+1
  1923  00F9  3183  2307  3180   	fcall	_serialPrintPeripheral
  1924                           
  1925                           ;main.c: 309: _delay((unsigned long)((10)*(32000000/4000.0)));
  1926  00FC  3068               	movlw	104
  1927  00FD  00F7               	movwf	??_getGSMData
  1928  00FE  30E4               	movlw	228
  1929  00FF                     u887:	
  1930  00FF  0B89               	decfsz	9,f
  1931  0100  28FF               	goto	u887
  1932  0101  0BF7               	decfsz	??_getGSMData,f
  1933  0102  28FF               	goto	u887
  1934  0103  3200               	nop2
  1935                           
  1936                           ;main.c: 310: serialReadPeripheral();
  1937  0104  3184  2437  3180   	fcall	_serialReadPeripheral
  1938                           
  1939                           ;main.c: 312: startTimer(1);
  1940  0107  3001               	movlw	1
  1941  0108  00F1               	movwf	startTimer@seconds
  1942  0109  3000               	movlw	0
  1943  010A  00F2               	movwf	startTimer@seconds+1
  1944  010B  3183  2364  3180   	fcall	_startTimer
  1945  010E                     l1080:	
  1946                           ;main.c: 313: while (!timerDone) {
  1947                           
  1948  010E  087B               	movf	_timerDone,w
  1949  010F  1D03               	btfss	3,2
  1950  0110  291B               	goto	l1082
  1951                           
  1952                           ;main.c: 314: if (PIR3bits.RC1IF) {
  1953  0111  014E               	movlb	14	; select bank14
  1954  0112  1E8F               	btfss	15,5	;volatile
  1955  0113  290E               	goto	l1080
  1956                           
  1957                           ;main.c: 315: serialWriteBT(serialReadPeripheral());
  1958  0114  3184  2437  3180   	fcall	_serialReadPeripheral
  1959  0117  3184  245A  3180   	fcall	_serialWriteBT
  1960  011A  290E               	goto	l1080
  1961  011B                     l1082:	
  1962                           
  1963                           ;main.c: 316: }
  1964                           ;main.c: 317: }
  1965                           ;main.c: 319: serialPrintPeripheral("AT+CREG?\r\n");
  1966  011B  30CF               	movlw	low (STR_8| (0+32768))
  1967  011C  00F2               	movwf	serialPrintPeripheral@s
  1968  011D  3083               	movlw	high (STR_8| (0+32768))
  1969  011E  00F3               	movwf	serialPrintPeripheral@s+1
  1970  011F  3183  2307  3180   	fcall	_serialPrintPeripheral
  1971                           
  1972                           ;main.c: 320: _delay((unsigned long)((10)*(32000000/4000.0)));
  1973  0122  3068               	movlw	104
  1974  0123  00F7               	movwf	??_getGSMData
  1975  0124  30E4               	movlw	228
  1976  0125                     u897:	
  1977  0125  0B89               	decfsz	9,f
  1978  0126  2925               	goto	u897
  1979  0127  0BF7               	decfsz	??_getGSMData,f
  1980  0128  2925               	goto	u897
  1981  0129  3200               	nop2
  1982                           
  1983                           ;main.c: 322: startTimer(1);
  1984  012A  3001               	movlw	1
  1985  012B  00F1               	movwf	startTimer@seconds
  1986  012C  3000               	movlw	0
  1987  012D  00F2               	movwf	startTimer@seconds+1
  1988  012E  3183  2364  3180   	fcall	_startTimer
  1989  0131                     l1090:	
  1990                           ;main.c: 323: while (!timerDone) {
  1991                           
  1992  0131  087B               	movf	_timerDone,w
  1993  0132  1D03               	btfss	3,2
  1994  0133  293E               	goto	l1092
  1995                           
  1996                           ;main.c: 324: if (PIR3bits.RC1IF) {
  1997  0134  014E               	movlb	14	; select bank14
  1998  0135  1E8F               	btfss	15,5	;volatile
  1999  0136  2931               	goto	l1090
  2000                           
  2001                           ;main.c: 325: serialWriteBT(serialReadPeripheral());
  2002  0137  3184  2437  3180   	fcall	_serialReadPeripheral
  2003  013A  3184  245A  3180   	fcall	_serialWriteBT
  2004  013D  2931               	goto	l1090
  2005  013E                     l1092:	
  2006                           
  2007                           ;main.c: 326: }
  2008                           ;main.c: 327: }
  2009                           ;main.c: 329: serialPrintBT("GSM_END\r\n");
  2010  013E  30FB               	movlw	low (STR_9| (0+32768))
  2011  013F  00F2               	movwf	serialPrintBT@s
  2012  0140  3083               	movlw	high (STR_9| (0+32768))
  2013  0141  00F3               	movwf	serialPrintBT@s+1
  2014  0142  3183  2321  3180   	fcall	_serialPrintBT
  2015                           
  2016                           ;main.c: 330: _delay((unsigned long)((10)*(32000000/4000.0)));
  2017  0145  3068               	movlw	104
  2018  0146  00F7               	movwf	??_getGSMData
  2019  0147  30E4               	movlw	228
  2020  0148                     u907:	
  2021  0148  0B89               	decfsz	9,f
  2022  0149  2948               	goto	u907
  2023  014A  0BF7               	decfsz	??_getGSMData,f
  2024  014B  2948               	goto	u907
  2025  014C  3200               	nop2
  2026  014D  0008               	return
  2027  014E                     __end_of_getGSMData:	
  2028                           
  2029                           	psect	text8
  2030  0307                     __ptext8:	
  2031 ;; *************** function _serialPrintPeripheral *****************
  2032 ;; Defined at:
  2033 ;;		line 134 in file "main.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  s               2    2[COMMON] PTR unsigned char 
  2036 ;;		 -> waitForCommand@message(30), STR_17(3), STR_16(7), STR_14(5), 
  2037 ;;		 -> STR_8(11), STR_7(9), STR_6(12), STR_3(11), 
  2038 ;;		 -> STR_2(19), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  i               2    5[COMMON] int 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2050 ;;      Params:         2       0       0       0       0       0       0       0
  2051 ;;      Locals:         2       0       0       0       0       0       0       0
  2052 ;;      Temps:          1       0       0       0       0       0       0       0
  2053 ;;      Totals:         5       0       0       0       0       0       0       0
  2054 ;;Total ram usage:        5 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    2
  2057 ;; This function calls:
  2058 ;;		_serialWritePeripheral
  2059 ;; This function is called by:
  2060 ;;		_getWiFiData
  2061 ;;		_getGSMData
  2062 ;;		_sendSigfox
  2063 ;;		_getSigfoxData
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _serialPrintPeripheral
  2069  0307                     _serialPrintPeripheral:	
  2070                           
  2071                           ;main.c: 135: int i = 0;
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _serialPrintPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2075  0307  01F5               	clrf	serialPrintPeripheral@i
  2076  0308  01F6               	clrf	serialPrintPeripheral@i+1
  2077  0309                     l1006:	
  2078                           ;main.c: 136: while (s[i] != '\0') {
  2079                           
  2080  0309  0872               	movf	serialPrintPeripheral@s,w
  2081  030A  0775               	addwf	serialPrintPeripheral@i,w
  2082  030B  0084               	movwf	4
  2083  030C  0873               	movf	serialPrintPeripheral@s+1,w
  2084  030D  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2085  030E  0085               	movwf	5
  2086  030F  0012               	moviw fsr0++
  2087  0310  1903               	btfsc	3,2
  2088  0311  0008               	return
  2089                           
  2090                           ;main.c: 137: serialWritePeripheral(s[i]);
  2091  0312  0872               	movf	serialPrintPeripheral@s,w
  2092  0313  0775               	addwf	serialPrintPeripheral@i,w
  2093  0314  0084               	movwf	4
  2094  0315  0873               	movf	serialPrintPeripheral@s+1,w
  2095  0316  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2096  0317  0085               	movwf	5
  2097  0318  0800               	movf	0,w	;code access
  2098  0319  3184  2452  3183   	fcall	_serialWritePeripheral
  2099                           
  2100                           ;main.c: 138: i++;
  2101  031C  3001               	movlw	1
  2102  031D  07F5               	addwf	serialPrintPeripheral@i,f
  2103  031E  3000               	movlw	0
  2104  031F  3DF6               	addwfc	serialPrintPeripheral@i+1,f
  2105  0320  2B09               	goto	l1006
  2106  0321                     __end_of_serialPrintPeripheral:	
  2107                           
  2108                           	psect	text9
  2109  0452                     __ptext9:	
  2110 ;; *************** function _serialWritePeripheral *****************
  2111 ;; Defined at:
  2112 ;;		line 128 in file "main.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  c               1    wreg     unsigned char 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  c               1    1[COMMON] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2126 ;;      Params:         0       0       0       0       0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0
  2129 ;;      Totals:         1       0       0       0       0       0       0       0
  2130 ;;Total ram usage:        1 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    1
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_serialPrintPeripheral
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _serialWritePeripheral
  2142  0452                     _serialWritePeripheral:	
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _serialWritePeripheral: [wreg]
  2146                           ;serialWritePeripheral@c stored from wreg
  2147  0452  00F1               	movwf	serialWritePeripheral@c
  2148  0453                     l96:	
  2149                           ;main.c: 129: while (!PIR3bits.TX1IF) {
  2150                           
  2151  0453  014E               	movlb	14	; select bank14
  2152  0454  1E0F               	btfss	15,4	;volatile
  2153  0455  2C53               	goto	l96
  2154                           
  2155                           ;main.c: 130: }
  2156                           ;main.c: 131: TX1REG = c;
  2157  0456  0871               	movf	serialWritePeripheral@c,w
  2158  0457  0142               	movlb	2	; select bank2
  2159  0458  009A               	movwf	26	;volatile
  2160  0459  0008               	return
  2161  045A                     __end_of_serialWritePeripheral:	
  2162                           
  2163                           	psect	text10
  2164  01FB                     __ptext10:	
  2165 ;; *************** function _getGPSData *****************
  2166 ;; Defined at:
  2167 ;;		line 333 in file "main.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  c               1    9[COMMON] unsigned char 
  2172 ;;  found           1    8[COMMON] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2182 ;;      Params:         0       0       0       0       0       0       0       0
  2183 ;;      Locals:         2       0       0       0       0       0       0       0
  2184 ;;      Temps:          1       0       0       0       0       0       0       0
  2185 ;;      Totals:         3       0       0       0       0       0       0       0
  2186 ;;Total ram usage:        3 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    3
  2189 ;; This function calls:
  2190 ;;		_serialFindPeripheral
  2191 ;;		_serialPrintBT
  2192 ;;		_serialReadPeripheral
  2193 ;;		_serialWriteBT
  2194 ;;		_setActivePeripheral
  2195 ;;		_startTimer
  2196 ;; This function is called by:
  2197 ;;		_waitForCommand
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _getGPSData
  2203  01FB                     _getGPSData:	
  2204                           
  2205                           ;main.c: 334: setActivePeripheral(gps);
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _getGPSData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2209  01FB  3000               	movlw	0
  2210  01FC  3181  214E  3181   	fcall	_setActivePeripheral
  2211                           
  2212                           ;main.c: 335: serialPrintBT("GPS_START\r\n");
  2213  01FF  30C3               	movlw	low (STR_10| (0+32768))
  2214  0200  00F2               	movwf	serialPrintBT@s
  2215  0201  3083               	movlw	high (STR_10| (0+32768))
  2216  0202  00F3               	movwf	serialPrintBT@s+1
  2217  0203  3183  2321  3181   	fcall	_serialPrintBT
  2218                           
  2219                           ;main.c: 336: char found = 0;
  2220  0206  01F8               	clrf	getGPSData@found
  2221                           
  2222                           ;main.c: 337: startTimer(3);
  2223  0207  3003               	movlw	3
  2224  0208  00F1               	movwf	startTimer@seconds
  2225  0209  3000               	movlw	0
  2226  020A  00F2               	movwf	startTimer@seconds+1
  2227  020B  3183  2364  3181   	fcall	_startTimer
  2228                           
  2229                           ;main.c: 338: while (!timerDone && !found) {
  2230  020E  2A31               	goto	l1112
  2231  020F                     l188:	
  2232                           
  2233                           ;main.c: 339: if (PIR3bits.RC1IF) {
  2234  020F  014E               	movlb	14	; select bank14
  2235  0210  1E8F               	btfss	15,5	;volatile
  2236  0211  2A31               	goto	l1112
  2237                           
  2238                           ;main.c: 340: if (serialFindPeripheral("$GPGGA,")) {
  2239  0212  304A               	movlw	low (STR_11| (0+32768))
  2240  0213  00F1               	movwf	serialFindPeripheral@s
  2241  0214  3084               	movlw	high (STR_11| (0+32768))
  2242  0215  00F2               	movwf	serialFindPeripheral@s+1
  2243  0216  3182  22AD  3181   	fcall	_serialFindPeripheral
  2244  0219  3A00               	xorlw	0
  2245  021A  1903               	skipnz
  2246  021B  2A31               	goto	l1112
  2247                           
  2248                           ;main.c: 341: char c = 'c';
  2249  021C  3063               	movlw	99
  2250  021D  00F7               	movwf	??_getGPSData
  2251  021E  0877               	movf	??_getGPSData,w
  2252  021F  00F9               	movwf	getGPSData@c
  2253  0220                     l1110:	
  2254                           ;main.c: 342: while (c != '\n') {
  2255                           
  2256  0220  300A               	movlw	10
  2257  0221  0679               	xorwf	getGPSData@c,w
  2258  0222  1903               	btfsc	3,2
  2259  0223  2A2F               	goto	l193
  2260                           
  2261                           ;main.c: 343: c = serialReadPeripheral();
  2262  0224  3184  2437  3181   	fcall	_serialReadPeripheral
  2263  0227  00F7               	movwf	??_getGPSData
  2264  0228  0877               	movf	??_getGPSData,w
  2265  0229  00F9               	movwf	getGPSData@c
  2266                           
  2267                           ;main.c: 344: serialWriteBT(c);
  2268  022A  0879               	movf	getGPSData@c,w
  2269  022B  3184  245A  3181   	fcall	_serialWriteBT
  2270  022E  2A20               	goto	l1110
  2271  022F                     l193:	
  2272                           
  2273                           ;main.c: 345: }
  2274                           ;main.c: 346: found = 1;
  2275  022F  01F8               	clrf	getGPSData@found
  2276  0230  0AF8               	incf	getGPSData@found,f
  2277  0231                     l1112:	
  2278  0231  087B               	movf	_timerDone,w
  2279  0232  1903               	btfsc	3,2
  2280  0233  0878               	movf	getGPSData@found,w
  2281  0234  1903               	btfsc	3,2
  2282  0235  2A0F               	goto	l188
  2283                           
  2284                           ;main.c: 347: }
  2285                           ;main.c: 348: }
  2286                           ;main.c: 349: }
  2287                           ;main.c: 350: serialPrintBT("GPS_END\r\n");
  2288  0236  3005               	movlw	low (STR_12| (0+32768))
  2289  0237  00F2               	movwf	serialPrintBT@s
  2290  0238  3084               	movlw	high (STR_12| (0+32768))
  2291  0239  00F3               	movwf	serialPrintBT@s+1
  2292  023A  3183  2321  3181   	fcall	_serialPrintBT
  2293                           
  2294                           ;main.c: 351: _delay((unsigned long)((10)*(32000000/4000.0)));
  2295  023D  3068               	movlw	104
  2296  023E  00F7               	movwf	??_getGPSData
  2297  023F  30E4               	movlw	228
  2298  0240                     u917:	
  2299  0240  0B89               	decfsz	9,f
  2300  0241  2A40               	goto	u917
  2301  0242  0BF7               	decfsz	??_getGPSData,f
  2302  0243  2A40               	goto	u917
  2303  0244  3200               	nop2
  2304  0245  0008               	return
  2305  0246                     __end_of_getGPSData:	
  2306                           
  2307                           	psect	text11
  2308  0364                     __ptext11:	
  2309 ;; *************** function _startTimer *****************
  2310 ;; Defined at:
  2311 ;;		line 269 in file "main.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  seconds         2    1[COMMON] int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2325 ;;      Params:         2       0       0       0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0       0
  2328 ;;      Totals:         2       0       0       0       0       0       0       0
  2329 ;;Total ram usage:        2 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_getWiFiData
  2336 ;;		_getGSMData
  2337 ;;		_getGPSData
  2338 ;;		_waitForCommand
  2339 ;;		_getSigfoxData
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function _startTimer
  2345  0364                     _startTimer:	
  2346                           
  2347                           ;main.c: 272: timerDone = 0;
  2348                           
  2349                           ;incstack = 0
  2350                           ; Regs used in _startTimer: [wreg+status,2]
  2351  0364  01FB               	clrf	_timerDone
  2352                           
  2353                           ;main.c: 273: timerSetpoint = seconds;
  2354  0365  0872               	movf	startTimer@seconds+1,w
  2355  0366  0140               	movlb	0	; select bank0
  2356  0367  00E8               	movwf	_timerSetpoint+1
  2357  0368  0871               	movf	startTimer@seconds,w
  2358  0369  00E7               	movwf	_timerSetpoint
  2359                           
  2360                           ;main.c: 274: timerActual = 0;
  2361  036A  01E5               	clrf	_timerActual
  2362  036B  01E6               	clrf	_timerActual+1
  2363                           
  2364                           ;main.c: 276: PIE0bits.TMR0IE = 1;
  2365  036C  014E               	movlb	14	; select bank14
  2366  036D  1696               	bsf	22,5	;volatile
  2367                           
  2368                           ;main.c: 277: T0CON0 = 0b00010000;
  2369  036E  3010               	movlw	16
  2370  036F  014B               	movlb	11	; select bank11
  2371  0370  009E               	movwf	30	;volatile
  2372                           
  2373                           ;main.c: 278: T0CON1 = 0b01000111;
  2374  0371  3047               	movlw	71
  2375  0372  009F               	movwf	31	;volatile
  2376                           
  2377                           ;main.c: 279: T0CON0bits.T0EN = 1;
  2378  0373  179E               	bsf	30,7	;volatile
  2379  0374  0008               	return
  2380  0375                     __end_of_startTimer:	
  2381                           
  2382                           	psect	text12
  2383  014E                     __ptext12:	
  2384 ;; *************** function _setActivePeripheral *****************
  2385 ;; Defined at:
  2386 ;;		line 164 in file "main.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  peri            1    wreg     enum E8210
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  peri            1    1[COMMON] enum E8210
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2400 ;;      Params:         0       0       0       0       0       0       0       0
  2401 ;;      Locals:         1       0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0
  2403 ;;      Totals:         1       0       0       0       0       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;;		_getWiFiData
  2412 ;;		_getGSMData
  2413 ;;		_getGPSData
  2414 ;;		_sendSigfox
  2415 ;;		_getSigfoxData
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _setActivePeripheral
  2421  014E                     _setActivePeripheral:	
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _setActivePeripheral: [wreg-fsr0h+status,2+status,0]
  2425                           ;setActivePeripheral@peri stored from wreg
  2426  014E  00F1               	movwf	setActivePeripheral@peri
  2427                           
  2428                           ;main.c: 173: RC6PPS = 0x00;
  2429  014F  017E               	movlb	62	; select bank62
  2430  0150  01A6               	clrf	38	;volatile
  2431                           
  2432                           ;main.c: 174: RC1PPS = 0x00;
  2433  0151  01A1               	clrf	33	;volatile
  2434                           
  2435                           ;main.c: 175: RA4PPS = 0x00;
  2436  0152  0194               	clrf	20	;volatile
  2437                           
  2438                           ;main.c: 176: RC4PPS = 0x00;
  2439  0153  01A4               	clrf	36	;volatile
  2440                           
  2441                           ;main.c: 179: switch (peri) {
  2442  0154  2992               	goto	l998
  2443  0155                     l964:	
  2444                           ;main.c: 180: case sigfox:
  2445                           
  2446                           
  2447                           ;main.c: 181: {
  2448                           ;main.c: 182: RC6PPS = 0x0F;
  2449  0155  300F               	movlw	15
  2450  0156  017E               	movlb	62	; select bank62
  2451  0157  00A6               	movwf	38	;volatile
  2452                           
  2453                           ;main.c: 183: SP1BRG = 207;
  2454  0158  3000               	movlw	0
  2455  0159  0142               	movlb	2	; select bank2
  2456  015A  009C               	movwf	28	;volatile
  2457  015B  30CF               	movlw	207
  2458  015C  009B               	movwf	27	;volatile
  2459                           
  2460                           ;main.c: 184: TRISC3 = 1;
  2461  015D  0140               	movlb	0	; select bank0
  2462  015E  1594               	bsf	20,3	;volatile
  2463                           
  2464                           ;main.c: 185: RX1DTPPSbits.RX1DTPPS = 0x13;
  2465  015F  017D               	movlb	61	; select bank61
  2466  0160  084B               	movf	75,w	;volatile
  2467  0161  39C0               	andlw	-64
  2468  0162  3813               	iorlw	19
  2469  0163  2990               	goto	L3
  2470  0164                     l972:	
  2471                           ;main.c: 187: }
  2472                           ;main.c: 188: case gsm:
  2473                           
  2474                           ;main.c: 186: break;
  2475                           
  2476                           
  2477                           ;main.c: 189: {
  2478                           ;main.c: 190: RC1PPS = 0x0F;
  2479  0164  300F               	movlw	15
  2480  0165  017E               	movlb	62	; select bank62
  2481  0166  00A1               	movwf	33	;volatile
  2482                           
  2483                           ;main.c: 191: SP1BRG = 16;
  2484  0167  3000               	movlw	0
  2485  0168  0142               	movlb	2	; select bank2
  2486  0169  009C               	movwf	28	;volatile
  2487  016A  3010               	movlw	16
  2488  016B  009B               	movwf	27	;volatile
  2489                           
  2490                           ;main.c: 192: TRISC0 = 1;
  2491  016C  0140               	movlb	0	; select bank0
  2492  016D  1414               	bsf	20,0	;volatile
  2493                           
  2494                           ;main.c: 193: RX1DTPPSbits.RX1DTPPS = 0x10;
  2495  016E  017D               	movlb	61	; select bank61
  2496  016F  084B               	movf	75,w	;volatile
  2497  0170  39C0               	andlw	-64
  2498  0171  3810               	iorlw	16
  2499  0172  2990               	goto	L3
  2500  0173                     l980:	
  2501                           ;main.c: 195: }
  2502                           ;main.c: 196: case wifi:
  2503                           
  2504                           ;main.c: 194: break;
  2505                           
  2506                           
  2507                           ;main.c: 197: {
  2508                           ;main.c: 198: RA4PPS = 0x0F;
  2509  0173  300F               	movlw	15
  2510  0174  017E               	movlb	62	; select bank62
  2511  0175  0094               	movwf	20	;volatile
  2512                           
  2513                           ;main.c: 199: SP1BRG = 16;
  2514  0176  3000               	movlw	0
  2515  0177  0142               	movlb	2	; select bank2
  2516  0178  009C               	movwf	28	;volatile
  2517  0179  3010               	movlw	16
  2518  017A  009B               	movwf	27	;volatile
  2519                           
  2520                           ;main.c: 200: TRISA5 = 1;
  2521  017B  0140               	movlb	0	; select bank0
  2522  017C  1692               	bsf	18,5	;volatile
  2523                           
  2524                           ;main.c: 201: RX1DTPPSbits.RX1DTPPS = 0x05;
  2525  017D  017D               	movlb	61	; select bank61
  2526  017E  084B               	movf	75,w	;volatile
  2527  017F  39C0               	andlw	-64
  2528  0180  3805               	iorlw	5
  2529  0181  2990               	goto	L3
  2530  0182                     l988:	
  2531                           ;main.c: 203: }
  2532                           ;main.c: 204: case gps:
  2533                           
  2534                           ;main.c: 202: break;
  2535                           
  2536                           
  2537                           ;main.c: 205: {
  2538                           ;main.c: 206: RC4PPS = 0x0F;
  2539  0182  300F               	movlw	15
  2540  0183  017E               	movlb	62	; select bank62
  2541  0184  00A4               	movwf	36	;volatile
  2542                           
  2543                           ;main.c: 207: SP1BRG = 207;
  2544  0185  3000               	movlw	0
  2545  0186  0142               	movlb	2	; select bank2
  2546  0187  009C               	movwf	28	;volatile
  2547  0188  30CF               	movlw	207
  2548  0189  009B               	movwf	27	;volatile
  2549                           
  2550                           ;main.c: 208: TRISC5 = 1;
  2551  018A  0140               	movlb	0	; select bank0
  2552  018B  1694               	bsf	20,5	;volatile
  2553                           
  2554                           ;main.c: 209: RX1DTPPSbits.RX1DTPPS = 0x15;
  2555  018C  017D               	movlb	61	; select bank61
  2556  018D  084B               	movf	75,w	;volatile
  2557  018E  39C0               	andlw	-64
  2558  018F  3815               	iorlw	21
  2559  0190                     L3:	
  2560  0190  00CB               	movwf	75	;volatile
  2561                           
  2562                           ;main.c: 211: }
  2563                           ;main.c: 212: }
  2564                           
  2565                           ;main.c: 210: break;
  2566  0191  29A0               	goto	l125
  2567  0192                     l998:	
  2568  0192  0871               	movf	setActivePeripheral@peri,w
  2569                           
  2570                           ; Switch size 1, requested type "space"
  2571                           ; Number of cases is 4, Range of values is 0 to 3
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte           13     7 (average)
  2575                           ; direct_byte           14     6 (fixed)
  2576                           ; jumptable            260     6 (fixed)
  2577                           ;	Chosen strategy is simple_byte
  2578  0193  3A00               	xorlw	0	; case 0
  2579  0194  1903               	skipnz
  2580  0195  2982               	goto	l988
  2581  0196  3A01               	xorlw	1	; case 1
  2582  0197  1903               	skipnz
  2583  0198  2973               	goto	l980
  2584  0199  3A03               	xorlw	3	; case 2
  2585  019A  1903               	skipnz
  2586  019B  2955               	goto	l964
  2587  019C  3A01               	xorlw	1	; case 3
  2588  019D  1903               	skipnz
  2589  019E  2964               	goto	l972
  2590  019F  29A0               	goto	l125
  2591  01A0                     l125:	
  2592                           
  2593                           ;main.c: 214: TX1STAbits.BRGH = 1;
  2594  01A0  0142               	movlb	2	; select bank2
  2595  01A1  151E               	bsf	30,2	;volatile
  2596                           
  2597                           ;main.c: 215: TX1STAbits.SYNC = 0;
  2598  01A2  121E               	bcf	30,4	;volatile
  2599                           
  2600                           ;main.c: 216: RC1STAbits.SPEN = 1;
  2601  01A3  179D               	bsf	29,7	;volatile
  2602                           
  2603                           ;main.c: 217: TX1STAbits.TXEN = 1;
  2604  01A4  169E               	bsf	30,5	;volatile
  2605                           
  2606                           ;main.c: 218: RC1STAbits.CREN = 1;
  2607  01A5  161D               	bsf	29,4	;volatile
  2608  01A6  0008               	return
  2609  01A7                     __end_of_setActivePeripheral:	
  2610                           
  2611                           	psect	text13
  2612  0321                     __ptext13:	
  2613 ;; *************** function _serialPrintBT *****************
  2614 ;; Defined at:
  2615 ;;		line 227 in file "main.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  s               2    2[COMMON] PTR unsigned char 
  2618 ;;		 -> STR_15(13), STR_13(15), STR_12(10), STR_10(12), 
  2619 ;;		 -> STR_9(10), STR_5(12), STR_4(11), STR_1(13), 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  i               2    5[COMMON] int 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2631 ;;      Params:         2       0       0       0       0       0       0       0
  2632 ;;      Locals:         2       0       0       0       0       0       0       0
  2633 ;;      Temps:          1       0       0       0       0       0       0       0
  2634 ;;      Totals:         5       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        5 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    2
  2638 ;; This function calls:
  2639 ;;		_serialWriteBT
  2640 ;; This function is called by:
  2641 ;;		_getWiFiData
  2642 ;;		_getGSMData
  2643 ;;		_getGPSData
  2644 ;;		_getSigfoxData
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           
  2649                           ;psect for function _serialPrintBT
  2650  0321                     _serialPrintBT:	
  2651                           
  2652                           ;main.c: 228: int i = 0;
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in _serialPrintBT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2656  0321  01F5               	clrf	serialPrintBT@i
  2657  0322  01F6               	clrf	serialPrintBT@i+1
  2658  0323                     l1030:	
  2659                           ;main.c: 229: while (s[i] != '\0') {
  2660                           
  2661  0323  0872               	movf	serialPrintBT@s,w
  2662  0324  0775               	addwf	serialPrintBT@i,w
  2663  0325  0084               	movwf	4
  2664  0326  0873               	movf	serialPrintBT@s+1,w
  2665  0327  3D76               	addwfc	serialPrintBT@i+1,w
  2666  0328  0085               	movwf	5
  2667  0329  0012               	moviw fsr0++
  2668  032A  1903               	btfsc	3,2
  2669  032B  0008               	return
  2670                           
  2671                           ;main.c: 230: serialWriteBT(s[i]);
  2672  032C  0872               	movf	serialPrintBT@s,w
  2673  032D  0775               	addwf	serialPrintBT@i,w
  2674  032E  0084               	movwf	4
  2675  032F  0873               	movf	serialPrintBT@s+1,w
  2676  0330  3D76               	addwfc	serialPrintBT@i+1,w
  2677  0331  0085               	movwf	5
  2678  0332  0800               	movf	0,w	;code access
  2679  0333  3184  245A  3183   	fcall	_serialWriteBT
  2680                           
  2681                           ;main.c: 231: i++;
  2682  0336  3001               	movlw	1
  2683  0337  07F5               	addwf	serialPrintBT@i,f
  2684  0338  3000               	movlw	0
  2685  0339  3DF6               	addwfc	serialPrintBT@i+1,f
  2686  033A  2B23               	goto	l1030
  2687  033B                     __end_of_serialPrintBT:	
  2688                           
  2689                           	psect	text14
  2690  045A                     __ptext14:	
  2691 ;; *************** function _serialWriteBT *****************
  2692 ;; Defined at:
  2693 ;;		line 221 in file "main.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  c               1    wreg     unsigned char 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  c               1    1[COMMON] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2707 ;;      Params:         0       0       0       0       0       0       0       0
  2708 ;;      Locals:         1       0       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0
  2710 ;;      Totals:         1       0       0       0       0       0       0       0
  2711 ;;Total ram usage:        1 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_serialPrintBT
  2718 ;;		_getWiFiData
  2719 ;;		_getGSMData
  2720 ;;		_getGPSData
  2721 ;;		_getSigfoxData
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _serialWriteBT
  2727  045A                     _serialWriteBT:	
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _serialWriteBT: [wreg]
  2731                           ;serialWriteBT@c stored from wreg
  2732  045A  00F1               	movwf	serialWriteBT@c
  2733  045B                     l132:	
  2734                           ;main.c: 222: while (!PIR3bits.TX2IF) {
  2735                           
  2736  045B  014E               	movlb	14	; select bank14
  2737  045C  1F0F               	btfss	15,6	;volatile
  2738  045D  2C5B               	goto	l132
  2739                           
  2740                           ;main.c: 223: }
  2741                           ;main.c: 224: TX2REG = c;
  2742  045E  0871               	movf	serialWriteBT@c,w
  2743  045F  0154               	movlb	20	; select bank20
  2744  0460  009A               	movwf	26	;volatile
  2745  0461  0008               	return
  2746  0462                     __end_of_serialWriteBT:	
  2747                           
  2748                           	psect	text15
  2749  02AD                     __ptext15:	
  2750 ;; *************** function _serialFindPeripheral *****************
  2751 ;; Defined at:
  2752 ;;		line 152 in file "main.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  s               2    1[COMMON] PTR unsigned char 
  2755 ;;		 -> STR_11(8), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  i               2    4[COMMON] int 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      unsigned char 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2767 ;;      Params:         2       0       0       0       0       0       0       0
  2768 ;;      Locals:         2       0       0       0       0       0       0       0
  2769 ;;      Temps:          1       0       0       0       0       0       0       0
  2770 ;;      Totals:         5       0       0       0       0       0       0       0
  2771 ;;Total ram usage:        5 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    2
  2774 ;; This function calls:
  2775 ;;		_serialReadPeripheral
  2776 ;; This function is called by:
  2777 ;;		_getGPSData
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _serialFindPeripheral
  2783  02AD                     _serialFindPeripheral:	
  2784                           
  2785                           ;main.c: 153: int i = 0;
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _serialFindPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2789  02AD  01F4               	clrf	serialFindPeripheral@i
  2790  02AE  01F5               	clrf	serialFindPeripheral@i+1
  2791  02AF                     l1018:	
  2792                           ;main.c: 154: while (s[i] != '\0') {
  2793                           
  2794  02AF  0871               	movf	serialFindPeripheral@s,w
  2795  02B0  0774               	addwf	serialFindPeripheral@i,w
  2796  02B1  0084               	movwf	4
  2797  02B2  0872               	movf	serialFindPeripheral@s+1,w
  2798  02B3  3D75               	addwfc	serialFindPeripheral@i+1,w
  2799  02B4  0085               	movwf	5
  2800  02B5  0012               	moviw fsr0++
  2801  02B6  1903               	btfsc	3,2
  2802  02B7  2ACD               	goto	l1020
  2803                           
  2804                           ;main.c: 155: if (serialReadPeripheral() == s[i]) {
  2805  02B8  0871               	movf	serialFindPeripheral@s,w
  2806  02B9  0774               	addwf	serialFindPeripheral@i,w
  2807  02BA  0084               	movwf	4
  2808  02BB  0872               	movf	serialFindPeripheral@s+1,w
  2809  02BC  3D75               	addwfc	serialFindPeripheral@i+1,w
  2810  02BD  0085               	movwf	5
  2811  02BE  0800               	movf	0,w	;code access
  2812  02BF  00F3               	movwf	??_serialFindPeripheral
  2813  02C0  3184  2437  3182   	fcall	_serialReadPeripheral
  2814  02C3  0673               	xorwf	??_serialFindPeripheral,w
  2815  02C4  1D03               	skipz
  2816  02C5  2ACB               	goto	l1014
  2817                           
  2818                           ;main.c: 156: i++;
  2819  02C6  3001               	movlw	1
  2820  02C7  07F4               	addwf	serialFindPeripheral@i,f
  2821  02C8  3000               	movlw	0
  2822  02C9  3DF5               	addwfc	serialFindPeripheral@i+1,f
  2823                           
  2824                           ;main.c: 157: } else {
  2825  02CA  2AAF               	goto	l1018
  2826  02CB                     l1014:	
  2827                           
  2828                           ;main.c: 158: return 0;
  2829  02CB  3000               	movlw	0
  2830  02CC  0008               	return
  2831  02CD                     l1020:	
  2832                           
  2833                           ;main.c: 159: }
  2834                           ;main.c: 160: }
  2835                           ;main.c: 161: return 1;
  2836  02CD  3001               	movlw	1
  2837  02CE  0008               	return
  2838  02CF                     __end_of_serialFindPeripheral:	
  2839                           
  2840                           	psect	text16
  2841  0437                     __ptext16:	
  2842 ;; *************** function _serialReadPeripheral *****************
  2843 ;; Defined at:
  2844 ;;		line 142 in file "main.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      unsigned char 
  2851 ;; Registers used:
  2852 ;;		wreg
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2858 ;;      Params:         0       0       0       0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_serialFindPeripheral
  2869 ;;		_getWiFiData
  2870 ;;		_getGSMData
  2871 ;;		_getGPSData
  2872 ;;		_getSigfoxData
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           
  2877                           ;psect for function _serialReadPeripheral
  2878  0437                     _serialReadPeripheral:	
  2879  0437                     l108:	
  2880                           ;main.c: 143: while (!PIR3bits.RC1IF) {
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _serialReadPeripheral: [wreg]
  2884                           
  2885  0437  014E               	movlb	14	; select bank14
  2886  0438  1E8F               	btfss	15,5	;volatile
  2887  0439  2C37               	goto	l108
  2888                           
  2889                           ;main.c: 144: }
  2890                           ;main.c: 145: if (1 == RC1STAbits.OERR) {
  2891  043A  0142               	movlb	2	; select bank2
  2892  043B  1C9D               	btfss	29,1	;volatile
  2893  043C  2C3F               	goto	l954
  2894                           
  2895                           ;main.c: 146: RC1STAbits.SPEN = 0;
  2896  043D  139D               	bcf	29,7	;volatile
  2897                           
  2898                           ;main.c: 147: RC1STAbits.SPEN = 1;
  2899  043E  179D               	bsf	29,7	;volatile
  2900  043F                     l954:	
  2901                           
  2902                           ;main.c: 148: }
  2903                           ;main.c: 149: return RC1REG;
  2904  043F  0819               	movf	25,w	;volatile
  2905  0440  0008               	return
  2906  0441                     __end_of_serialReadPeripheral:	
  2907                           
  2908                           	psect	text17
  2909  033B                     __ptext17:	
  2910 ;; *************** function _initBTSerial *****************
  2911 ;; Defined at:
  2912 ;;		line 110 in file "main.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2926 ;;      Params:         0       0       0       0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function _initBTSerial
  2942  033B                     _initBTSerial:	
  2943                           
  2944                           ;main.c: 115: RB6PPS = 0x11;
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _initBTSerial: [wreg+status,2+status,0]
  2948  033B  3011               	movlw	17
  2949  033C  017E               	movlb	62	; select bank62
  2950  033D  009E               	movwf	30	;volatile
  2951                           
  2952                           ;main.c: 116: TX2STAbits.BRGH = 1;
  2953  033E  0154               	movlb	20	; select bank20
  2954  033F  151E               	bsf	30,2	;volatile
  2955                           
  2956                           ;main.c: 117: SP2BRG = 16;
  2957  0340  3000               	movlw	0
  2958  0341  009C               	movwf	28	;volatile
  2959  0342  3010               	movlw	16
  2960  0343  009B               	movwf	27	;volatile
  2961                           
  2962                           ;main.c: 118: TX2STAbits.SYNC = 0;
  2963  0344  121E               	bcf	30,4	;volatile
  2964                           
  2965                           ;main.c: 119: RC2STAbits.SPEN = 1;
  2966  0345  179D               	bsf	29,7	;volatile
  2967                           
  2968                           ;main.c: 120: TX2STAbits.TXEN = 1;
  2969  0346  169E               	bsf	30,5	;volatile
  2970                           
  2971                           ;main.c: 123: TRISB5 = 1;
  2972  0347  0140               	movlb	0	; select bank0
  2973  0348  1693               	bsf	19,5	;volatile
  2974                           
  2975                           ;main.c: 124: RX2DTPPSbits.RX2DTPPS = 0x0D;
  2976  0349  017D               	movlb	61	; select bank61
  2977  034A  084D               	movf	77,w	;volatile
  2978  034B  39C0               	andlw	-64
  2979  034C  380D               	iorlw	13
  2980  034D  00CD               	movwf	77	;volatile
  2981                           
  2982                           ;main.c: 125: RC2STAbits.CREN = 1;
  2983  034E  0154               	movlb	20	; select bank20
  2984  034F  161D               	bsf	29,4	;volatile
  2985  0350  0008               	return
  2986  0351                     __end_of_initBTSerial:	
  2987                           
  2988                           	psect	intentry
  2989  0004                     __pintentry:	
  2990 ;; *************** function _timerCount *****************
  2991 ;; Defined at:
  2992 ;;		line 257 in file "main.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3006 ;;      Params:         0       0       0       0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0
  3008 ;;      Temps:          1       0       0       0       0       0       0       0
  3009 ;;      Totals:         1       0       0       0       0       0       0       0
  3010 ;;Total ram usage:        1 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		Interrupt level 1
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019  0004                     _timerCount:	
  3020                           
  3021                           ;incstack = 0
  3022  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3023                           
  3024                           ; Regs used in _timerCount: [wreg]
  3025  0005  3180               	pagesel	$
  3026  0006  0140               	movlb	0	; select bank0
  3027  0007  087F               	movf	127,w
  3028  0008  00F0               	movwf	??_timerCount
  3029                           
  3030                           ;main.c: 259: if (PIR0bits.TMR0IF) {
  3031  0009  014E               	movlb	14	; select bank14
  3032  000A  1E8C               	btfss	12,5	;volatile
  3033  000B  2813               	goto	i1l161
  3034                           
  3035                           ;main.c: 260: timerActual++;
  3036  000C  3001               	movlw	1
  3037  000D  0140               	movlb	0	; select bank0
  3038  000E  07E5               	addwf	_timerActual,f
  3039  000F  3000               	movlw	0
  3040  0010  3DE6               	addwfc	_timerActual+1,f
  3041                           
  3042                           ;main.c: 261: PIR0bits.TMR0IF = 0;
  3043  0011  014E               	movlb	14	; select bank14
  3044  0012  128C               	bcf	12,5	;volatile
  3045  0013                     i1l161:	
  3046                           
  3047                           ;main.c: 262: }
  3048                           ;main.c: 263: if (timerActual == timerSetpoint) {
  3049  0013  0140               	movlb	0	; select bank0
  3050  0014  0868               	movf	_timerSetpoint+1,w
  3051  0015  0666               	xorwf	_timerActual+1,w
  3052  0016  1D03               	skipz
  3053  0017  281A               	goto	u80_25
  3054  0018  0867               	movf	_timerSetpoint,w
  3055  0019  0665               	xorwf	_timerActual,w
  3056  001A                     u80_25:	
  3057  001A  1D03               	skipz
  3058  001B  2820               	goto	i1l163
  3059                           
  3060                           ;main.c: 264: timerDone = 1;
  3061  001C  01FB               	clrf	_timerDone
  3062  001D  0AFB               	incf	_timerDone,f
  3063                           
  3064                           ;main.c: 265: T0CON0bits.T0EN = 0;
  3065  001E  014B               	movlb	11	; select bank11
  3066  001F  139E               	bcf	30,7	;volatile
  3067  0020                     i1l163:	
  3068  0020  0870               	movf	??_timerCount,w
  3069  0021  0140               	movlb	0	; select bank0
  3070  0022  00FF               	movwf	127
  3071  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3072  0024  0009               	retfie
  3073  0025                     __end_of_timerCount:	
  3074  007E                     btemp	set	126	;btemp
  3075  007E                     int$flags	set	126
  3076  007E                     wtemp0	set	126


Data Sizes:
    Strings     232
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     69      73
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_22(CODE[13]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_21(CODE[10]), STR_20(CODE[11]), STR_19(CODE[10]), STR_18(CODE[10]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    waitForCommand@p	PTR unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    sendSigfox@hexMessage	PTR unsigned char  size(1) Largest target is 30
		 -> waitForCommand@message(BANK0[30]), 

    serialPrintBT@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[13]), STR_13(CODE[15]), STR_12(CODE[10]), STR_10(CODE[12]), 
		 -> STR_9(CODE[10]), STR_5(CODE[12]), STR_4(CODE[11]), STR_1(CODE[13]), 

    serialFindPeripheral@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[8]), 

    serialPrintPeripheral@s	PTR unsigned char  size(2) Largest target is 30
		 -> waitForCommand@message(BANK0[30]), STR_17(CODE[3]), STR_16(CODE[7]), STR_14(CODE[5]), 
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[12]), STR_3(CODE[11]), 
		 -> STR_2(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_waitForCommand
    _waitForCommand->_getGPSData
    _sendSigfox->_serialPrintPeripheral
    _getWiFiData->_serialPrintBT
    _getWiFiData->_serialPrintPeripheral
    _getGSMData->_serialPrintBT
    _getGSMData->_serialPrintPeripheral
    _serialPrintPeripheral->_serialWritePeripheral
    _getGPSData->_serialPrintBT
    _serialPrintBT->_serialWriteBT

Critical Paths under _timerCount in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_waitForCommand

Critical Paths under _timerCount in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timerCount in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timerCount in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timerCount in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timerCount in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timerCount in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timerCount in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6248
                                             67 BANK0      2     2      0
                       _initBTSerial
                _setActivePeripheral
                     _waitForCommand
 ---------------------------------------------------------------------------------
 (1) _waitForCommand                                      68    68      0    6226
                                             10 COMMON     1     1      0
                                              0 BANK0     67    67      0
                         _getGPSData
                         _getGSMData
                        _getWiFiData
                         _sendSigfox
                       _serialReadBT
                         _startTimer
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     267
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     411
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _serialReadBT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sendSigfox                                           1     1      0     660
                                              7 COMMON     1     1      0
              _serialPrintPeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _getWiFiData                                          2     2      0    1509
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _getGSMData                                           2     2      0    1509
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (3) _serialPrintPeripheral                                5     3      2     589
                                              2 COMMON     5     3      2
              _serialWritePeripheral
 ---------------------------------------------------------------------------------
 (4) _serialWritePeripheral                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getGPSData                                           3     3      0    1133
                                              7 COMMON     3     3      0
               _serialFindPeripheral
                      _serialPrintBT
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           2     0      2     340
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _setActivePeripheral                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serialPrintBT                                        5     3      2     536
                                              2 COMMON     5     3      2
                      _serialWriteBT
 ---------------------------------------------------------------------------------
 (3) _serialWriteBT                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serialFindPeripheral                                 5     3      2     143
                                              1 COMMON     5     3      2
               _serialReadPeripheral
 ---------------------------------------------------------------------------------
 (3) _serialReadPeripheral                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBTSerial                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timerCount                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initBTSerial
   _setActivePeripheral
   _waitForCommand
     _getGPSData
       _serialFindPeripheral
         _serialReadPeripheral
       _serialPrintBT
         _serialWriteBT
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getGSMData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getWiFiData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _sendSigfox
       _serialPrintPeripheral
         _serialWritePeripheral
       _setActivePeripheral
     _serialReadBT
     _startTimer
     _strcmp
     _strncmp

 _timerCount (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      55       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     45      49       6       91.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      55      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Apr 06 00:10:44 2018

                   __CFG_CP$OFF 0000                              l96 0453                     __CFG_LVP$ON 0000  
                           l210 0031                             l108 0437                             l132 045B  
                           l125 01A0                             l144 042D                             l193 022F  
                           l188 020F                             l954 043F                             l980 0173  
                           l972 0164                             l964 0155                             l988 0182  
                           l998 0192                             u907 0148                             u917 0240  
                           u837 02DB                             u847 01BE                             u857 01CF  
                           u867 01F5                             u877 00EE                             u887 00FF  
                           u897 0125           serialFindPeripheral@i 0074           serialFindPeripheral@s 0071  
          sendSigfox@hexMessage 0077                    __CFG_BORV$LO 0000                             wreg 0009  
                 __CFG_BBEN$OFF 0000                    __CFG_ZCD$OFF 0000                            l1020 02CD  
                          l1014 02CB                            l1030 0323                            l1110 0220  
                          l1006 0309                            l1112 0231                            l1018 02AF  
                          l1130 02A7                            l1124 0288                            l1140 0263  
                          l1062 01DE                            l1046 0435                            l1126 0290  
                          l1150 0283                            l1080 010E                            l1064 01EB  
                          l1144 027A                            l1090 0131                            l1082 011B  
                          l1092 013E                            l1148 0247                            l1180 0087  
                          l1172 0069                            l1164 003E                            l1260 02E9  
                          l1166 0054                            l1184 009C                            l1176 0078  
                          l1196 00B3                            l1198 00CE                            STR_1 0391  
                          STR_2 0351                            STR_3 03F0                            STR_4 03DA  
                          STR_5 03B7                            STR_6 03AB                            STR_7 0441  
                          STR_8 03CF                            STR_9 03FB                   __CFG_FCMEN$ON 0000  
  __end_of_serialFindPeripheral 02CF                            _main 02CF                            fsr0h 0005  
                          fsr1h 0007                            indf0 0000                            fsr0l 0004  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0025                   __CFG_CSWEN$ON 0000  
                 __CFG_MCLRE$ON 0000                           ?_main 0070                           STR_10 03C3  
                         STR_11 044A                           STR_12 0405                           STR_20 03E5  
                         STR_21 040F                           STR_13 0375                           STR_14 0469  
                         STR_22 039E                           STR_15 0384                           STR_16 0462  
                         STR_17 0361                   __CFG_WDTE$OFF 0000                           STR_18 0423  
                         STR_19 0419                   ?_initBTSerial 0070                           i1l161 0013  
                         i1l163 0020                           u80_25 001A    __size_of_setActivePeripheral 0059  
                 __CFG_WRTB$OFF 0000                   __CFG_WRTC$OFF 0000                           status 0003  
                         wtemp0 007E                 __end_of_strncmp 0286                 __initialization 0027  
          _serialReadPeripheral 0437                    __end_of_main 02ED                  __CFG_SAFEN$OFF 0000  
       ??_serialPrintPeripheral 0074                  ??_initBTSerial 0071                          ??_main 0063  
          __size_of_getWiFiData 0054                          _ANSELA 1F38                          _ANSELB 1F43  
                        _ANSELC 1F4E                          _T0CON0 059E                          _T0CON1 059F  
                        _RC1REG 0119                          _RC2REG 0A19                          _RA4PPS 1F14  
                        _RC1PPS 1F21                          _RB6PPS 1F1E                          _RC4PPS 1F24  
                        _RC6PPS 1F26                  __CFG_WDTCCS$SC 0000                          _SP1BRG 011B  
                        _SP2BRG 0A1B         setActivePeripheral@peri 0071                          _TX1REG 011A  
                        _TX2REG 0A1A                          _TRISC0 00A0                          _TRISA5 0095  
                        _TRISB5 009D                          _TRISC3 00A3                          _TRISC5 00A5  
                __CFG_PWRTE$OFF 0000             waitForCommand@i_431 0060           ?_serialReadPeripheral 0070  
               getGPSData@found 0078                  __CFG_STVREN$ON 0000                          _strcmp 0286  
          _serialFindPeripheral 02AD         __size_of_waitForCommand 00A6                       ??_strncmp 0075  
       __end_of__initialization 002D           __end_of_serialPrintBT 033B  __size_of_serialWritePeripheral 0008  
         __end_of_serialWriteBT 0462   __end_of_serialWritePeripheral 045A                  __pcstackCOMMON 0070  
         ?_serialFindPeripheral 0071                      __pbssBANK0 0065                      _getGSMData 00D7  
                    _getGPSData 01FB            __end_of_initBTSerial 0351          ??_serialReadPeripheral 0071  
           _setActivePeripheral 014E          serialPrintPeripheral@i 0075          serialPrintPeripheral@s 0072  
                    __pmaintext 02CF                 __CFG_PPS1WAY$ON 0000                      __pintentry 0004  
           __CFG_RSTOSC$HFINT32 0000                         ?_strcmp 0071            ?_setActivePeripheral 0070  
                 ?_serialReadBT 0070          ??_serialFindPeripheral 0073                         __ptext1 0031  
                       __ptext2 0246                         __ptext3 0286                         __ptext4 042D  
                       __ptext5 02ED                         __ptext6 01A7                         __ptext7 00D7  
                       __ptext8 0307                         __ptext9 0452  __size_of_serialPrintPeripheral 001A  
 __end_of_serialPrintPeripheral 0321                  _waitForCommand 0031                 __CFG_WRTAPP$OFF 0000  
               __size_of_strcmp 0027           ??_setActivePeripheral 0071                 __CFG_WRTSAF$OFF 0000  
                       _strncmp 0246            end_of_initialization 002D                      _sendSigfox 02ED  
                   ?_getGPSData 0070                     ?_getGSMData 0070                  ??_serialReadBT 0071  
                serialPrintBT@i 0075                  serialPrintBT@s 0072                      _timerCount 0004  
        __end_of_waitForCommand 00D7                         strcmp@r 0074           __CFG_WDTCPS$WDTCPS_31 0000  
                serialWriteBT@c 0071                   ??_getWiFiData 0077           __size_of_initBTSerial 0016  
              __CFG_FEXTOSC$OFF 0000                      _startTimer 0364                 ?_waitForCommand 0070  
           __size_of_getGPSData 004B             __size_of_getGSMData 0077                    _initBTSerial 033B  
                __end_of_strcmp 02AD             start_initialization 0027             __end_of_getWiFiData 01FB  
                   ?_sendSigfox 0070                __CFG_LPBOREN$OFF 0000           _serialWritePeripheral 0452  
                   ?_timerCount 0070                        ??_strcmp 0073            __end_of_serialReadBT 0437  
                   __pbssCOMMON 007B          __size_of_serialPrintBT 001A                       ___latbits 0001  
                 __pcstackBANK0 0020          __size_of_serialWriteBT 0008                     ?_startTimer 0071  
 __size_of_serialReadPeripheral 000A             __size_of_sendSigfox 001A                     _getWiFiData 01A7  
                      ?_strncmp 0071          serialWritePeripheral@c 0071                    ??_getGPSData 0077  
                  ??_getGSMData 0077             __size_of_timerCount 0021                        _PIE0bits 0716  
                 _serialPrintBT 0321                        _PIR0bits 070C                        _PIR3bits 070F  
                 _serialWriteBT 045A          ?_serialWritePeripheral 0070               __CFG_BBSIZE$BB512 0000  
                     _timerDone 007B     __end_of_setActivePeripheral 01A7             __size_of_startTimer 0011  
                  _RX1DTPPSbits 1ECB   __size_of_serialFindPeripheral 0022              __end_of_getGPSData 0246  
            __end_of_getGSMData 014E               startTimer@seconds 0071                 waitForCommand@i 005E  
               waitForCommand@p 0062           _serialPrintPeripheral 0307                    _RX2DTPPSbits 1ECD  
                ?_serialPrintBT 0072                  ?_serialWriteBT 0070                ??_waitForCommand 007A  
         __size_of_serialReadBT 000A           waitForCommand@command 003E                     getGPSData@c 0079  
         waitForCommand@message 0020                      _T0CON0bits 059E                        __ptext10 01FB  
                      __ptext11 0364                        __ptext12 014E                        __ptext13 0321  
                      __ptext14 045A                        __ptext15 02AD                        __ptext16 0437  
                      __ptext17 033B                    ??_sendSigfox 0077                __size_of_strncmp 0040  
                 __size_of_main 001E                      strncmp@len 0073                   _timerSetpoint 0067  
                  _serialReadBT 042D            __CFG_WDTCWS$WDTCWS_7 0000                      _RC1STAbits 011D  
                    _RC2STAbits 0A1D                        int$flags 007E                    ??_timerCount 0070  
            __end_of_sendSigfox 0307          ?_serialPrintPeripheral 0072                      _INTCONbits 000B  
                __pstringtext10 03DA                  __pstringtext11 03E5                  __pstringtext20 0462  
                __pstringtext12 03F0                  __pstringtext21 0469                  __pstringtext13 03FB  
                __pstringtext22 0000                  __pstringtext14 0405                  __pstringtext15 040F  
                __pstringtext16 0419                  __pstringtext17 0423                  __pstringtext18 0441  
                __pstringtext19 044A                    ??_startTimer 0073                        intlevel1 0000  
               ??_serialPrintBT 0074              __end_of_timerCount 0025               __CFG_CLKOUTEN$OFF 0000  
               ??_serialWriteBT 0071                       strncmp@s1 0077                       strncmp@s2 0071  
            __end_of_startTimer 0375                   __pstringtext1 0351                   __pstringtext2 0375  
                 __pstringtext3 0384                   __pstringtext4 0391                   __pstringtext5 039E  
                 __pstringtext6 03AB                   __pstringtext7 03B7                   __pstringtext8 03C3  
                 __pstringtext9 03CF                    ?_getWiFiData 0070                     _timerActual 0065  
                      strcmp@s1 0075                        strcmp@s2 0071    __end_of_serialReadPeripheral 0441  
                    _TX1STAbits 011E                      _TX2STAbits 0A1E         ??_serialWritePeripheral 0071  
