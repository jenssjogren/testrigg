

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Apr 18 16:21:48 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F15344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	stringtext15,global,class=STRCODE,delta=2
    19                           	psect	stringtext16,global,class=STRCODE,delta=2
    20                           	psect	stringtext17,global,class=STRCODE,delta=2
    21                           	psect	stringtext18,global,class=STRCODE,delta=2
    22                           	psect	stringtext19,global,class=STRCODE,delta=2
    23                           	psect	stringtext20,global,class=STRCODE,delta=2
    24                           	psect	stringtext21,global,class=STRCODE,delta=2
    25                           	psect	stringtext22,global,class=STRCODE,delta=2
    26                           	psect	stringtext23,global,class=STRCODE,delta=2
    27                           	psect	stringtext24,global,class=STRCODE,delta=2
    28                           	psect	stringtext25,global,class=STRCODE,delta=2
    29                           	psect	cinit,global,class=CODE,merge=1,delta=2
    30                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text4,local,class=CODE,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,merge=1,delta=2
    42                           	psect	text8,local,class=CODE,merge=1,delta=2
    43                           	psect	text9,local,class=CODE,merge=1,delta=2
    44                           	psect	text10,local,class=CODE,merge=1,delta=2
    45                           	psect	text11,local,class=CODE,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,merge=1,delta=2
    49                           	psect	text15,local,class=CODE,merge=1,delta=2
    50                           	psect	text16,local,class=CODE,merge=1,delta=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 1.44
    56                           ; Generated 14/09/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F15344 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0119                     	;# 
   117  0119                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011A                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011C                     	;# 
   128  011C                     	;# 
   129  011C                     	;# 
   130  011D                     	;# 
   131  011D                     	;# 
   132  011D                     	;# 
   133  011E                     	;# 
   134  011E                     	;# 
   135  011E                     	;# 
   136  011F                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  011F                     	;# 
   140  011F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  018E                     	;# 
   144  018F                     	;# 
   145  0190                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  020C                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  020E                     	;# 
   152  020F                     	;# 
   153  020F                     	;# 
   154  0210                     	;# 
   155  0210                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  028C                     	;# 
   159  028C                     	;# 
   160  028D                     	;# 
   161  028D                     	;# 
   162  028E                     	;# 
   163  028F                     	;# 
   164  0290                     	;# 
   165  0291                     	;# 
   166  030C                     	;# 
   167  030C                     	;# 
   168  030D                     	;# 
   169  030E                     	;# 
   170  030F                     	;# 
   171  0310                     	;# 
   172  0310                     	;# 
   173  0311                     	;# 
   174  0312                     	;# 
   175  0313                     	;# 
   176  0314                     	;# 
   177  0315                     	;# 
   178  0316                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  031C                     	;# 
   183  031D                     	;# 
   184  031E                     	;# 
   185  038C                     	;# 
   186  038D                     	;# 
   187  038E                     	;# 
   188  058C                     	;# 
   189  058C                     	;# 
   190  058D                     	;# 
   191  058E                     	;# 
   192  058F                     	;# 
   193  058F                     	;# 
   194  0590                     	;# 
   195  0591                     	;# 
   196  0592                     	;# 
   197  0593                     	;# 
   198  059C                     	;# 
   199  059C                     	;# 
   200  059D                     	;# 
   201  059D                     	;# 
   202  059E                     	;# 
   203  059F                     	;# 
   204  060C                     	;# 
   205  060D                     	;# 
   206  060E                     	;# 
   207  060F                     	;# 
   208  0610                     	;# 
   209  0611                     	;# 
   210  0612                     	;# 
   211  0613                     	;# 
   212  0614                     	;# 
   213  070C                     	;# 
   214  070D                     	;# 
   215  070E                     	;# 
   216  070F                     	;# 
   217  0710                     	;# 
   218  0711                     	;# 
   219  0712                     	;# 
   220  0713                     	;# 
   221  0716                     	;# 
   222  0717                     	;# 
   223  0718                     	;# 
   224  0719                     	;# 
   225  071A                     	;# 
   226  071B                     	;# 
   227  071C                     	;# 
   228  071D                     	;# 
   229  0796                     	;# 
   230  0797                     	;# 
   231  0798                     	;# 
   232  0799                     	;# 
   233  079A                     	;# 
   234  079B                     	;# 
   235  080C                     	;# 
   236  080D                     	;# 
   237  080E                     	;# 
   238  080F                     	;# 
   239  0810                     	;# 
   240  0811                     	;# 
   241  0812                     	;# 
   242  0813                     	;# 
   243  0814                     	;# 
   244  081A                     	;# 
   245  081A                     	;# 
   246  081B                     	;# 
   247  081C                     	;# 
   248  081C                     	;# 
   249  081D                     	;# 
   250  081E                     	;# 
   251  081F                     	;# 
   252  088C                     	;# 
   253  088D                     	;# 
   254  088E                     	;# 
   255  088F                     	;# 
   256  0890                     	;# 
   257  0891                     	;# 
   258  0892                     	;# 
   259  0893                     	;# 
   260  0895                     	;# 
   261  0896                     	;# 
   262  090C                     	;# 
   263  090E                     	;# 
   264  090F                     	;# 
   265  091F                     	;# 
   266  098F                     	;# 
   267  098F                     	;# 
   268  0990                     	;# 
   269  0991                     	;# 
   270  0992                     	;# 
   271  0993                     	;# 
   272  0994                     	;# 
   273  0995                     	;# 
   274  0996                     	;# 
   275  0997                     	;# 
   276  0A19                     	;# 
   277  0A19                     	;# 
   278  0A1A                     	;# 
   279  0A1A                     	;# 
   280  0A1B                     	;# 
   281  0A1B                     	;# 
   282  0A1B                     	;# 
   283  0A1C                     	;# 
   284  0A1C                     	;# 
   285  0A1D                     	;# 
   286  0A1D                     	;# 
   287  0A1E                     	;# 
   288  0A1E                     	;# 
   289  0A1F                     	;# 
   290  0A1F                     	;# 
   291  0A1F                     	;# 
   292  1E0F                     	;# 
   293  1E10                     	;# 
   294  1E11                     	;# 
   295  1E12                     	;# 
   296  1E13                     	;# 
   297  1E14                     	;# 
   298  1E15                     	;# 
   299  1E16                     	;# 
   300  1E17                     	;# 
   301  1E18                     	;# 
   302  1E19                     	;# 
   303  1E1A                     	;# 
   304  1E1B                     	;# 
   305  1E1C                     	;# 
   306  1E1D                     	;# 
   307  1E1E                     	;# 
   308  1E1F                     	;# 
   309  1E20                     	;# 
   310  1E21                     	;# 
   311  1E22                     	;# 
   312  1E23                     	;# 
   313  1E24                     	;# 
   314  1E25                     	;# 
   315  1E26                     	;# 
   316  1E27                     	;# 
   317  1E28                     	;# 
   318  1E29                     	;# 
   319  1E2A                     	;# 
   320  1E2B                     	;# 
   321  1E2C                     	;# 
   322  1E2D                     	;# 
   323  1E2E                     	;# 
   324  1E2F                     	;# 
   325  1E30                     	;# 
   326  1E31                     	;# 
   327  1E32                     	;# 
   328  1E33                     	;# 
   329  1E34                     	;# 
   330  1E35                     	;# 
   331  1E36                     	;# 
   332  1E37                     	;# 
   333  1E8F                     	;# 
   334  1E90                     	;# 
   335  1E91                     	;# 
   336  1E92                     	;# 
   337  1E93                     	;# 
   338  1E9C                     	;# 
   339  1EA1                     	;# 
   340  1EA2                     	;# 
   341  1EB1                     	;# 
   342  1EBB                     	;# 
   343  1EBC                     	;# 
   344  1EBD                     	;# 
   345  1EBE                     	;# 
   346  1EC3                     	;# 
   347  1EC5                     	;# 
   348  1EC6                     	;# 
   349  1EC7                     	;# 
   350  1ECB                     	;# 
   351  1ECC                     	;# 
   352  1ECD                     	;# 
   353  1ECE                     	;# 
   354  1F10                     	;# 
   355  1F11                     	;# 
   356  1F12                     	;# 
   357  1F13                     	;# 
   358  1F14                     	;# 
   359  1F15                     	;# 
   360  1F1C                     	;# 
   361  1F1D                     	;# 
   362  1F1E                     	;# 
   363  1F1F                     	;# 
   364  1F20                     	;# 
   365  1F21                     	;# 
   366  1F22                     	;# 
   367  1F23                     	;# 
   368  1F24                     	;# 
   369  1F25                     	;# 
   370  1F26                     	;# 
   371  1F27                     	;# 
   372  1F38                     	;# 
   373  1F39                     	;# 
   374  1F3A                     	;# 
   375  1F3B                     	;# 
   376  1F3C                     	;# 
   377  1F3D                     	;# 
   378  1F3E                     	;# 
   379  1F3F                     	;# 
   380  1F43                     	;# 
   381  1F44                     	;# 
   382  1F45                     	;# 
   383  1F46                     	;# 
   384  1F47                     	;# 
   385  1F48                     	;# 
   386  1F49                     	;# 
   387  1F4A                     	;# 
   388  1F4E                     	;# 
   389  1F4F                     	;# 
   390  1F50                     	;# 
   391  1F51                     	;# 
   392  1F52                     	;# 
   393  1F53                     	;# 
   394  1F54                     	;# 
   395  1F55                     	;# 
   396  1FE4                     	;# 
   397  1FE5                     	;# 
   398  1FE6                     	;# 
   399  1FE7                     	;# 
   400  1FE8                     	;# 
   401  1FE8                     	;# 
   402  1FE9                     	;# 
   403  1FEA                     	;# 
   404  1FEA                     	;# 
   405  1FEB                     	;# 
   406  1FED                     	;# 
   407  1FEE                     	;# 
   408  1FEF                     	;# 
   409  000B                     _INTCONbits	set	11
   410  00A5                     _TRISC5	set	165
   411  0095                     _TRISA5	set	149
   412  00A0                     _TRISC0	set	160
   413  00A3                     _TRISC3	set	163
   414  009D                     _TRISB5	set	157
   415  011B                     _SP1BRG	set	283
   416  011E                     _TX1STAbits	set	286
   417  0119                     _RC1REG	set	281
   418  011D                     _RC1STAbits	set	285
   419  011A                     _TX1REG	set	282
   420  059F                     _T0CON1	set	1439
   421  059E                     _T0CON0	set	1438
   422  059E                     _T0CON0bits	set	1438
   423  0716                     _PIE0bits	set	1814
   424  070C                     _PIR0bits	set	1804
   425  070F                     _PIR3bits	set	1807
   426  0A1B                     _SP2BRG	set	2587
   427  0A19                     _RC2REG	set	2585
   428  0A1A                     _TX2REG	set	2586
   429  0A1D                     _RC2STAbits	set	2589
   430  0A1E                     _TX2STAbits	set	2590
   431  1ECB                     _RX1DTPPSbits	set	7883
   432  1ECD                     _RX2DTPPSbits	set	7885
   433  1F24                     _RC4PPS	set	7972
   434  1F14                     _RA4PPS	set	7956
   435  1F21                     _RC1PPS	set	7969
   436  1F26                     _RC6PPS	set	7974
   437  1F1E                     _RB6PPS	set	7966
   438  1F4E                     _ANSELC	set	8014
   439  1F43                     _ANSELB	set	8003
   440  1F38                     _ANSELA	set	7992
   441                           
   442                           	psect	stringtext1
   443  037C                     __pstringtext1:	
   444  037C                     STR_24:	
   445  037C  3447               	retlw	71	;'G'
   446  037D  3445               	retlw	69	;'E'
   447  037E  3454               	retlw	84	;'T'
   448  037F  345F               	retlw	95	;'_'
   449  0380  3441               	retlw	65	;'A'
   450  0381  344C               	retlw	76	;'L'
   451  0382  344C               	retlw	76	;'L'
   452  0383  345F               	retlw	95	;'_'
   453  0384  3453               	retlw	83	;'S'
   454  0385  3445               	retlw	69	;'E'
   455  0386  344E               	retlw	78	;'N'
   456  0387  3444               	retlw	68	;'D'
   457  0388  345F               	retlw	95	;'_'
   458  0389  3453               	retlw	83	;'S'
   459  038A  3449               	retlw	73	;'I'
   460  038B  3447               	retlw	71	;'G'
   461  038C  3446               	retlw	70	;'F'
   462  038D  344F               	retlw	79	;'O'
   463  038E  3458               	retlw	88	;'X'
   464  038F  340D               	retlw	13
   465  0390  340A               	retlw	10
   466  0391  3400               	retlw	0
   467                           
   468                           	psect	stringtext2
   469  03A8                     __pstringtext2:	
   470  03A8                     STR_2:	
   471  03A8  3441               	retlw	65	;'A'
   472  03A9  3454               	retlw	84	;'T'
   473  03AA  342B               	retlw	43	;'+'
   474  03AB  3443               	retlw	67	;'C'
   475  03AC  3457               	retlw	87	;'W'
   476  03AD  344C               	retlw	76	;'L'
   477  03AE  3441               	retlw	65	;'A'
   478  03AF  3450               	retlw	80	;'P'
   479  03B0  344F               	retlw	79	;'O'
   480  03B1  3450               	retlw	80	;'P'
   481  03B2  3454               	retlw	84	;'T'
   482  03B3  343D               	retlw	61	;'='
   483  03B4  3431               	retlw	49	;'1'
   484  03B5  342C               	retlw	44	;','
   485  03B6  3431               	retlw	49	;'1'
   486  03B7  3432               	retlw	50	;'2'
   487  03B8  340D               	retlw	13
   488  03B9  340A               	retlw	10
   489  03BA  3400               	retlw	0
   490                           
   491                           	psect	stringtext3
   492  03CC                     __pstringtext3:	
   493  03CC                     STR_25:	
   494  03CC  3430               	retlw	48	;'0'
   495  03CD  3430               	retlw	48	;'0'
   496  03CE  3430               	retlw	48	;'0'
   497  03CF  3430               	retlw	48	;'0'
   498  03D0  3430               	retlw	48	;'0'
   499  03D1  3430               	retlw	48	;'0'
   500  03D2  3430               	retlw	48	;'0'
   501  03D3  3430               	retlw	48	;'0'
   502  03D4  3430               	retlw	48	;'0'
   503  03D5  3430               	retlw	48	;'0'
   504  03D6  3430               	retlw	48	;'0'
   505  03D7  3430               	retlw	48	;'0'
   506  03D8  340D               	retlw	13
   507  03D9  340A               	retlw	10
   508  03DA  3400               	retlw	0
   509                           
   510                           	psect	stringtext4
   511  03DB                     __pstringtext4:	
   512  03DB                     STR_13:	
   513  03DB  3453               	retlw	83	;'S'
   514  03DC  3449               	retlw	73	;'I'
   515  03DD  3447               	retlw	71	;'G'
   516  03DE  3446               	retlw	70	;'F'
   517  03DF  344F               	retlw	79	;'O'
   518  03E0  3458               	retlw	88	;'X'
   519  03E1  345F               	retlw	95	;'_'
   520  03E2  3453               	retlw	83	;'S'
   521  03E3  3454               	retlw	84	;'T'
   522  03E4  3441               	retlw	65	;'A'
   523  03E5  3452               	retlw	82	;'R'
   524  03E6  3454               	retlw	84	;'T'
   525  03E7  340D               	retlw	13
   526  03E8  340A               	retlw	10
   527  03E9  3400               	retlw	0
   528                           
   529                           	psect	stringtext5
   530  03EA                     __pstringtext5:	
   531  03EA                     STR_19:	
   532  03EA  344D               	retlw	77	;'M'
   533  03EB  3445               	retlw	69	;'E'
   534  03EC  3453               	retlw	83	;'S'
   535  03ED  3453               	retlw	83	;'S'
   536  03EE  3441               	retlw	65	;'A'
   537  03EF  3447               	retlw	71	;'G'
   538  03F0  3445               	retlw	69	;'E'
   539  03F1  345F               	retlw	95	;'_'
   540  03F2  3445               	retlw	69	;'E'
   541  03F3  344E               	retlw	78	;'N'
   542  03F4  3444               	retlw	68	;'D'
   543  03F5  340D               	retlw	13
   544  03F6  340A               	retlw	10
   545  03F7  3400               	retlw	0
   546                           
   547                           	psect	stringtext6
   548  03F8                     __pstringtext6:	
   549  03F8                     STR_15:	
   550  03F8  3453               	retlw	83	;'S'
   551  03F9  3449               	retlw	73	;'I'
   552  03FA  3447               	retlw	71	;'G'
   553  03FB  3446               	retlw	70	;'F'
   554  03FC  344F               	retlw	79	;'O'
   555  03FD  3458               	retlw	88	;'X'
   556  03FE  345F               	retlw	95	;'_'
   557  03FF  3445               	retlw	69	;'E'
   558  0400  344E               	retlw	78	;'N'
   559  0401  3444               	retlw	68	;'D'
   560  0402  340D               	retlw	13
   561  0403  340A               	retlw	10
   562  0404  3400               	retlw	0
   563                           
   564                           	psect	stringtext7
   565  0405                     __pstringtext7:	
   566  0405                     STR_1:	
   567  0405  3457               	retlw	87	;'W'
   568  0406  3449               	retlw	73	;'I'
   569  0407  3446               	retlw	70	;'F'
   570  0408  3449               	retlw	73	;'I'
   571  0409  345F               	retlw	95	;'_'
   572  040A  3453               	retlw	83	;'S'
   573  040B  3454               	retlw	84	;'T'
   574  040C  3441               	retlw	65	;'A'
   575  040D  3452               	retlw	82	;'R'
   576  040E  3454               	retlw	84	;'T'
   577  040F  340D               	retlw	13
   578  0410  340A               	retlw	10
   579  0411  3400               	retlw	0
   580                           
   581                           	psect	stringtext8
   582  0412                     __pstringtext8:	
   583  0412                     STR_29:	
   584  0412  3453               	retlw	83	;'S'
   585  0413  3445               	retlw	69	;'E'
   586  0414  344E               	retlw	78	;'N'
   587  0415  3444               	retlw	68	;'D'
   588  0416  345F               	retlw	95	;'_'
   589  0417  3453               	retlw	83	;'S'
   590  0418  3449               	retlw	73	;'I'
   591  0419  3447               	retlw	71	;'G'
   592  041A  3446               	retlw	70	;'F'
   593  041B  344F               	retlw	79	;'O'
   594  041C  3458               	retlw	88	;'X'
   595  041D  343A               	retlw	58	;':'
   596  041E  3400               	retlw	0
   597                           
   598                           	psect	stringtext9
   599  041F                     __pstringtext9:	
   600  041F                     STR_6:	
   601  041F  3441               	retlw	65	;'A'
   602  0420  3454               	retlw	84	;'T'
   603  0421  342B               	retlw	43	;'+'
   604  0422  3443               	retlw	67	;'C'
   605  0423  3452               	retlw	82	;'R'
   606  0424  3445               	retlw	69	;'E'
   607  0425  3447               	retlw	71	;'G'
   608  0426  343D               	retlw	61	;'='
   609  0427  3432               	retlw	50	;'2'
   610  0428  340D               	retlw	13
   611  0429  340A               	retlw	10
   612  042A  3400               	retlw	0
   613                           
   614                           	psect	stringtext10
   615  042B                     __pstringtext10:	
   616  042B                     STR_5:	
   617  042B  3447               	retlw	71	;'G'
   618  042C  3453               	retlw	83	;'S'
   619  042D  344D               	retlw	77	;'M'
   620  042E  345F               	retlw	95	;'_'
   621  042F  3453               	retlw	83	;'S'
   622  0430  3454               	retlw	84	;'T'
   623  0431  3441               	retlw	65	;'A'
   624  0432  3452               	retlw	82	;'R'
   625  0433  3454               	retlw	84	;'T'
   626  0434  340D               	retlw	13
   627  0435  340A               	retlw	10
   628  0436  3400               	retlw	0
   629                           
   630                           	psect	stringtext11
   631  0437                     __pstringtext11:	
   632  0437                     STR_10:	
   633  0437  3447               	retlw	71	;'G'
   634  0438  3450               	retlw	80	;'P'
   635  0439  3453               	retlw	83	;'S'
   636  043A  345F               	retlw	95	;'_'
   637  043B  3453               	retlw	83	;'S'
   638  043C  3454               	retlw	84	;'T'
   639  043D  3441               	retlw	65	;'A'
   640  043E  3452               	retlw	82	;'R'
   641  043F  3454               	retlw	84	;'T'
   642  0440  340D               	retlw	13
   643  0441  340A               	retlw	10
   644  0442  3400               	retlw	0
   645                           
   646                           	psect	stringtext12
   647  0443                     __pstringtext12:	
   648  0443                     STR_8:	
   649  0443  3441               	retlw	65	;'A'
   650  0444  3454               	retlw	84	;'T'
   651  0445  342B               	retlw	43	;'+'
   652  0446  3443               	retlw	67	;'C'
   653  0447  3452               	retlw	82	;'R'
   654  0448  3445               	retlw	69	;'E'
   655  0449  3447               	retlw	71	;'G'
   656  044A  343F               	retlw	63	;'?'
   657  044B  340D               	retlw	13
   658  044C  340A               	retlw	10
   659  044D  3400               	retlw	0
   660                           
   661                           	psect	stringtext13
   662  044E                     __pstringtext13:	
   663  044E                     STR_4:	
   664  044E  3457               	retlw	87	;'W'
   665  044F  3449               	retlw	73	;'I'
   666  0450  3446               	retlw	70	;'F'
   667  0451  3449               	retlw	73	;'I'
   668  0452  345F               	retlw	95	;'_'
   669  0453  3445               	retlw	69	;'E'
   670  0454  344E               	retlw	78	;'N'
   671  0455  3444               	retlw	68	;'D'
   672  0456  340D               	retlw	13
   673  0457  340A               	retlw	10
   674  0458  3400               	retlw	0
   675                           
   676                           	psect	stringtext14
   677  0459                     __pstringtext14:	
   678  0459                     STR_22:	
   679  0459  3447               	retlw	71	;'G'
   680  045A  3445               	retlw	69	;'E'
   681  045B  3454               	retlw	84	;'T'
   682  045C  345F               	retlw	95	;'_'
   683  045D  3457               	retlw	87	;'W'
   684  045E  3449               	retlw	73	;'I'
   685  045F  3446               	retlw	70	;'F'
   686  0460  3449               	retlw	73	;'I'
   687  0461  340D               	retlw	13
   688  0462  340A               	retlw	10
   689  0463  3400               	retlw	0
   690                           
   691                           	psect	stringtext15
   692  0464                     __pstringtext15:	
   693  0464                     STR_3:	
   694  0464  3441               	retlw	65	;'A'
   695  0465  3454               	retlw	84	;'T'
   696  0466  342B               	retlw	43	;'+'
   697  0467  3443               	retlw	67	;'C'
   698  0468  3457               	retlw	87	;'W'
   699  0469  344C               	retlw	76	;'L'
   700  046A  3441               	retlw	65	;'A'
   701  046B  3450               	retlw	80	;'P'
   702  046C  340D               	retlw	13
   703  046D  340A               	retlw	10
   704  046E  3400               	retlw	0
   705                           
   706                           	psect	stringtext16
   707  046F                     __pstringtext16:	
   708  046F                     STR_9:	
   709  046F  3447               	retlw	71	;'G'
   710  0470  3453               	retlw	83	;'S'
   711  0471  344D               	retlw	77	;'M'
   712  0472  345F               	retlw	95	;'_'
   713  0473  3445               	retlw	69	;'E'
   714  0474  344E               	retlw	78	;'N'
   715  0475  3444               	retlw	68	;'D'
   716  0476  340D               	retlw	13
   717  0477  340A               	retlw	10
   718  0478  3400               	retlw	0
   719                           
   720                           	psect	stringtext17
   721  0479                     __pstringtext17:	
   722  0479                     STR_12:	
   723  0479  3447               	retlw	71	;'G'
   724  047A  3450               	retlw	80	;'P'
   725  047B  3453               	retlw	83	;'S'
   726  047C  345F               	retlw	95	;'_'
   727  047D  3445               	retlw	69	;'E'
   728  047E  344E               	retlw	78	;'N'
   729  047F  3444               	retlw	68	;'D'
   730  0480  340D               	retlw	13
   731  0481  340A               	retlw	10
   732  0482  3400               	retlw	0
   733                           
   734                           	psect	stringtext18
   735  0483                     __pstringtext18:	
   736  0483                     STR_27:	
   737  0483  3447               	retlw	71	;'G'
   738  0484  3445               	retlw	69	;'E'
   739  0485  3454               	retlw	84	;'T'
   740  0486  345F               	retlw	95	;'_'
   741  0487  3441               	retlw	65	;'A'
   742  0488  344C               	retlw	76	;'L'
   743  0489  344C               	retlw	76	;'L'
   744  048A  340D               	retlw	13
   745  048B  340A               	retlw	10
   746  048C  3400               	retlw	0
   747                           
   748                           	psect	stringtext19
   749  048D                     __pstringtext19:	
   750  048D                     STR_20:	
   751  048D  3447               	retlw	71	;'G'
   752  048E  3445               	retlw	69	;'E'
   753  048F  3454               	retlw	84	;'T'
   754  0490  345F               	retlw	95	;'_'
   755  0491  3447               	retlw	71	;'G'
   756  0492  3453               	retlw	83	;'S'
   757  0493  344D               	retlw	77	;'M'
   758  0494  340D               	retlw	13
   759  0495  340A               	retlw	10
   760  0496  3400               	retlw	0
   761                           
   762                           	psect	stringtext20
   763  0497                     __pstringtext20:	
   764  0497                     STR_18:	
   765  0497  3447               	retlw	71	;'G'
   766  0498  3445               	retlw	69	;'E'
   767  0499  3454               	retlw	84	;'T'
   768  049A  345F               	retlw	95	;'_'
   769  049B  3447               	retlw	71	;'G'
   770  049C  3450               	retlw	80	;'P'
   771  049D  3453               	retlw	83	;'S'
   772  049E  340D               	retlw	13
   773  049F  340A               	retlw	10
   774  04A0  3400               	retlw	0
   775                           
   776                           	psect	stringtext21
   777  04B5                     __pstringtext21:	
   778  04B5                     STR_7:	
   779  04B5  3441               	retlw	65	;'A'
   780  04B6  3454               	retlw	84	;'T'
   781  04B7  342B               	retlw	43	;'+'
   782  04B8  3443               	retlw	67	;'C'
   783  04B9  3453               	retlw	83	;'S'
   784  04BA  3451               	retlw	81	;'Q'
   785  04BB  340D               	retlw	13
   786  04BC  340A               	retlw	10
   787  04BD  3400               	retlw	0
   788                           
   789                           	psect	stringtext22
   790  04BE                     __pstringtext22:	
   791  04BE                     STR_11:	
   792  04BE  3424               	retlw	36	;'$'
   793  04BF  3447               	retlw	71	;'G'
   794  04C0  3450               	retlw	80	;'P'
   795  04C1  3447               	retlw	71	;'G'
   796  04C2  3447               	retlw	71	;'G'
   797  04C3  3441               	retlw	65	;'A'
   798  04C4  342C               	retlw	44	;','
   799  04C5  3400               	retlw	0
   800                           
   801                           	psect	stringtext23
   802  04D6                     __pstringtext23:	
   803  04D6                     STR_16:	
   804  04D6  3441               	retlw	65	;'A'
   805  04D7  3454               	retlw	84	;'T'
   806  04D8  3424               	retlw	36	;'$'
   807  04D9  3453               	retlw	83	;'S'
   808  04DA  3446               	retlw	70	;'F'
   809  04DB  343D               	retlw	61	;'='
   810  04DC  3400               	retlw	0
   811                           
   812                           	psect	stringtext24
   813  04DD                     __pstringtext24:	
   814  04DD                     STR_14:	
   815  04DD  3441               	retlw	65	;'A'
   816  04DE  3454               	retlw	84	;'T'
   817  04DF  340D               	retlw	13
   818  04E0  340A               	retlw	10
   819  04E1  3400               	retlw	0
   820                           
   821                           	psect	stringtext25
   822  0000                     __pstringtext25:	
   823  03D8                     
   824                           ; #config settings
   825  0000                     
   826                           	psect	cinit
   827  0027                     start_initialization:	
   828  0027                     __initialization:	
   829                           
   830                           ; Clear objects allocated to COMMON
   831  0027  01FB               	clrf	__pbssCOMMON& (0+127)
   832                           
   833                           ; Clear objects allocated to BANK0
   834  0028  0140               	movlb	0	; select bank0
   835  0029  01E5               	clrf	__pbssBANK0& (0+127)
   836  002A  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   837  002B  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   838  002C  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   839  002D                     end_of_initialization:	
   840                           ;End of C runtime variable initialization code
   841                           
   842  002D                     __end_of__initialization:	
   843  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   844  002E  0140               	movlb	0
   845  002F  3183  2B11         	ljmp	_main	;jump to C main() function
   846                           
   847                           	psect	bssCOMMON
   848  007B                     __pbssCOMMON:	
   849  007B                     _timerDone:	
   850  007B                     	ds	1
   851                           
   852                           	psect	bssBANK0
   853  0065                     __pbssBANK0:	
   854  0065                     _timerActual:	
   855  0065                     	ds	2
   856  0067                     _timerSetpoint:	
   857  0067                     	ds	2
   858                           
   859                           	psect	cstackCOMMON
   860  0070                     __pcstackCOMMON:	
   861  0070                     ?_initBTSerial:	
   862  0070                     ?_setActivePeripheral:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_waitForCommand:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_main:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_serialWritePeripheral:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_serialReadPeripheral:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_serialWriteBT:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_serialReadBT:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_timerCount:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ??_timerCount:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_getWiFiData:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_getGSMData:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_getGPSData:	
   896                           ; 1 bytes @ 0x0
   897                           
   898                           
   899                           ; 1 bytes @ 0x0
   900  0070                     	ds	1
   901  0071                     ??_initBTSerial:	
   902  0071                     ??_setActivePeripheral:	
   903                           ; 1 bytes @ 0x1
   904                           
   905  0071                     ??_serialWritePeripheral:	
   906                           ; 1 bytes @ 0x1
   907                           
   908  0071                     ??_serialReadPeripheral:	
   909                           ; 1 bytes @ 0x1
   910                           
   911  0071                     ?_serialFindPeripheral:	
   912                           ; 1 bytes @ 0x1
   913                           
   914  0071                     ??_serialWriteBT:	
   915                           ; 1 bytes @ 0x1
   916                           
   917  0071                     ??_serialReadBT:	
   918                           ; 1 bytes @ 0x1
   919                           
   920  0071                     ?_startTimer:	
   921                           ; 1 bytes @ 0x1
   922                           
   923  0071                     ?_strcmp:	
   924                           ; 1 bytes @ 0x1
   925                           
   926  0071                     ?_strncmp:	
   927                           ; 2 bytes @ 0x1
   928                           
   929  0071                     serialWritePeripheral@c:	
   930                           ; 2 bytes @ 0x1
   931                           
   932  0071                     setActivePeripheral@peri:	
   933                           ; 1 bytes @ 0x1
   934                           
   935  0071                     serialWriteBT@c:	
   936                           ; 1 bytes @ 0x1
   937                           
   938  0071                     serialFindPeripheral@s:	
   939                           ; 1 bytes @ 0x1
   940                           
   941  0071                     startTimer@seconds:	
   942                           ; 2 bytes @ 0x1
   943                           
   944  0071                     strcmp@s2:	
   945                           ; 2 bytes @ 0x1
   946                           
   947  0071                     strncmp@s2:	
   948                           ; 2 bytes @ 0x1
   949                           
   950                           
   951                           ; 2 bytes @ 0x1
   952  0071                     	ds	1
   953  0072                     ?_serialPrintPeripheral:	
   954  0072                     ?_serialPrintBT:	
   955                           ; 1 bytes @ 0x2
   956                           
   957  0072                     serialPrintPeripheral@s:	
   958                           ; 1 bytes @ 0x2
   959                           
   960  0072                     serialPrintBT@s:	
   961                           ; 2 bytes @ 0x2
   962                           
   963                           
   964                           ; 2 bytes @ 0x2
   965  0072                     	ds	1
   966  0073                     ??_strcmp:	
   967  0073                     ??_serialFindPeripheral:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     ??_startTimer:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     strncmp@len:	
   974                           ; 1 bytes @ 0x3
   975                           
   976                           
   977                           ; 2 bytes @ 0x3
   978  0073                     	ds	1
   979  0074                     ??_serialPrintPeripheral:	
   980  0074                     ??_serialPrintBT:	
   981                           ; 1 bytes @ 0x4
   982                           
   983  0074                     strcmp@r:	
   984                           ; 1 bytes @ 0x4
   985                           
   986  0074                     serialFindPeripheral@i:	
   987                           ; 1 bytes @ 0x4
   988                           
   989                           
   990                           ; 2 bytes @ 0x4
   991  0074                     	ds	1
   992  0075                     ??_strncmp:	
   993  0075                     strcmp@s1:	
   994                           ; 1 bytes @ 0x5
   995                           
   996  0075                     serialPrintPeripheral@i:	
   997                           ; 1 bytes @ 0x5
   998                           
   999  0075                     serialPrintBT@i:	
  1000                           ; 2 bytes @ 0x5
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x5
  1004  0075                     	ds	2
  1005  0077                     ??_getWiFiData:	
  1006  0077                     ??_getGSMData:	
  1007                           ; 1 bytes @ 0x7
  1008                           
  1009  0077                     ??_getGPSData:	
  1010                           ; 1 bytes @ 0x7
  1011                           
  1012  0077                     ?_sendSigfox:	
  1013                           ; 1 bytes @ 0x7
  1014                           
  1015  0077                     strncmp@s1:	
  1016                           ; 1 bytes @ 0x7
  1017                           
  1018  0077                     sendSigfox@hexMessage:	
  1019                           ; 1 bytes @ 0x7
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x7
  1023  0077                     	ds	1
  1024  0078                     getGPSData@found:	
  1025                           
  1026                           ; 1 bytes @ 0x8
  1027  0078                     	ds	1
  1028  0079                     ??_sendSigfox:	
  1029  0079                     getGPSData@c:	
  1030                           ; 1 bytes @ 0x9
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x9
  1034  0079                     	ds	1
  1035  007A                     ??_waitForCommand:	
  1036                           
  1037                           ; 1 bytes @ 0xA
  1038  007A                     	ds	1
  1039                           
  1040                           	psect	cstackBANK0
  1041  0020                     __pcstackBANK0:	
  1042  0020                     waitForCommand@message:	
  1043                           
  1044                           ; 30 bytes @ 0x0
  1045  0020                     	ds	30
  1046  003E                     waitForCommand@command:	
  1047                           
  1048                           ; 32 bytes @ 0x1E
  1049  003E                     	ds	32
  1050  005E                     waitForCommand@i:	
  1051                           
  1052                           ; 2 bytes @ 0x3E
  1053  005E                     	ds	2
  1054  0060                     waitForCommand@i_439:	
  1055                           
  1056                           ; 2 bytes @ 0x40
  1057  0060                     	ds	2
  1058  0062                     waitForCommand@p:	
  1059                           
  1060                           ; 1 bytes @ 0x42
  1061  0062                     	ds	1
  1062  0063                     ??_main:	
  1063                           
  1064                           ; 1 bytes @ 0x43
  1065  0063                     	ds	2
  1066                           
  1067                           	psect	maintext
  1068  0311                     __pmaintext:	
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 88 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : B3F/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1088 ;;      Params:         0       0       0       0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       2       0       0       0       0       0       0
  1091 ;;      Totals:         0       2       0       0       0       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels required when called:    5
  1094 ;; This function calls:
  1095 ;;		_initBTSerial
  1096 ;;		_setActivePeripheral
  1097 ;;		_waitForCommand
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _main
  1105  0311                     _main:	
  1106                           
  1107                           ;main.c: 90: ANSELA = 0;
  1108                           
  1109                           ;incstack = 0
  1110                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1111  0311  017E               	movlb	62	; select bank62
  1112  0312  01B8               	clrf	56	;volatile
  1113                           
  1114                           ;main.c: 91: ANSELB = 0;
  1115  0313  01C3               	clrf	67	;volatile
  1116                           
  1117                           ;main.c: 92: ANSELC = 0;
  1118  0314  01CE               	clrf	78	;volatile
  1119                           
  1120                           ;main.c: 95: INTCONbits.GIE = 1;
  1121  0315  178B               	bsf	11,7	;volatile
  1122                           
  1123                           ;main.c: 96: INTCONbits.PEIE = 1;
  1124  0316  170B               	bsf	11,6	;volatile
  1125                           
  1126                           ;main.c: 99: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1127  0317  30CB               	movlw	203
  1128  0318  0140               	movlb	0	; select bank0
  1129  0319  00E4               	movwf	??_main+1
  1130  031A  30EC               	movlw	236
  1131  031B  00E3               	movwf	??_main
  1132  031C  3084               	movlw	132
  1133  031D                     u857:	
  1134  031D  0B89               	decfsz	9,f
  1135  031E  2B1D               	goto	u857
  1136  031F  0BE3               	decfsz	??_main,f
  1137  0320  2B1D               	goto	u857
  1138  0321  0BE4               	decfsz	??_main+1,f
  1139  0322  2B1D               	goto	u857
  1140  0323  0000               	nop
  1141                           
  1142                           ;main.c: 100: initBTSerial();
  1143  0324  3183  2392  3183   	fcall	_initBTSerial
  1144                           
  1145                           ;main.c: 101: setActivePeripheral(sigfox);
  1146  0327  3002               	movlw	2
  1147  0328  3181  2190  3183   	fcall	_setActivePeripheral
  1148  032B                     l1270:	
  1149                           ;main.c: 103: while (1) {
  1150                           
  1151                           
  1152                           ;main.c: 104: waitForCommand();
  1153  032B  3180  2031  3183   	fcall	_waitForCommand
  1154  032E  2B2B               	goto	l1270
  1155  032F                     __end_of_main:	
  1156                           ;main.c: 106: }
  1157                           ;main.c: 107: return;
  1158                           
  1159                           
  1160                           	psect	text1
  1161  0031                     __ptext1:	
  1162 ;; *************** function _waitForCommand *****************
  1163 ;; Defined at:
  1164 ;;		line 380 in file "main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  message        30    0[BANK0 ] unsigned char [30]
  1169 ;;  i               2   64[BANK0 ] int 
  1170 ;;  p               1   66[BANK0 ] PTR unsigned char 
  1171 ;;		 -> waitForCommand@command(32), 
  1172 ;;  command        32   30[BANK0 ] unsigned char [32]
  1173 ;;  i               2   62[BANK0 ] int 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1183 ;;      Params:         0       0       0       0       0       0       0       0
  1184 ;;      Locals:         0      67       0       0       0       0       0       0
  1185 ;;      Temps:          1       0       0       0       0       0       0       0
  1186 ;;      Totals:         1      67       0       0       0       0       0       0
  1187 ;;Total ram usage:       68 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    4
  1190 ;; This function calls:
  1191 ;;		_getGPSData
  1192 ;;		_getGSMData
  1193 ;;		_getWiFiData
  1194 ;;		_sendSigfox
  1195 ;;		_serialPrintBT
  1196 ;;		_serialReadBT
  1197 ;;		_startTimer
  1198 ;;		_strcmp
  1199 ;;		_strncmp
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _waitForCommand
  1207  0031                     _waitForCommand:	
  1208  0031                     l210:	
  1209                           ;main.c: 381: char command[32];
  1210                           ;main.c: 383: while (!PIR3bits.RC2IF) {
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _waitForCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1214                           
  1215  0031  014E               	movlb	14	; select bank14
  1216  0032  1F8F               	btfss	15,7	;volatile
  1217  0033  2831               	goto	l210
  1218                           
  1219                           ;main.c: 384: }
  1220                           ;main.c: 386: startTimer(2);
  1221  0034  3002               	movlw	2
  1222  0035  00F1               	movwf	startTimer@seconds
  1223  0036  3000               	movlw	0
  1224  0037  00F2               	movwf	startTimer@seconds+1
  1225  0038  3183  23BB  3180   	fcall	_startTimer
  1226                           
  1227                           ;main.c: 387: int i = 0;
  1228  003B  0140               	movlb	0	; select bank0
  1229  003C  01DE               	clrf	waitForCommand@i
  1230  003D  01DF               	clrf	waitForCommand@i+1
  1231  003E                     l1170:	
  1232                           ;main.c: 388: while (!timerDone) {
  1233                           
  1234  003E  087B               	movf	_timerDone,w
  1235  003F  1D03               	btfss	3,2
  1236  0040  2854               	goto	l1172
  1237                           
  1238                           ;main.c: 389: if (PIR3bits.RC2IF) {
  1239  0041  014E               	movlb	14	; select bank14
  1240  0042  1F8F               	btfss	15,7	;volatile
  1241  0043  283E               	goto	l1170
  1242                           
  1243                           ;main.c: 390: command[i] = serialReadBT();
  1244  0044  3184  24A1  3180   	fcall	_serialReadBT
  1245  0047  00FA               	movwf	??_waitForCommand
  1246  0048  0140               	movlb	0	; select bank0
  1247  0049  085E               	movf	waitForCommand@i,w
  1248  004A  3E3E               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1249  004B  0086               	movwf	6
  1250  004C  0187               	clrf	7
  1251  004D  087A               	movf	??_waitForCommand,w
  1252  004E  0081               	movwf	1
  1253                           
  1254                           ;main.c: 391: i++;
  1255  004F  3001               	movlw	1
  1256  0050  07DE               	addwf	waitForCommand@i,f
  1257  0051  3000               	movlw	0
  1258  0052  3DDF               	addwfc	waitForCommand@i+1,f
  1259  0053  283E               	goto	l1170
  1260  0054                     l1172:	
  1261                           
  1262                           ;main.c: 392: }
  1263                           ;main.c: 393: }
  1264                           ;main.c: 394: command[i] = '\0';
  1265  0054  0140               	movlb	0	; select bank0
  1266  0055  085E               	movf	waitForCommand@i,w
  1267  0056  3E3E               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1268  0057  0086               	movwf	6
  1269  0058  0187               	clrf	7
  1270  0059  0181               	clrf	1
  1271                           
  1272                           ;main.c: 397: if (strcmp(command, "GET_GPS\r\n") == 0) {
  1273  005A  3097               	movlw	low (STR_18| (0+32768))
  1274  005B  00F1               	movwf	strcmp@s2
  1275  005C  3084               	movlw	high (STR_18| (0+32768))
  1276  005D  00F2               	movwf	strcmp@s2+1
  1277  005E  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1278  005F  3182  22C8  3180   	fcall	_strcmp
  1279  0062  0871               	movf	?_strcmp,w
  1280  0063  0472               	iorwf	?_strcmp+1,w
  1281  0064  1D03               	btfss	3,2
  1282  0065  2870               	goto	l1178
  1283                           
  1284                           ;main.c: 398: getGPSData();
  1285  0066  3182  223D  3180   	fcall	_getGPSData
  1286                           
  1287                           ;main.c: 399: serialPrintBT("MESSAGE_END\r\n");
  1288  0069  30EA               	movlw	low (STR_19| (0+32768))
  1289  006A  00F2               	movwf	serialPrintBT@s
  1290  006B  3083               	movlw	high (STR_19| (0+32768))
  1291  006C  00F3               	movwf	serialPrintBT@s+1
  1292  006D  3183  2349         	fcall	_serialPrintBT
  1293                           
  1294                           ;main.c: 400: } else if (strcmp(command, "GET_GSM\r\n") == 0) {
  1295  006F  0008               	return
  1296  0070                     l1178:	
  1297  0070  308D               	movlw	low (STR_20| (0+32768))
  1298  0071  00F1               	movwf	strcmp@s2
  1299  0072  3084               	movlw	high (STR_20| (0+32768))
  1300  0073  00F2               	movwf	strcmp@s2+1
  1301  0074  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1302  0075  3182  22C8  3180   	fcall	_strcmp
  1303  0078  0871               	movf	?_strcmp,w
  1304  0079  0472               	iorwf	?_strcmp+1,w
  1305  007A  1D03               	btfss	3,2
  1306  007B  2886               	goto	l1182
  1307                           
  1308                           ;main.c: 401: getGSMData();
  1309  007C  3181  2119  3180   	fcall	_getGSMData
  1310                           
  1311                           ;main.c: 402: serialPrintBT("MESSAGE_END\r\n");
  1312  007F  30EA               	movlw	low (STR_19| (0+32768))
  1313  0080  00F2               	movwf	serialPrintBT@s
  1314  0081  3083               	movlw	high (STR_19| (0+32768))
  1315  0082  00F3               	movwf	serialPrintBT@s+1
  1316  0083  3183  2349         	fcall	_serialPrintBT
  1317                           
  1318                           ;main.c: 403: } else if (strcmp(command, "GET_WIFI\r\n") == 0) {
  1319  0085  0008               	return
  1320  0086                     l1182:	
  1321  0086  3059               	movlw	low (STR_22| (0+32768))
  1322  0087  00F1               	movwf	strcmp@s2
  1323  0088  3084               	movlw	high (STR_22| (0+32768))
  1324  0089  00F2               	movwf	strcmp@s2+1
  1325  008A  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1326  008B  3182  22C8  3180   	fcall	_strcmp
  1327  008E  0871               	movf	?_strcmp,w
  1328  008F  0472               	iorwf	?_strcmp+1,w
  1329  0090  1D03               	btfss	3,2
  1330  0091  289C               	goto	l1186
  1331                           
  1332                           ;main.c: 404: getWiFiData();
  1333  0092  3181  21E9  3180   	fcall	_getWiFiData
  1334                           
  1335                           ;main.c: 405: serialPrintBT("MESSAGE_END\r\n");
  1336  0095  30EA               	movlw	low (STR_19| (0+32768))
  1337  0096  00F2               	movwf	serialPrintBT@s
  1338  0097  3083               	movlw	high (STR_19| (0+32768))
  1339  0098  00F3               	movwf	serialPrintBT@s+1
  1340  0099  3183  2349         	fcall	_serialPrintBT
  1341                           
  1342                           ;main.c: 406: } else if (strcmp(command, "GET_ALL_SEND_SIGFOX\r\n") == 0) {
  1343  009B  0008               	return
  1344  009C                     l1186:	
  1345  009C  307C               	movlw	low (STR_24| (0+32768))
  1346  009D  00F1               	movwf	strcmp@s2
  1347  009E  3083               	movlw	high (STR_24| (0+32768))
  1348  009F  00F2               	movwf	strcmp@s2+1
  1349  00A0  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1350  00A1  3182  22C8  3180   	fcall	_strcmp
  1351  00A4  0871               	movf	?_strcmp,w
  1352  00A5  0472               	iorwf	?_strcmp+1,w
  1353  00A6  1D03               	btfss	3,2
  1354  00A7  28BF               	goto	l1190
  1355                           
  1356                           ;main.c: 407: sendSigfox("000000000000\r\n");
  1357  00A8  30CC               	movlw	low (STR_25| (0+32768))
  1358  00A9  00F7               	movwf	sendSigfox@hexMessage
  1359  00AA  3083               	movlw	high (STR_25| (0+32768))
  1360  00AB  00F8               	movwf	sendSigfox@hexMessage+1
  1361  00AC  3183  2363  3180   	fcall	_sendSigfox
  1362                           
  1363                           ;main.c: 408: getGPSData();
  1364  00AF  3182  223D  3180   	fcall	_getGPSData
  1365                           
  1366                           ;main.c: 409: getGSMData();
  1367  00B2  3181  2119  3180   	fcall	_getGSMData
  1368                           
  1369                           ;main.c: 410: getWiFiData();
  1370  00B5  3181  21E9  3180   	fcall	_getWiFiData
  1371                           
  1372                           ;main.c: 411: serialPrintBT("MESSAGE_END\r\n");
  1373  00B8  30EA               	movlw	low (STR_19| (0+32768))
  1374  00B9  00F2               	movwf	serialPrintBT@s
  1375  00BA  3083               	movlw	high (STR_19| (0+32768))
  1376  00BB  00F3               	movwf	serialPrintBT@s+1
  1377  00BC  3183  2349         	fcall	_serialPrintBT
  1378                           
  1379                           ;main.c: 412: } else if (strcmp(command, "GET_ALL\r\n") == 0) {
  1380  00BE  0008               	return
  1381  00BF                     l1190:	
  1382  00BF  3083               	movlw	low (STR_27| (0+32768))
  1383  00C0  00F1               	movwf	strcmp@s2
  1384  00C1  3084               	movlw	high (STR_27| (0+32768))
  1385  00C2  00F2               	movwf	strcmp@s2+1
  1386  00C3  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1387  00C4  3182  22C8  3180   	fcall	_strcmp
  1388  00C7  0871               	movf	?_strcmp,w
  1389  00C8  0472               	iorwf	?_strcmp+1,w
  1390  00C9  1D03               	btfss	3,2
  1391  00CA  28DB               	goto	l1194
  1392                           
  1393                           ;main.c: 413: getGPSData();
  1394  00CB  3182  223D  3180   	fcall	_getGPSData
  1395                           
  1396                           ;main.c: 414: getGSMData();
  1397  00CE  3181  2119  3180   	fcall	_getGSMData
  1398                           
  1399                           ;main.c: 415: getWiFiData();
  1400  00D1  3181  21E9  3180   	fcall	_getWiFiData
  1401                           
  1402                           ;main.c: 416: serialPrintBT("MESSAGE_END\r\n");
  1403  00D4  30EA               	movlw	low (STR_19| (0+32768))
  1404  00D5  00F2               	movwf	serialPrintBT@s
  1405  00D6  3083               	movlw	high (STR_19| (0+32768))
  1406  00D7  00F3               	movwf	serialPrintBT@s+1
  1407  00D8  3183  2349         	fcall	_serialPrintBT
  1408                           
  1409                           ;main.c: 417: } else if (strncmp(command, "SEND_SIGFOX:", 12) == 0) {
  1410  00DA  0008               	return
  1411  00DB                     l1194:	
  1412  00DB  3012               	movlw	low (STR_29| (0+32768))
  1413  00DC  00F1               	movwf	strncmp@s2
  1414  00DD  3084               	movlw	high (STR_29| (0+32768))
  1415  00DE  00F2               	movwf	strncmp@s2+1
  1416  00DF  300C               	movlw	12
  1417  00E0  00F3               	movwf	strncmp@len
  1418  00E1  3000               	movlw	0
  1419  00E2  00F4               	movwf	strncmp@len+1
  1420  00E3  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1421  00E4  3182  2288  3180   	fcall	_strncmp
  1422  00E7  0871               	movf	?_strncmp,w
  1423  00E8  0472               	iorwf	?_strncmp+1,w
  1424  00E9  1D03               	btfss	3,2
  1425  00EA  0008               	return
  1426                           
  1427                           ;main.c: 418: char * p;
  1428                           ;main.c: 419: p = command + 12;
  1429  00EB  304A               	movlw	(low ((waitForCommand@command| 0+12)))& (0+255)
  1430  00EC  00FA               	movwf	??_waitForCommand
  1431  00ED  087A               	movf	??_waitForCommand,w
  1432  00EE  0140               	movlb	0	; select bank0
  1433  00EF  00E2               	movwf	waitForCommand@p
  1434                           
  1435                           ;main.c: 420: char message[30];
  1436                           ;main.c: 421: int i = 0;
  1437  00F0  01E0               	clrf	waitForCommand@i_439
  1438  00F1  01E1               	clrf	waitForCommand@i_439+1
  1439  00F2                     l1206:	
  1440                           ;main.c: 423: while(*p != '\r') {
  1441                           
  1442  00F2  0862               	movf	waitForCommand@p,w
  1443  00F3  0086               	movwf	6
  1444  00F4  0187               	clrf	7
  1445  00F5  300D               	movlw	13
  1446  00F6  0601               	xorwf	1,w
  1447  00F7  1903               	btfsc	3,2
  1448  00F8  290D               	goto	l1208
  1449                           
  1450                           ;main.c: 424: message[i] = *p;
  1451  00F9  0862               	movf	waitForCommand@p,w
  1452  00FA  0086               	movwf	6
  1453  00FB  0187               	clrf	7
  1454  00FC  0801               	movf	1,w
  1455  00FD  00FA               	movwf	??_waitForCommand
  1456  00FE  0860               	movf	waitForCommand@i_439,w
  1457  00FF  3E20               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1458  0100  0086               	movwf	6
  1459  0101  0187               	clrf	7
  1460  0102  087A               	movf	??_waitForCommand,w
  1461  0103  0081               	movwf	1
  1462                           
  1463                           ;main.c: 425: p++;
  1464  0104  3001               	movlw	1
  1465  0105  00FA               	movwf	??_waitForCommand
  1466  0106  087A               	movf	??_waitForCommand,w
  1467  0107  07E2               	addwf	waitForCommand@p,f
  1468                           
  1469                           ;main.c: 426: i++;
  1470  0108  3001               	movlw	1
  1471  0109  07E0               	addwf	waitForCommand@i_439,f
  1472  010A  3000               	movlw	0
  1473  010B  3DE1               	addwfc	waitForCommand@i_439+1,f
  1474  010C  28F2               	goto	l1206
  1475  010D                     l1208:	
  1476                           
  1477                           ;main.c: 427: }
  1478                           ;main.c: 428: message[i] = '\0';
  1479  010D  0860               	movf	waitForCommand@i_439,w
  1480  010E  3E20               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1481  010F  0086               	movwf	6
  1482  0110  0187               	clrf	7
  1483  0111  0181               	clrf	1
  1484                           
  1485                           ;main.c: 430: sendSigfox(message);
  1486  0112  3020               	movlw	low waitForCommand@message
  1487  0113  00F7               	movwf	sendSigfox@hexMessage
  1488  0114  3000               	movlw	high waitForCommand@message
  1489  0115  00F8               	movwf	sendSigfox@hexMessage+1
  1490  0116  3183  2363         	fcall	_sendSigfox
  1491  0118  0008               	return
  1492  0119                     __end_of_waitForCommand:	
  1493                           
  1494                           	psect	text2
  1495  0288                     __ptext2:	
  1496 ;; *************** function _strncmp *****************
  1497 ;; Defined at:
  1498 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  s1              1    wreg     PTR const unsigned char 
  1501 ;;		 -> waitForCommand@command(32), 
  1502 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1503 ;;		 -> STR_29(13), 
  1504 ;;  len             2    3[COMMON] unsigned int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  s1              1    7[COMMON] PTR const unsigned char 
  1507 ;;		 -> waitForCommand@command(32), 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2    1[COMMON] int 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1517 ;;      Params:         4       0       0       0       0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0       0       0       0
  1519 ;;      Temps:          2       0       0       0       0       0       0       0
  1520 ;;      Totals:         7       0       0       0       0       0       0       0
  1521 ;;Total ram usage:        7 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_waitForCommand
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _strncmp
  1533  0288                     _strncmp:	
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  1537                           ;strncmp@s1 stored from wreg
  1538  0288  00F7               	movwf	strncmp@s1
  1539  0289                     l1154:	
  1540  0289  3001               	movlw	1
  1541  028A  02F3               	subwf	strncmp@len,f
  1542  028B  3000               	movlw	0
  1543  028C  3BF4               	subwfb	strncmp@len+1,f
  1544  028D  0A73               	incf	strncmp@len,w
  1545  028E  1903               	btfsc	3,2
  1546  028F  0A74               	incf	strncmp@len+1,w
  1547  0290  1903               	btfsc	3,2
  1548  0291  2AC5               	goto	l1156
  1549  0292  0877               	movf	strncmp@s1,w
  1550  0293  0086               	movwf	6
  1551  0294  0187               	clrf	7
  1552  0295  0801               	movf	1,w
  1553  0296  1903               	btfsc	3,2
  1554  0297  2AA5               	goto	l1146
  1555  0298  0871               	movf	strncmp@s2,w
  1556  0299  0084               	movwf	4
  1557  029A  0872               	movf	strncmp@s2+1,w
  1558  029B  0085               	movwf	5
  1559  029C  0800               	movf	0,w	;code access
  1560  029D  00F5               	movwf	??_strncmp
  1561  029E  0877               	movf	strncmp@s1,w
  1562  029F  0086               	movwf	6
  1563  02A0  0187               	clrf	7
  1564  02A1  0801               	movf	1,w
  1565  02A2  0675               	xorwf	??_strncmp,w
  1566  02A3  1903               	skipnz
  1567  02A4  2ABC               	goto	l1150
  1568  02A5                     l1146:	
  1569  02A5  0871               	movf	strncmp@s2,w
  1570  02A6  0084               	movwf	4
  1571  02A7  0872               	movf	strncmp@s2+1,w
  1572  02A8  0085               	movwf	5
  1573  02A9  0800               	movf	0,w	;code access
  1574  02AA  00F5               	movwf	??_strncmp
  1575  02AB  01F6               	clrf	??_strncmp+1
  1576  02AC  09F5               	comf	??_strncmp,f
  1577  02AD  09F6               	comf	??_strncmp+1,f
  1578  02AE  0AF5               	incf	??_strncmp,f
  1579  02AF  1903               	skipnz
  1580  02B0  0AF6               	incf	??_strncmp+1,f
  1581  02B1  0877               	movf	strncmp@s1,w
  1582  02B2  0086               	movwf	6
  1583  02B3  0187               	clrf	7
  1584  02B4  0801               	movf	1,w
  1585  02B5  0775               	addwf	??_strncmp,w
  1586  02B6  00F1               	movwf	?_strncmp
  1587  02B7  0876               	movf	??_strncmp+1,w
  1588  02B8  1803               	skipnc
  1589  02B9  0A76               	incf	??_strncmp+1,w
  1590  02BA  00F2               	movwf	?_strncmp+1
  1591  02BB  0008               	return
  1592  02BC                     l1150:	
  1593  02BC  3001               	movlw	1
  1594  02BD  00F5               	movwf	??_strncmp
  1595  02BE  0875               	movf	??_strncmp,w
  1596  02BF  07F7               	addwf	strncmp@s1,f
  1597  02C0  3001               	movlw	1
  1598  02C1  07F1               	addwf	strncmp@s2,f
  1599  02C2  3000               	movlw	0
  1600  02C3  3DF2               	addwfc	strncmp@s2+1,f
  1601  02C4  2A89               	goto	l1154
  1602  02C5                     l1156:	
  1603  02C5  01F1               	clrf	?_strncmp
  1604  02C6  01F2               	clrf	?_strncmp+1
  1605  02C7  0008               	return
  1606  02C8                     __end_of_strncmp:	
  1607                           
  1608                           	psect	text3
  1609  02C8                     __ptext3:	
  1610 ;; *************** function _strcmp *****************
  1611 ;; Defined at:
  1612 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  s1              1    wreg     PTR const unsigned char 
  1615 ;;		 -> waitForCommand@command(32), 
  1616 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1617 ;;		 -> STR_27(10), STR_24(22), STR_22(11), STR_20(10), 
  1618 ;;		 -> STR_18(10), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1621 ;;		 -> waitForCommand@command(32), 
  1622 ;;  r               1    4[COMMON] char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  2    1[COMMON] int 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1632 ;;      Params:         2       0       0       0       0       0       0       0
  1633 ;;      Locals:         2       0       0       0       0       0       0       0
  1634 ;;      Temps:          1       0       0       0       0       0       0       0
  1635 ;;      Totals:         5       0       0       0       0       0       0       0
  1636 ;;Total ram usage:        5 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_waitForCommand
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _strcmp
  1648  02C8                     _strcmp:	
  1649                           
  1650                           ;incstack = 0
  1651                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  1652                           ;strcmp@s1 stored from wreg
  1653  02C8  00F5               	movwf	strcmp@s1
  1654  02C9  2AD2               	goto	l1132
  1655  02CA                     l1130:	
  1656  02CA  3001               	movlw	1
  1657  02CB  00F3               	movwf	??_strcmp
  1658  02CC  0873               	movf	??_strcmp,w
  1659  02CD  07F5               	addwf	strcmp@s1,f
  1660  02CE  3001               	movlw	1
  1661  02CF  07F1               	addwf	strcmp@s2,f
  1662  02D0  3000               	movlw	0
  1663  02D1  3DF2               	addwfc	strcmp@s2+1,f
  1664  02D2                     l1132:	
  1665  02D2  0875               	movf	strcmp@s1,w
  1666  02D3  0086               	movwf	6
  1667  02D4  0187               	clrf	7
  1668  02D5  0871               	movf	strcmp@s2,w
  1669  02D6  0084               	movwf	4
  1670  02D7  0872               	movf	strcmp@s2+1,w
  1671  02D8  0085               	movwf	5
  1672  02D9  0800               	movf	0,w	;code access
  1673  02DA  3AFF               	xorlw	255
  1674  02DB  3E01               	addlw	1
  1675  02DC  0701               	addwf	1,w
  1676  02DD  00F3               	movwf	??_strcmp
  1677  02DE  0873               	movf	??_strcmp,w
  1678  02DF  00F4               	movwf	strcmp@r
  1679  02E0  0874               	movf	strcmp@r,w
  1680  02E1  1D03               	btfss	3,2
  1681  02E2  2AE9               	goto	l1136
  1682  02E3  0875               	movf	strcmp@s1,w
  1683  02E4  0086               	movwf	6
  1684  02E5  0187               	clrf	7
  1685  02E6  0801               	movf	1,w
  1686  02E7  1D03               	btfss	3,2
  1687  02E8  2ACA               	goto	l1130
  1688  02E9                     l1136:	
  1689  02E9  0874               	movf	strcmp@r,w
  1690  02EA  00F1               	movwf	?_strcmp
  1691  02EB  01F2               	clrf	?_strcmp+1
  1692  02EC  1BF1               	btfsc	?_strcmp,7
  1693  02ED  03F2               	decf	?_strcmp+1,f
  1694  02EE  0008               	return
  1695  02EF                     __end_of_strcmp:	
  1696                           
  1697                           	psect	text4
  1698  04A1                     __ptext4:	
  1699 ;; *************** function _serialReadBT *****************
  1700 ;; Defined at:
  1701 ;;		line 235 in file "main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      unsigned char 
  1708 ;; Registers used:
  1709 ;;		wreg
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1715 ;;      Params:         0       0       0       0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0
  1718 ;;      Totals:         0       0       0       0       0       0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_waitForCommand
  1726 ;;		_serialFindBT
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _serialReadBT
  1732  04A1                     _serialReadBT:	
  1733  04A1                     l144:	
  1734                           ;main.c: 236: while (!PIR3bits.RC2IF) {
  1735                           
  1736                           ;incstack = 0
  1737                           ; Regs used in _serialReadBT: [wreg]
  1738                           
  1739  04A1  014E               	movlb	14	; select bank14
  1740  04A2  1F8F               	btfss	15,7	;volatile
  1741  04A3  2CA1               	goto	l144
  1742                           
  1743                           ;main.c: 237: }
  1744                           ;main.c: 238: if (1 == RC2STAbits.OERR) {
  1745  04A4  0154               	movlb	20	; select bank20
  1746  04A5  1C9D               	btfss	29,1	;volatile
  1747  04A6  2CA9               	goto	l1052
  1748                           
  1749                           ;main.c: 239: RC2STAbits.SPEN = 0;
  1750  04A7  139D               	bcf	29,7	;volatile
  1751                           
  1752                           ;main.c: 240: RC2STAbits.SPEN = 1;
  1753  04A8  179D               	bsf	29,7	;volatile
  1754  04A9                     l1052:	
  1755                           
  1756                           ;main.c: 241: }
  1757                           ;main.c: 242: return RC2REG;
  1758  04A9  0819               	movf	25,w	;volatile
  1759  04AA  0008               	return
  1760  04AB                     __end_of_serialReadBT:	
  1761                           
  1762                           	psect	text5
  1763  0363                     __ptext5:	
  1764 ;; *************** function _sendSigfox *****************
  1765 ;; Defined at:
  1766 ;;		line 373 in file "main.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  hexMessage      2    7[COMMON] PTR unsigned char 
  1769 ;;		 -> waitForCommand@message(30), STR_25(15), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1781 ;;      Params:         2       0       0       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0
  1784 ;;      Totals:         2       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        2 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    3
  1788 ;; This function calls:
  1789 ;;		_serialPrintPeripheral
  1790 ;;		_setActivePeripheral
  1791 ;; This function is called by:
  1792 ;;		_waitForCommand
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _sendSigfox
  1798  0363                     _sendSigfox:	
  1799                           
  1800                           ;main.c: 374: setActivePeripheral(sigfox);
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _sendSigfox: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1804  0363  3002               	movlw	2
  1805  0364  3181  2190  3183   	fcall	_setActivePeripheral
  1806                           
  1807                           ;main.c: 375: serialPrintPeripheral("AT$SF=");
  1808  0367  30D6               	movlw	low (STR_16| (0+32768))
  1809  0368  00F2               	movwf	serialPrintPeripheral@s
  1810  0369  3084               	movlw	high (STR_16| (0+32768))
  1811  036A  00F3               	movwf	serialPrintPeripheral@s+1
  1812  036B  3183  232F  3183   	fcall	_serialPrintPeripheral
  1813                           
  1814                           ;main.c: 376: serialPrintPeripheral(hexMessage);
  1815  036E  0878               	movf	sendSigfox@hexMessage+1,w
  1816  036F  00F3               	movwf	serialPrintPeripheral@s+1
  1817  0370  0877               	movf	sendSigfox@hexMessage,w
  1818  0371  00F2               	movwf	serialPrintPeripheral@s
  1819  0372  3183  232F  3183   	fcall	_serialPrintPeripheral
  1820                           
  1821                           ;main.c: 377: serialPrintPeripheral("\r\n");
  1822  0375  30D8               	movlw	low ((STR_25+12)| (0+32768))
  1823  0376  00F2               	movwf	serialPrintPeripheral@s
  1824  0377  3083               	movlw	high ((STR_25+12)| (0+32768))
  1825  0378  00F3               	movwf	serialPrintPeripheral@s+1
  1826  0379  3183  232F         	fcall	_serialPrintPeripheral
  1827  037B  0008               	return
  1828  037C                     __end_of_sendSigfox:	
  1829                           
  1830                           	psect	text6
  1831  01E9                     __ptext6:	
  1832 ;; *************** function _getWiFiData *****************
  1833 ;; Defined at:
  1834 ;;		line 282 in file "main.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1848 ;;      Params:         0       0       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0
  1850 ;;      Temps:          2       0       0       0       0       0       0       0
  1851 ;;      Totals:         2       0       0       0       0       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    3
  1855 ;; This function calls:
  1856 ;;		_serialPrintBT
  1857 ;;		_serialPrintPeripheral
  1858 ;;		_serialReadPeripheral
  1859 ;;		_serialWriteBT
  1860 ;;		_setActivePeripheral
  1861 ;;		_startTimer
  1862 ;; This function is called by:
  1863 ;;		_waitForCommand
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _getWiFiData
  1869  01E9                     _getWiFiData:	
  1870                           
  1871                           ;main.c: 283: serialPrintBT("WIFI_START\r\n");
  1872                           
  1873                           ;incstack = 0
  1874                           ; Regs used in _getWiFiData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1875  01E9  3005               	movlw	low (STR_1| (0+32768))
  1876  01EA  00F2               	movwf	serialPrintBT@s
  1877  01EB  3084               	movlw	high (STR_1| (0+32768))
  1878  01EC  00F3               	movwf	serialPrintBT@s+1
  1879  01ED  3183  2349  3181   	fcall	_serialPrintBT
  1880                           
  1881                           ;main.c: 284: setActivePeripheral(wifi);
  1882  01F0  3001               	movlw	1
  1883  01F1  3181  2190  3181   	fcall	_setActivePeripheral
  1884                           
  1885                           ;main.c: 285: serialPrintPeripheral("AT+CWLAPOPT=1,12\r\n");
  1886  01F4  30A8               	movlw	low (STR_2| (0+32768))
  1887  01F5  00F2               	movwf	serialPrintPeripheral@s
  1888  01F6  3083               	movlw	high (STR_2| (0+32768))
  1889  01F7  00F3               	movwf	serialPrintPeripheral@s+1
  1890  01F8  3183  232F  3181   	fcall	_serialPrintPeripheral
  1891                           
  1892                           ;main.c: 286: _delay((unsigned long)((500)*(32000000/4000.0)));
  1893  01FB  3015               	movlw	21
  1894  01FC  00F8               	movwf	??_getWiFiData+1
  1895  01FD  304B               	movlw	75
  1896  01FE  00F7               	movwf	??_getWiFiData
  1897  01FF  30BE               	movlw	190
  1898  0200                     u867:	
  1899  0200  0B89               	decfsz	9,f
  1900  0201  2A00               	goto	u867
  1901  0202  0BF7               	decfsz	??_getWiFiData,f
  1902  0203  2A00               	goto	u867
  1903  0204  0BF8               	decfsz	??_getWiFiData+1,f
  1904  0205  2A00               	goto	u867
  1905  0206  3200               	nop2
  1906                           
  1907                           ;main.c: 287: serialPrintPeripheral("AT+CWLAP\r\n");
  1908  0207  3064               	movlw	low (STR_3| (0+32768))
  1909  0208  00F2               	movwf	serialPrintPeripheral@s
  1910  0209  3084               	movlw	high (STR_3| (0+32768))
  1911  020A  00F3               	movwf	serialPrintPeripheral@s+1
  1912  020B  3183  232F  3181   	fcall	_serialPrintPeripheral
  1913                           
  1914                           ;main.c: 288: _delay((unsigned long)((10)*(32000000/4000.0)));
  1915  020E  3068               	movlw	104
  1916  020F  00F7               	movwf	??_getWiFiData
  1917  0210  30E4               	movlw	228
  1918  0211                     u877:	
  1919  0211  0B89               	decfsz	9,f
  1920  0212  2A11               	goto	u877
  1921  0213  0BF7               	decfsz	??_getWiFiData,f
  1922  0214  2A11               	goto	u877
  1923  0215  3200               	nop2
  1924                           
  1925                           ;main.c: 290: serialReadPeripheral();
  1926  0216  3184  24AB  3181   	fcall	_serialReadPeripheral
  1927                           
  1928                           ;main.c: 292: startTimer(3);
  1929  0219  3003               	movlw	3
  1930  021A  00F1               	movwf	startTimer@seconds
  1931  021B  3000               	movlw	0
  1932  021C  00F2               	movwf	startTimer@seconds+1
  1933  021D  3183  23BB  3181   	fcall	_startTimer
  1934  0220                     l1068:	
  1935                           ;main.c: 293: while (!timerDone) {
  1936                           
  1937  0220  087B               	movf	_timerDone,w
  1938  0221  1D03               	btfss	3,2
  1939  0222  2A2D               	goto	l1070
  1940                           
  1941                           ;main.c: 294: if (PIR3bits.RC1IF) {
  1942  0223  014E               	movlb	14	; select bank14
  1943  0224  1E8F               	btfss	15,5	;volatile
  1944  0225  2A20               	goto	l1068
  1945                           
  1946                           ;main.c: 295: serialWriteBT(serialReadPeripheral());
  1947  0226  3184  24AB  3181   	fcall	_serialReadPeripheral
  1948  0229  3184  24CE  3181   	fcall	_serialWriteBT
  1949  022C  2A20               	goto	l1068
  1950  022D                     l1070:	
  1951                           
  1952                           ;main.c: 296: }
  1953                           ;main.c: 297: }
  1954                           ;main.c: 298: serialPrintBT("WIFI_END\r\n");
  1955  022D  304E               	movlw	low (STR_4| (0+32768))
  1956  022E  00F2               	movwf	serialPrintBT@s
  1957  022F  3084               	movlw	high (STR_4| (0+32768))
  1958  0230  00F3               	movwf	serialPrintBT@s+1
  1959  0231  3183  2349  3181   	fcall	_serialPrintBT
  1960                           
  1961                           ;main.c: 299: _delay((unsigned long)((10)*(32000000/4000.0)));
  1962  0234  3068               	movlw	104
  1963  0235  00F7               	movwf	??_getWiFiData
  1964  0236  30E4               	movlw	228
  1965  0237                     u887:	
  1966  0237  0B89               	decfsz	9,f
  1967  0238  2A37               	goto	u887
  1968  0239  0BF7               	decfsz	??_getWiFiData,f
  1969  023A  2A37               	goto	u887
  1970  023B  3200               	nop2
  1971  023C  0008               	return
  1972  023D                     __end_of_getWiFiData:	
  1973                           
  1974                           	psect	text7
  1975  0119                     __ptext7:	
  1976 ;; *************** function _getGSMData *****************
  1977 ;; Defined at:
  1978 ;;		line 302 in file "main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1992 ;;      Params:         0       0       0       0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0
  1994 ;;      Temps:          2       0       0       0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    3
  1999 ;; This function calls:
  2000 ;;		_serialPrintBT
  2001 ;;		_serialPrintPeripheral
  2002 ;;		_serialReadPeripheral
  2003 ;;		_serialWriteBT
  2004 ;;		_setActivePeripheral
  2005 ;;		_startTimer
  2006 ;; This function is called by:
  2007 ;;		_waitForCommand
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _getGSMData
  2013  0119                     _getGSMData:	
  2014                           
  2015                           ;main.c: 303: serialPrintBT("GSM_START\r\n");
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in _getGSMData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2019  0119  302B               	movlw	low (STR_5| (0+32768))
  2020  011A  00F2               	movwf	serialPrintBT@s
  2021  011B  3084               	movlw	high (STR_5| (0+32768))
  2022  011C  00F3               	movwf	serialPrintBT@s+1
  2023  011D  3183  2349  3181   	fcall	_serialPrintBT
  2024                           
  2025                           ;main.c: 305: setActivePeripheral(gsm);
  2026  0120  3003               	movlw	3
  2027  0121  3181  2190  3181   	fcall	_setActivePeripheral
  2028                           
  2029                           ;main.c: 306: serialPrintPeripheral("AT+CREG=2\r\n");
  2030  0124  301F               	movlw	low (STR_6| (0+32768))
  2031  0125  00F2               	movwf	serialPrintPeripheral@s
  2032  0126  3084               	movlw	high (STR_6| (0+32768))
  2033  0127  00F3               	movwf	serialPrintPeripheral@s+1
  2034  0128  3183  232F  3181   	fcall	_serialPrintPeripheral
  2035                           
  2036                           ;main.c: 307: _delay((unsigned long)((500)*(32000000/4000.0)));
  2037  012B  3015               	movlw	21
  2038  012C  00F8               	movwf	??_getGSMData+1
  2039  012D  304B               	movlw	75
  2040  012E  00F7               	movwf	??_getGSMData
  2041  012F  30BE               	movlw	190
  2042  0130                     u897:	
  2043  0130  0B89               	decfsz	9,f
  2044  0131  2930               	goto	u897
  2045  0132  0BF7               	decfsz	??_getGSMData,f
  2046  0133  2930               	goto	u897
  2047  0134  0BF8               	decfsz	??_getGSMData+1,f
  2048  0135  2930               	goto	u897
  2049  0136  3200               	nop2
  2050                           
  2051                           ;main.c: 308: serialPrintPeripheral("AT+CSQ\r\n");
  2052  0137  30B5               	movlw	low (STR_7| (0+32768))
  2053  0138  00F2               	movwf	serialPrintPeripheral@s
  2054  0139  3084               	movlw	high (STR_7| (0+32768))
  2055  013A  00F3               	movwf	serialPrintPeripheral@s+1
  2056  013B  3183  232F  3181   	fcall	_serialPrintPeripheral
  2057                           
  2058                           ;main.c: 309: _delay((unsigned long)((10)*(32000000/4000.0)));
  2059  013E  3068               	movlw	104
  2060  013F  00F7               	movwf	??_getGSMData
  2061  0140  30E4               	movlw	228
  2062  0141                     u907:	
  2063  0141  0B89               	decfsz	9,f
  2064  0142  2941               	goto	u907
  2065  0143  0BF7               	decfsz	??_getGSMData,f
  2066  0144  2941               	goto	u907
  2067  0145  3200               	nop2
  2068                           
  2069                           ;main.c: 310: serialReadPeripheral();
  2070  0146  3184  24AB  3181   	fcall	_serialReadPeripheral
  2071                           
  2072                           ;main.c: 312: startTimer(1);
  2073  0149  3001               	movlw	1
  2074  014A  00F1               	movwf	startTimer@seconds
  2075  014B  3000               	movlw	0
  2076  014C  00F2               	movwf	startTimer@seconds+1
  2077  014D  3183  23BB  3181   	fcall	_startTimer
  2078  0150                     l1086:	
  2079                           ;main.c: 313: while (!timerDone) {
  2080                           
  2081  0150  087B               	movf	_timerDone,w
  2082  0151  1D03               	btfss	3,2
  2083  0152  295D               	goto	l1088
  2084                           
  2085                           ;main.c: 314: if (PIR3bits.RC1IF) {
  2086  0153  014E               	movlb	14	; select bank14
  2087  0154  1E8F               	btfss	15,5	;volatile
  2088  0155  2950               	goto	l1086
  2089                           
  2090                           ;main.c: 315: serialWriteBT(serialReadPeripheral());
  2091  0156  3184  24AB  3181   	fcall	_serialReadPeripheral
  2092  0159  3184  24CE  3181   	fcall	_serialWriteBT
  2093  015C  2950               	goto	l1086
  2094  015D                     l1088:	
  2095                           
  2096                           ;main.c: 316: }
  2097                           ;main.c: 317: }
  2098                           ;main.c: 319: serialPrintPeripheral("AT+CREG?\r\n");
  2099  015D  3043               	movlw	low (STR_8| (0+32768))
  2100  015E  00F2               	movwf	serialPrintPeripheral@s
  2101  015F  3084               	movlw	high (STR_8| (0+32768))
  2102  0160  00F3               	movwf	serialPrintPeripheral@s+1
  2103  0161  3183  232F  3181   	fcall	_serialPrintPeripheral
  2104                           
  2105                           ;main.c: 320: _delay((unsigned long)((10)*(32000000/4000.0)));
  2106  0164  3068               	movlw	104
  2107  0165  00F7               	movwf	??_getGSMData
  2108  0166  30E4               	movlw	228
  2109  0167                     u917:	
  2110  0167  0B89               	decfsz	9,f
  2111  0168  2967               	goto	u917
  2112  0169  0BF7               	decfsz	??_getGSMData,f
  2113  016A  2967               	goto	u917
  2114  016B  3200               	nop2
  2115                           
  2116                           ;main.c: 322: startTimer(1);
  2117  016C  3001               	movlw	1
  2118  016D  00F1               	movwf	startTimer@seconds
  2119  016E  3000               	movlw	0
  2120  016F  00F2               	movwf	startTimer@seconds+1
  2121  0170  3183  23BB  3181   	fcall	_startTimer
  2122  0173                     l1096:	
  2123                           ;main.c: 323: while (!timerDone) {
  2124                           
  2125  0173  087B               	movf	_timerDone,w
  2126  0174  1D03               	btfss	3,2
  2127  0175  2980               	goto	l1098
  2128                           
  2129                           ;main.c: 324: if (PIR3bits.RC1IF) {
  2130  0176  014E               	movlb	14	; select bank14
  2131  0177  1E8F               	btfss	15,5	;volatile
  2132  0178  2973               	goto	l1096
  2133                           
  2134                           ;main.c: 325: serialWriteBT(serialReadPeripheral());
  2135  0179  3184  24AB  3181   	fcall	_serialReadPeripheral
  2136  017C  3184  24CE  3181   	fcall	_serialWriteBT
  2137  017F  2973               	goto	l1096
  2138  0180                     l1098:	
  2139                           
  2140                           ;main.c: 326: }
  2141                           ;main.c: 327: }
  2142                           ;main.c: 329: serialPrintBT("GSM_END\r\n");
  2143  0180  306F               	movlw	low (STR_9| (0+32768))
  2144  0181  00F2               	movwf	serialPrintBT@s
  2145  0182  3084               	movlw	high (STR_9| (0+32768))
  2146  0183  00F3               	movwf	serialPrintBT@s+1
  2147  0184  3183  2349  3181   	fcall	_serialPrintBT
  2148                           
  2149                           ;main.c: 330: _delay((unsigned long)((10)*(32000000/4000.0)));
  2150  0187  3068               	movlw	104
  2151  0188  00F7               	movwf	??_getGSMData
  2152  0189  30E4               	movlw	228
  2153  018A                     u927:	
  2154  018A  0B89               	decfsz	9,f
  2155  018B  298A               	goto	u927
  2156  018C  0BF7               	decfsz	??_getGSMData,f
  2157  018D  298A               	goto	u927
  2158  018E  3200               	nop2
  2159  018F  0008               	return
  2160  0190                     __end_of_getGSMData:	
  2161                           
  2162                           	psect	text8
  2163  032F                     __ptext8:	
  2164 ;; *************** function _serialPrintPeripheral *****************
  2165 ;; Defined at:
  2166 ;;		line 134 in file "main.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  s               2    2[COMMON] PTR unsigned char 
  2169 ;;		 -> waitForCommand@message(30), STR_25(15), STR_17(3), STR_16(7), 
  2170 ;;		 -> STR_14(5), STR_8(11), STR_7(9), STR_6(12), 
  2171 ;;		 -> STR_3(11), STR_2(19), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  i               2    5[COMMON] int 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2183 ;;      Params:         2       0       0       0       0       0       0       0
  2184 ;;      Locals:         2       0       0       0       0       0       0       0
  2185 ;;      Temps:          1       0       0       0       0       0       0       0
  2186 ;;      Totals:         5       0       0       0       0       0       0       0
  2187 ;;Total ram usage:        5 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    2
  2190 ;; This function calls:
  2191 ;;		_serialWritePeripheral
  2192 ;; This function is called by:
  2193 ;;		_getWiFiData
  2194 ;;		_getGSMData
  2195 ;;		_sendSigfox
  2196 ;;		_getSigfoxData
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _serialPrintPeripheral
  2202  032F                     _serialPrintPeripheral:	
  2203                           
  2204                           ;main.c: 135: int i = 0;
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _serialPrintPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2208  032F  01F5               	clrf	serialPrintPeripheral@i
  2209  0330  01F6               	clrf	serialPrintPeripheral@i+1
  2210  0331                     l1012:	
  2211                           ;main.c: 136: while (s[i] != '\0') {
  2212                           
  2213  0331  0872               	movf	serialPrintPeripheral@s,w
  2214  0332  0775               	addwf	serialPrintPeripheral@i,w
  2215  0333  0084               	movwf	4
  2216  0334  0873               	movf	serialPrintPeripheral@s+1,w
  2217  0335  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2218  0336  0085               	movwf	5
  2219  0337  0012               	moviw fsr0++
  2220  0338  1903               	btfsc	3,2
  2221  0339  0008               	return
  2222                           
  2223                           ;main.c: 137: serialWritePeripheral(s[i]);
  2224  033A  0872               	movf	serialPrintPeripheral@s,w
  2225  033B  0775               	addwf	serialPrintPeripheral@i,w
  2226  033C  0084               	movwf	4
  2227  033D  0873               	movf	serialPrintPeripheral@s+1,w
  2228  033E  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2229  033F  0085               	movwf	5
  2230  0340  0800               	movf	0,w	;code access
  2231  0341  3184  24C6  3183   	fcall	_serialWritePeripheral
  2232                           
  2233                           ;main.c: 138: i++;
  2234  0344  3001               	movlw	1
  2235  0345  07F5               	addwf	serialPrintPeripheral@i,f
  2236  0346  3000               	movlw	0
  2237  0347  3DF6               	addwfc	serialPrintPeripheral@i+1,f
  2238  0348  2B31               	goto	l1012
  2239  0349                     __end_of_serialPrintPeripheral:	
  2240                           
  2241                           	psect	text9
  2242  04C6                     __ptext9:	
  2243 ;; *************** function _serialWritePeripheral *****************
  2244 ;; Defined at:
  2245 ;;		line 128 in file "main.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  c               1    wreg     unsigned char 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  c               1    1[COMMON] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2259 ;;      Params:         0       0       0       0       0       0       0       0
  2260 ;;      Locals:         1       0       0       0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0
  2262 ;;      Totals:         1       0       0       0       0       0       0       0
  2263 ;;Total ram usage:        1 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    1
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_serialPrintPeripheral
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _serialWritePeripheral
  2275  04C6                     _serialWritePeripheral:	
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _serialWritePeripheral: [wreg]
  2279                           ;serialWritePeripheral@c stored from wreg
  2280  04C6  00F1               	movwf	serialWritePeripheral@c
  2281  04C7                     l96:	
  2282                           ;main.c: 129: while (!PIR3bits.TX1IF) {
  2283                           
  2284  04C7  014E               	movlb	14	; select bank14
  2285  04C8  1E0F               	btfss	15,4	;volatile
  2286  04C9  2CC7               	goto	l96
  2287                           
  2288                           ;main.c: 130: }
  2289                           ;main.c: 131: TX1REG = c;
  2290  04CA  0871               	movf	serialWritePeripheral@c,w
  2291  04CB  0142               	movlb	2	; select bank2
  2292  04CC  009A               	movwf	26	;volatile
  2293  04CD  0008               	return
  2294  04CE                     __end_of_serialWritePeripheral:	
  2295                           
  2296                           	psect	text10
  2297  023D                     __ptext10:	
  2298 ;; *************** function _getGPSData *****************
  2299 ;; Defined at:
  2300 ;;		line 333 in file "main.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  c               1    9[COMMON] unsigned char 
  2305 ;;  found           1    8[COMMON] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2315 ;;      Params:         0       0       0       0       0       0       0       0
  2316 ;;      Locals:         2       0       0       0       0       0       0       0
  2317 ;;      Temps:          1       0       0       0       0       0       0       0
  2318 ;;      Totals:         3       0       0       0       0       0       0       0
  2319 ;;Total ram usage:        3 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    3
  2322 ;; This function calls:
  2323 ;;		_serialFindPeripheral
  2324 ;;		_serialPrintBT
  2325 ;;		_serialReadPeripheral
  2326 ;;		_serialWriteBT
  2327 ;;		_setActivePeripheral
  2328 ;;		_startTimer
  2329 ;; This function is called by:
  2330 ;;		_waitForCommand
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _getGPSData
  2336  023D                     _getGPSData:	
  2337                           
  2338                           ;main.c: 334: setActivePeripheral(gps);
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _getGPSData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2342  023D  3000               	movlw	0
  2343  023E  3181  2190  3182   	fcall	_setActivePeripheral
  2344                           
  2345                           ;main.c: 335: serialPrintBT("GPS_START\r\n");
  2346  0241  3037               	movlw	low (STR_10| (0+32768))
  2347  0242  00F2               	movwf	serialPrintBT@s
  2348  0243  3084               	movlw	high (STR_10| (0+32768))
  2349  0244  00F3               	movwf	serialPrintBT@s+1
  2350  0245  3183  2349  3182   	fcall	_serialPrintBT
  2351                           
  2352                           ;main.c: 336: char found = 0;
  2353  0248  01F8               	clrf	getGPSData@found
  2354                           
  2355                           ;main.c: 337: startTimer(3);
  2356  0249  3003               	movlw	3
  2357  024A  00F1               	movwf	startTimer@seconds
  2358  024B  3000               	movlw	0
  2359  024C  00F2               	movwf	startTimer@seconds+1
  2360  024D  3183  23BB  3182   	fcall	_startTimer
  2361                           
  2362                           ;main.c: 338: while (!timerDone && !found) {
  2363  0250  2A73               	goto	l1118
  2364  0251                     l188:	
  2365                           
  2366                           ;main.c: 339: if (PIR3bits.RC1IF) {
  2367  0251  014E               	movlb	14	; select bank14
  2368  0252  1E8F               	btfss	15,5	;volatile
  2369  0253  2A73               	goto	l1118
  2370                           
  2371                           ;main.c: 340: if (serialFindPeripheral("$GPGGA,")) {
  2372  0254  30BE               	movlw	low (STR_11| (0+32768))
  2373  0255  00F1               	movwf	serialFindPeripheral@s
  2374  0256  3084               	movlw	high (STR_11| (0+32768))
  2375  0257  00F2               	movwf	serialFindPeripheral@s+1
  2376  0258  3182  22EF  3182   	fcall	_serialFindPeripheral
  2377  025B  3A00               	xorlw	0
  2378  025C  1903               	skipnz
  2379  025D  2A73               	goto	l1118
  2380                           
  2381                           ;main.c: 341: char c = 'c';
  2382  025E  3063               	movlw	99
  2383  025F  00F7               	movwf	??_getGPSData
  2384  0260  0877               	movf	??_getGPSData,w
  2385  0261  00F9               	movwf	getGPSData@c
  2386  0262                     l1116:	
  2387                           ;main.c: 342: while (c != '\n') {
  2388                           
  2389  0262  300A               	movlw	10
  2390  0263  0679               	xorwf	getGPSData@c,w
  2391  0264  1903               	btfsc	3,2
  2392  0265  2A71               	goto	l193
  2393                           
  2394                           ;main.c: 343: c = serialReadPeripheral();
  2395  0266  3184  24AB  3182   	fcall	_serialReadPeripheral
  2396  0269  00F7               	movwf	??_getGPSData
  2397  026A  0877               	movf	??_getGPSData,w
  2398  026B  00F9               	movwf	getGPSData@c
  2399                           
  2400                           ;main.c: 344: serialWriteBT(c);
  2401  026C  0879               	movf	getGPSData@c,w
  2402  026D  3184  24CE  3182   	fcall	_serialWriteBT
  2403  0270  2A62               	goto	l1116
  2404  0271                     l193:	
  2405                           
  2406                           ;main.c: 345: }
  2407                           ;main.c: 346: found = 1;
  2408  0271  01F8               	clrf	getGPSData@found
  2409  0272  0AF8               	incf	getGPSData@found,f
  2410  0273                     l1118:	
  2411  0273  087B               	movf	_timerDone,w
  2412  0274  1903               	btfsc	3,2
  2413  0275  0878               	movf	getGPSData@found,w
  2414  0276  1903               	btfsc	3,2
  2415  0277  2A51               	goto	l188
  2416                           
  2417                           ;main.c: 347: }
  2418                           ;main.c: 348: }
  2419                           ;main.c: 349: }
  2420                           ;main.c: 350: serialPrintBT("GPS_END\r\n");
  2421  0278  3079               	movlw	low (STR_12| (0+32768))
  2422  0279  00F2               	movwf	serialPrintBT@s
  2423  027A  3084               	movlw	high (STR_12| (0+32768))
  2424  027B  00F3               	movwf	serialPrintBT@s+1
  2425  027C  3183  2349  3182   	fcall	_serialPrintBT
  2426                           
  2427                           ;main.c: 351: _delay((unsigned long)((10)*(32000000/4000.0)));
  2428  027F  3068               	movlw	104
  2429  0280  00F7               	movwf	??_getGPSData
  2430  0281  30E4               	movlw	228
  2431  0282                     u937:	
  2432  0282  0B89               	decfsz	9,f
  2433  0283  2A82               	goto	u937
  2434  0284  0BF7               	decfsz	??_getGPSData,f
  2435  0285  2A82               	goto	u937
  2436  0286  3200               	nop2
  2437  0287  0008               	return
  2438  0288                     __end_of_getGPSData:	
  2439                           
  2440                           	psect	text11
  2441  03BB                     __ptext11:	
  2442 ;; *************** function _startTimer *****************
  2443 ;; Defined at:
  2444 ;;		line 269 in file "main.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  seconds         2    1[COMMON] int 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2458 ;;      Params:         2       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0
  2461 ;;      Totals:         2       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        2 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    1
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_getWiFiData
  2469 ;;		_getGSMData
  2470 ;;		_getGPSData
  2471 ;;		_waitForCommand
  2472 ;;		_getSigfoxData
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _startTimer
  2478  03BB                     _startTimer:	
  2479                           
  2480                           ;main.c: 272: timerDone = 0;
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _startTimer: [wreg+status,2]
  2484  03BB  01FB               	clrf	_timerDone
  2485                           
  2486                           ;main.c: 273: timerSetpoint = seconds;
  2487  03BC  0872               	movf	startTimer@seconds+1,w
  2488  03BD  0140               	movlb	0	; select bank0
  2489  03BE  00E8               	movwf	_timerSetpoint+1
  2490  03BF  0871               	movf	startTimer@seconds,w
  2491  03C0  00E7               	movwf	_timerSetpoint
  2492                           
  2493                           ;main.c: 274: timerActual = 0;
  2494  03C1  01E5               	clrf	_timerActual
  2495  03C2  01E6               	clrf	_timerActual+1
  2496                           
  2497                           ;main.c: 276: PIE0bits.TMR0IE = 1;
  2498  03C3  014E               	movlb	14	; select bank14
  2499  03C4  1696               	bsf	22,5	;volatile
  2500                           
  2501                           ;main.c: 277: T0CON0 = 0b00010000;
  2502  03C5  3010               	movlw	16
  2503  03C6  014B               	movlb	11	; select bank11
  2504  03C7  009E               	movwf	30	;volatile
  2505                           
  2506                           ;main.c: 278: T0CON1 = 0b01000111;
  2507  03C8  3047               	movlw	71
  2508  03C9  009F               	movwf	31	;volatile
  2509                           
  2510                           ;main.c: 279: T0CON0bits.T0EN = 1;
  2511  03CA  179E               	bsf	30,7	;volatile
  2512  03CB  0008               	return
  2513  03CC                     __end_of_startTimer:	
  2514                           
  2515                           	psect	text12
  2516  0190                     __ptext12:	
  2517 ;; *************** function _setActivePeripheral *****************
  2518 ;; Defined at:
  2519 ;;		line 164 in file "main.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  peri            1    wreg     enum E8210
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  peri            1    1[COMMON] enum E8210
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2533 ;;      Params:         0       0       0       0       0       0       0       0
  2534 ;;      Locals:         1       0       0       0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0
  2536 ;;      Totals:         1       0       0       0       0       0       0       0
  2537 ;;Total ram usage:        1 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    1
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;;		_getWiFiData
  2545 ;;		_getGSMData
  2546 ;;		_getGPSData
  2547 ;;		_sendSigfox
  2548 ;;		_getSigfoxData
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           
  2553                           ;psect for function _setActivePeripheral
  2554  0190                     _setActivePeripheral:	
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _setActivePeripheral: [wreg-fsr0h+status,2+status,0]
  2558                           ;setActivePeripheral@peri stored from wreg
  2559  0190  00F1               	movwf	setActivePeripheral@peri
  2560                           
  2561                           ;main.c: 173: RC6PPS = 0x00;
  2562  0191  017E               	movlb	62	; select bank62
  2563  0192  01A6               	clrf	38	;volatile
  2564                           
  2565                           ;main.c: 174: RC1PPS = 0x00;
  2566  0193  01A1               	clrf	33	;volatile
  2567                           
  2568                           ;main.c: 175: RA4PPS = 0x00;
  2569  0194  0194               	clrf	20	;volatile
  2570                           
  2571                           ;main.c: 176: RC4PPS = 0x00;
  2572  0195  01A4               	clrf	36	;volatile
  2573                           
  2574                           ;main.c: 179: switch (peri) {
  2575  0196  29D4               	goto	l1004
  2576  0197                     l970:	
  2577                           ;main.c: 180: case sigfox:
  2578                           
  2579                           
  2580                           ;main.c: 181: {
  2581                           ;main.c: 182: RC6PPS = 0x0F;
  2582  0197  300F               	movlw	15
  2583  0198  017E               	movlb	62	; select bank62
  2584  0199  00A6               	movwf	38	;volatile
  2585                           
  2586                           ;main.c: 183: SP1BRG = 207;
  2587  019A  3000               	movlw	0
  2588  019B  0142               	movlb	2	; select bank2
  2589  019C  009C               	movwf	28	;volatile
  2590  019D  30CF               	movlw	207
  2591  019E  009B               	movwf	27	;volatile
  2592                           
  2593                           ;main.c: 184: TRISC3 = 1;
  2594  019F  0140               	movlb	0	; select bank0
  2595  01A0  1594               	bsf	20,3	;volatile
  2596                           
  2597                           ;main.c: 185: RX1DTPPSbits.RX1DTPPS = 0x13;
  2598  01A1  017D               	movlb	61	; select bank61
  2599  01A2  084B               	movf	75,w	;volatile
  2600  01A3  39C0               	andlw	-64
  2601  01A4  3813               	iorlw	19
  2602  01A5  29D2               	goto	L3
  2603  01A6                     l978:	
  2604                           ;main.c: 187: }
  2605                           ;main.c: 188: case gsm:
  2606                           
  2607                           ;main.c: 186: break;
  2608                           
  2609                           
  2610                           ;main.c: 189: {
  2611                           ;main.c: 190: RC1PPS = 0x0F;
  2612  01A6  300F               	movlw	15
  2613  01A7  017E               	movlb	62	; select bank62
  2614  01A8  00A1               	movwf	33	;volatile
  2615                           
  2616                           ;main.c: 191: SP1BRG = 16;
  2617  01A9  3000               	movlw	0
  2618  01AA  0142               	movlb	2	; select bank2
  2619  01AB  009C               	movwf	28	;volatile
  2620  01AC  3010               	movlw	16
  2621  01AD  009B               	movwf	27	;volatile
  2622                           
  2623                           ;main.c: 192: TRISC0 = 1;
  2624  01AE  0140               	movlb	0	; select bank0
  2625  01AF  1414               	bsf	20,0	;volatile
  2626                           
  2627                           ;main.c: 193: RX1DTPPSbits.RX1DTPPS = 0x10;
  2628  01B0  017D               	movlb	61	; select bank61
  2629  01B1  084B               	movf	75,w	;volatile
  2630  01B2  39C0               	andlw	-64
  2631  01B3  3810               	iorlw	16
  2632  01B4  29D2               	goto	L3
  2633  01B5                     l986:	
  2634                           ;main.c: 195: }
  2635                           ;main.c: 196: case wifi:
  2636                           
  2637                           ;main.c: 194: break;
  2638                           
  2639                           
  2640                           ;main.c: 197: {
  2641                           ;main.c: 198: RA4PPS = 0x0F;
  2642  01B5  300F               	movlw	15
  2643  01B6  017E               	movlb	62	; select bank62
  2644  01B7  0094               	movwf	20	;volatile
  2645                           
  2646                           ;main.c: 199: SP1BRG = 16;
  2647  01B8  3000               	movlw	0
  2648  01B9  0142               	movlb	2	; select bank2
  2649  01BA  009C               	movwf	28	;volatile
  2650  01BB  3010               	movlw	16
  2651  01BC  009B               	movwf	27	;volatile
  2652                           
  2653                           ;main.c: 200: TRISA5 = 1;
  2654  01BD  0140               	movlb	0	; select bank0
  2655  01BE  1692               	bsf	18,5	;volatile
  2656                           
  2657                           ;main.c: 201: RX1DTPPSbits.RX1DTPPS = 0x05;
  2658  01BF  017D               	movlb	61	; select bank61
  2659  01C0  084B               	movf	75,w	;volatile
  2660  01C1  39C0               	andlw	-64
  2661  01C2  3805               	iorlw	5
  2662  01C3  29D2               	goto	L3
  2663  01C4                     l994:	
  2664                           ;main.c: 203: }
  2665                           ;main.c: 204: case gps:
  2666                           
  2667                           ;main.c: 202: break;
  2668                           
  2669                           
  2670                           ;main.c: 205: {
  2671                           ;main.c: 206: RC4PPS = 0x0F;
  2672  01C4  300F               	movlw	15
  2673  01C5  017E               	movlb	62	; select bank62
  2674  01C6  00A4               	movwf	36	;volatile
  2675                           
  2676                           ;main.c: 207: SP1BRG = 207;
  2677  01C7  3000               	movlw	0
  2678  01C8  0142               	movlb	2	; select bank2
  2679  01C9  009C               	movwf	28	;volatile
  2680  01CA  30CF               	movlw	207
  2681  01CB  009B               	movwf	27	;volatile
  2682                           
  2683                           ;main.c: 208: TRISC5 = 1;
  2684  01CC  0140               	movlb	0	; select bank0
  2685  01CD  1694               	bsf	20,5	;volatile
  2686                           
  2687                           ;main.c: 209: RX1DTPPSbits.RX1DTPPS = 0x15;
  2688  01CE  017D               	movlb	61	; select bank61
  2689  01CF  084B               	movf	75,w	;volatile
  2690  01D0  39C0               	andlw	-64
  2691  01D1  3815               	iorlw	21
  2692  01D2                     L3:	
  2693  01D2  00CB               	movwf	75	;volatile
  2694                           
  2695                           ;main.c: 211: }
  2696                           ;main.c: 212: }
  2697                           
  2698                           ;main.c: 210: break;
  2699  01D3  29E2               	goto	l125
  2700  01D4                     l1004:	
  2701  01D4  0871               	movf	setActivePeripheral@peri,w
  2702                           
  2703                           ; Switch size 1, requested type "space"
  2704                           ; Number of cases is 4, Range of values is 0 to 3
  2705                           ; switch strategies available:
  2706                           ; Name         Instructions Cycles
  2707                           ; simple_byte           13     7 (average)
  2708                           ; direct_byte           14     6 (fixed)
  2709                           ; jumptable            260     6 (fixed)
  2710                           ;	Chosen strategy is simple_byte
  2711  01D5  3A00               	xorlw	0	; case 0
  2712  01D6  1903               	skipnz
  2713  01D7  29C4               	goto	l994
  2714  01D8  3A01               	xorlw	1	; case 1
  2715  01D9  1903               	skipnz
  2716  01DA  29B5               	goto	l986
  2717  01DB  3A03               	xorlw	3	; case 2
  2718  01DC  1903               	skipnz
  2719  01DD  2997               	goto	l970
  2720  01DE  3A01               	xorlw	1	; case 3
  2721  01DF  1903               	skipnz
  2722  01E0  29A6               	goto	l978
  2723  01E1  29E2               	goto	l125
  2724  01E2                     l125:	
  2725                           
  2726                           ;main.c: 214: TX1STAbits.BRGH = 1;
  2727  01E2  0142               	movlb	2	; select bank2
  2728  01E3  151E               	bsf	30,2	;volatile
  2729                           
  2730                           ;main.c: 215: TX1STAbits.SYNC = 0;
  2731  01E4  121E               	bcf	30,4	;volatile
  2732                           
  2733                           ;main.c: 216: RC1STAbits.SPEN = 1;
  2734  01E5  179D               	bsf	29,7	;volatile
  2735                           
  2736                           ;main.c: 217: TX1STAbits.TXEN = 1;
  2737  01E6  169E               	bsf	30,5	;volatile
  2738                           
  2739                           ;main.c: 218: RC1STAbits.CREN = 1;
  2740  01E7  161D               	bsf	29,4	;volatile
  2741  01E8  0008               	return
  2742  01E9                     __end_of_setActivePeripheral:	
  2743                           
  2744                           	psect	text13
  2745  0349                     __ptext13:	
  2746 ;; *************** function _serialPrintBT *****************
  2747 ;; Defined at:
  2748 ;;		line 227 in file "main.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  s               2    2[COMMON] PTR unsigned char 
  2751 ;;		 -> STR_28(14), STR_26(14), STR_23(14), STR_21(14), 
  2752 ;;		 -> STR_19(14), STR_15(13), STR_13(15), STR_12(10), 
  2753 ;;		 -> STR_10(12), STR_9(10), STR_5(12), STR_4(11), 
  2754 ;;		 -> STR_1(13), 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  i               2    5[COMMON] int 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2766 ;;      Params:         2       0       0       0       0       0       0       0
  2767 ;;      Locals:         2       0       0       0       0       0       0       0
  2768 ;;      Temps:          1       0       0       0       0       0       0       0
  2769 ;;      Totals:         5       0       0       0       0       0       0       0
  2770 ;;Total ram usage:        5 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    2
  2773 ;; This function calls:
  2774 ;;		_serialWriteBT
  2775 ;; This function is called by:
  2776 ;;		_getWiFiData
  2777 ;;		_getGSMData
  2778 ;;		_getGPSData
  2779 ;;		_waitForCommand
  2780 ;;		_getSigfoxData
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _serialPrintBT
  2786  0349                     _serialPrintBT:	
  2787                           
  2788                           ;main.c: 228: int i = 0;
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _serialPrintBT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2792  0349  01F5               	clrf	serialPrintBT@i
  2793  034A  01F6               	clrf	serialPrintBT@i+1
  2794  034B                     l1036:	
  2795                           ;main.c: 229: while (s[i] != '\0') {
  2796                           
  2797  034B  0872               	movf	serialPrintBT@s,w
  2798  034C  0775               	addwf	serialPrintBT@i,w
  2799  034D  0084               	movwf	4
  2800  034E  0873               	movf	serialPrintBT@s+1,w
  2801  034F  3D76               	addwfc	serialPrintBT@i+1,w
  2802  0350  0085               	movwf	5
  2803  0351  0012               	moviw fsr0++
  2804  0352  1903               	btfsc	3,2
  2805  0353  0008               	return
  2806                           
  2807                           ;main.c: 230: serialWriteBT(s[i]);
  2808  0354  0872               	movf	serialPrintBT@s,w
  2809  0355  0775               	addwf	serialPrintBT@i,w
  2810  0356  0084               	movwf	4
  2811  0357  0873               	movf	serialPrintBT@s+1,w
  2812  0358  3D76               	addwfc	serialPrintBT@i+1,w
  2813  0359  0085               	movwf	5
  2814  035A  0800               	movf	0,w	;code access
  2815  035B  3184  24CE  3183   	fcall	_serialWriteBT
  2816                           
  2817                           ;main.c: 231: i++;
  2818  035E  3001               	movlw	1
  2819  035F  07F5               	addwf	serialPrintBT@i,f
  2820  0360  3000               	movlw	0
  2821  0361  3DF6               	addwfc	serialPrintBT@i+1,f
  2822  0362  2B4B               	goto	l1036
  2823  0363                     __end_of_serialPrintBT:	
  2824                           
  2825                           	psect	text14
  2826  04CE                     __ptext14:	
  2827 ;; *************** function _serialWriteBT *****************
  2828 ;; Defined at:
  2829 ;;		line 221 in file "main.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  c               1    wreg     unsigned char 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  c               1    1[COMMON] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2843 ;;      Params:         0       0       0       0       0       0       0       0
  2844 ;;      Locals:         1       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0
  2846 ;;      Totals:         1       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        1 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_serialPrintBT
  2854 ;;		_getWiFiData
  2855 ;;		_getGSMData
  2856 ;;		_getGPSData
  2857 ;;		_getSigfoxData
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function _serialWriteBT
  2863  04CE                     _serialWriteBT:	
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in _serialWriteBT: [wreg]
  2867                           ;serialWriteBT@c stored from wreg
  2868  04CE  00F1               	movwf	serialWriteBT@c
  2869  04CF                     l132:	
  2870                           ;main.c: 222: while (!PIR3bits.TX2IF) {
  2871                           
  2872  04CF  014E               	movlb	14	; select bank14
  2873  04D0  1F0F               	btfss	15,6	;volatile
  2874  04D1  2CCF               	goto	l132
  2875                           
  2876                           ;main.c: 223: }
  2877                           ;main.c: 224: TX2REG = c;
  2878  04D2  0871               	movf	serialWriteBT@c,w
  2879  04D3  0154               	movlb	20	; select bank20
  2880  04D4  009A               	movwf	26	;volatile
  2881  04D5  0008               	return
  2882  04D6                     __end_of_serialWriteBT:	
  2883                           
  2884                           	psect	text15
  2885  02EF                     __ptext15:	
  2886 ;; *************** function _serialFindPeripheral *****************
  2887 ;; Defined at:
  2888 ;;		line 152 in file "main.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  s               2    1[COMMON] PTR unsigned char 
  2891 ;;		 -> STR_11(8), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  i               2    4[COMMON] int 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      unsigned char 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2903 ;;      Params:         2       0       0       0       0       0       0       0
  2904 ;;      Locals:         2       0       0       0       0       0       0       0
  2905 ;;      Temps:          1       0       0       0       0       0       0       0
  2906 ;;      Totals:         5       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        5 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    2
  2910 ;; This function calls:
  2911 ;;		_serialReadPeripheral
  2912 ;; This function is called by:
  2913 ;;		_getGPSData
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _serialFindPeripheral
  2919  02EF                     _serialFindPeripheral:	
  2920                           
  2921                           ;main.c: 153: int i = 0;
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _serialFindPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2925  02EF  01F4               	clrf	serialFindPeripheral@i
  2926  02F0  01F5               	clrf	serialFindPeripheral@i+1
  2927  02F1                     l1024:	
  2928                           ;main.c: 154: while (s[i] != '\0') {
  2929                           
  2930  02F1  0871               	movf	serialFindPeripheral@s,w
  2931  02F2  0774               	addwf	serialFindPeripheral@i,w
  2932  02F3  0084               	movwf	4
  2933  02F4  0872               	movf	serialFindPeripheral@s+1,w
  2934  02F5  3D75               	addwfc	serialFindPeripheral@i+1,w
  2935  02F6  0085               	movwf	5
  2936  02F7  0012               	moviw fsr0++
  2937  02F8  1903               	btfsc	3,2
  2938  02F9  2B0F               	goto	l1026
  2939                           
  2940                           ;main.c: 155: if (serialReadPeripheral() == s[i]) {
  2941  02FA  0871               	movf	serialFindPeripheral@s,w
  2942  02FB  0774               	addwf	serialFindPeripheral@i,w
  2943  02FC  0084               	movwf	4
  2944  02FD  0872               	movf	serialFindPeripheral@s+1,w
  2945  02FE  3D75               	addwfc	serialFindPeripheral@i+1,w
  2946  02FF  0085               	movwf	5
  2947  0300  0800               	movf	0,w	;code access
  2948  0301  00F3               	movwf	??_serialFindPeripheral
  2949  0302  3184  24AB  3182   	fcall	_serialReadPeripheral
  2950  0305  0673               	xorwf	??_serialFindPeripheral,w
  2951  0306  1D03               	skipz
  2952  0307  2B0D               	goto	l1020
  2953                           
  2954                           ;main.c: 156: i++;
  2955  0308  3001               	movlw	1
  2956  0309  07F4               	addwf	serialFindPeripheral@i,f
  2957  030A  3000               	movlw	0
  2958  030B  3DF5               	addwfc	serialFindPeripheral@i+1,f
  2959                           
  2960                           ;main.c: 157: } else {
  2961  030C  2AF1               	goto	l1024
  2962  030D                     l1020:	
  2963                           
  2964                           ;main.c: 158: return 0;
  2965  030D  3000               	movlw	0
  2966  030E  0008               	return
  2967  030F                     l1026:	
  2968                           
  2969                           ;main.c: 159: }
  2970                           ;main.c: 160: }
  2971                           ;main.c: 161: return 1;
  2972  030F  3001               	movlw	1
  2973  0310  0008               	return
  2974  0311                     __end_of_serialFindPeripheral:	
  2975                           
  2976                           	psect	text16
  2977  04AB                     __ptext16:	
  2978 ;; *************** function _serialReadPeripheral *****************
  2979 ;; Defined at:
  2980 ;;		line 142 in file "main.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      unsigned char 
  2987 ;; Registers used:
  2988 ;;		wreg
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2994 ;;      Params:         0       0       0       0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_serialFindPeripheral
  3005 ;;		_getWiFiData
  3006 ;;		_getGSMData
  3007 ;;		_getGPSData
  3008 ;;		_getSigfoxData
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _serialReadPeripheral
  3014  04AB                     _serialReadPeripheral:	
  3015  04AB                     l108:	
  3016                           ;main.c: 143: while (!PIR3bits.RC1IF) {
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _serialReadPeripheral: [wreg]
  3020                           
  3021  04AB  014E               	movlb	14	; select bank14
  3022  04AC  1E8F               	btfss	15,5	;volatile
  3023  04AD  2CAB               	goto	l108
  3024                           
  3025                           ;main.c: 144: }
  3026                           ;main.c: 145: if (1 == RC1STAbits.OERR) {
  3027  04AE  0142               	movlb	2	; select bank2
  3028  04AF  1C9D               	btfss	29,1	;volatile
  3029  04B0  2CB3               	goto	l960
  3030                           
  3031                           ;main.c: 146: RC1STAbits.SPEN = 0;
  3032  04B1  139D               	bcf	29,7	;volatile
  3033                           
  3034                           ;main.c: 147: RC1STAbits.SPEN = 1;
  3035  04B2  179D               	bsf	29,7	;volatile
  3036  04B3                     l960:	
  3037                           
  3038                           ;main.c: 148: }
  3039                           ;main.c: 149: return RC1REG;
  3040  04B3  0819               	movf	25,w	;volatile
  3041  04B4  0008               	return
  3042  04B5                     __end_of_serialReadPeripheral:	
  3043                           
  3044                           	psect	text17
  3045  0392                     __ptext17:	
  3046 ;; *************** function _initBTSerial *****************
  3047 ;; Defined at:
  3048 ;;		line 110 in file "main.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3062 ;;      Params:         0       0       0       0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           
  3077                           ;psect for function _initBTSerial
  3078  0392                     _initBTSerial:	
  3079                           
  3080                           ;main.c: 115: RB6PPS = 0x11;
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in _initBTSerial: [wreg+status,2+status,0]
  3084  0392  3011               	movlw	17
  3085  0393  017E               	movlb	62	; select bank62
  3086  0394  009E               	movwf	30	;volatile
  3087                           
  3088                           ;main.c: 116: TX2STAbits.BRGH = 1;
  3089  0395  0154               	movlb	20	; select bank20
  3090  0396  151E               	bsf	30,2	;volatile
  3091                           
  3092                           ;main.c: 117: SP2BRG = 16;
  3093  0397  3000               	movlw	0
  3094  0398  009C               	movwf	28	;volatile
  3095  0399  3010               	movlw	16
  3096  039A  009B               	movwf	27	;volatile
  3097                           
  3098                           ;main.c: 118: TX2STAbits.SYNC = 0;
  3099  039B  121E               	bcf	30,4	;volatile
  3100                           
  3101                           ;main.c: 119: RC2STAbits.SPEN = 1;
  3102  039C  179D               	bsf	29,7	;volatile
  3103                           
  3104                           ;main.c: 120: TX2STAbits.TXEN = 1;
  3105  039D  169E               	bsf	30,5	;volatile
  3106                           
  3107                           ;main.c: 123: TRISB5 = 1;
  3108  039E  0140               	movlb	0	; select bank0
  3109  039F  1693               	bsf	19,5	;volatile
  3110                           
  3111                           ;main.c: 124: RX2DTPPSbits.RX2DTPPS = 0x0D;
  3112  03A0  017D               	movlb	61	; select bank61
  3113  03A1  084D               	movf	77,w	;volatile
  3114  03A2  39C0               	andlw	-64
  3115  03A3  380D               	iorlw	13
  3116  03A4  00CD               	movwf	77	;volatile
  3117                           
  3118                           ;main.c: 125: RC2STAbits.CREN = 1;
  3119  03A5  0154               	movlb	20	; select bank20
  3120  03A6  161D               	bsf	29,4	;volatile
  3121  03A7  0008               	return
  3122  03A8                     __end_of_initBTSerial:	
  3123                           
  3124                           	psect	intentry
  3125  0004                     __pintentry:	
  3126 ;; *************** function _timerCount *****************
  3127 ;; Defined at:
  3128 ;;		line 257 in file "main.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3142 ;;      Params:         0       0       0       0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0       0
  3144 ;;      Temps:          1       0       0       0       0       0       0       0
  3145 ;;      Totals:         1       0       0       0       0       0       0       0
  3146 ;;Total ram usage:        1 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		Interrupt level 1
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155  0004                     _timerCount:	
  3156                           
  3157                           ;incstack = 0
  3158  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3159                           
  3160                           ; Regs used in _timerCount: [wreg]
  3161  0005  3180               	pagesel	$
  3162  0006  0140               	movlb	0	; select bank0
  3163  0007  087F               	movf	127,w
  3164  0008  00F0               	movwf	??_timerCount
  3165                           
  3166                           ;main.c: 259: if (PIR0bits.TMR0IF) {
  3167  0009  014E               	movlb	14	; select bank14
  3168  000A  1E8C               	btfss	12,5	;volatile
  3169  000B  2813               	goto	i1l161
  3170                           
  3171                           ;main.c: 260: timerActual++;
  3172  000C  3001               	movlw	1
  3173  000D  0140               	movlb	0	; select bank0
  3174  000E  07E5               	addwf	_timerActual,f
  3175  000F  3000               	movlw	0
  3176  0010  3DE6               	addwfc	_timerActual+1,f
  3177                           
  3178                           ;main.c: 261: PIR0bits.TMR0IF = 0;
  3179  0011  014E               	movlb	14	; select bank14
  3180  0012  128C               	bcf	12,5	;volatile
  3181  0013                     i1l161:	
  3182                           
  3183                           ;main.c: 262: }
  3184                           ;main.c: 263: if (timerActual == timerSetpoint) {
  3185  0013  0140               	movlb	0	; select bank0
  3186  0014  0868               	movf	_timerSetpoint+1,w
  3187  0015  0666               	xorwf	_timerActual+1,w
  3188  0016  1D03               	skipz
  3189  0017  281A               	goto	u82_25
  3190  0018  0867               	movf	_timerSetpoint,w
  3191  0019  0665               	xorwf	_timerActual,w
  3192  001A                     u82_25:	
  3193  001A  1D03               	skipz
  3194  001B  2820               	goto	i1l163
  3195                           
  3196                           ;main.c: 264: timerDone = 1;
  3197  001C  01FB               	clrf	_timerDone
  3198  001D  0AFB               	incf	_timerDone,f
  3199                           
  3200                           ;main.c: 265: T0CON0bits.T0EN = 0;
  3201  001E  014B               	movlb	11	; select bank11
  3202  001F  139E               	bcf	30,7	;volatile
  3203  0020                     i1l163:	
  3204  0020  0870               	movf	??_timerCount,w
  3205  0021  0140               	movlb	0	; select bank0
  3206  0022  00FF               	movwf	127
  3207  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3208  0024  0009               	retfie
  3209  0025                     __end_of_timerCount:	
  3210  007E                     btemp	set	126	;btemp
  3211  007E                     int$flags	set	126
  3212  007E                     wtemp0	set	126


Data Sizes:
    Strings     283
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     69      73
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_29(CODE[13]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_27(CODE[10]), STR_24(CODE[22]), STR_22(CODE[11]), STR_20(CODE[10]), 
		 -> STR_18(CODE[10]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    waitForCommand@p	PTR unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    sendSigfox@hexMessage	PTR unsigned char  size(2) Largest target is 30
		 -> waitForCommand@message(BANK0[30]), STR_25(CODE[15]), 

    serialPrintBT@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_28(CODE[14]), STR_26(CODE[14]), STR_23(CODE[14]), STR_21(CODE[14]), 
		 -> STR_19(CODE[14]), STR_15(CODE[13]), STR_13(CODE[15]), STR_12(CODE[10]), 
		 -> STR_10(CODE[12]), STR_9(CODE[10]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_1(CODE[13]), 

    serialFindPeripheral@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[8]), 

    serialPrintPeripheral@s	PTR unsigned char  size(2) Largest target is 30
		 -> waitForCommand@message(BANK0[30]), STR_25(CODE[15]), STR_17(CODE[3]), STR_16(CODE[7]), 
		 -> STR_14(CODE[5]), STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[12]), 
		 -> STR_3(CODE[11]), STR_2(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_waitForCommand
    _waitForCommand->_getGPSData
    _sendSigfox->_serialPrintPeripheral
    _getWiFiData->_serialPrintBT
    _getWiFiData->_serialPrintPeripheral
    _getGSMData->_serialPrintBT
    _getGSMData->_serialPrintPeripheral
    _serialPrintPeripheral->_serialWritePeripheral
    _getGPSData->_serialPrintBT
    _serialPrintBT->_serialWriteBT

Critical Paths under _timerCount in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_waitForCommand

Critical Paths under _timerCount in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timerCount in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timerCount in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timerCount in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timerCount in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timerCount in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timerCount in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8025
                                             67 BANK0      2     2      0
                       _initBTSerial
                _setActivePeripheral
                     _waitForCommand
 ---------------------------------------------------------------------------------
 (1) _waitForCommand                                      68    68      0    8003
                                             10 COMMON     1     1      0
                                              0 BANK0     67    67      0
                         _getGPSData
                         _getGSMData
                        _getWiFiData
                         _sendSigfox
                      _serialPrintBT
                       _serialReadBT
                         _startTimer
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     267
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     491
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _serialReadBT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sendSigfox                                           2     0      2     739
                                              7 COMMON     2     0      2
              _serialPrintPeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _getWiFiData                                          2     2      0    1774
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _getGSMData                                           2     2      0    1774
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (3) _serialPrintPeripheral                                5     3      2     589
                                              2 COMMON     5     3      2
              _serialWritePeripheral
 ---------------------------------------------------------------------------------
 (4) _serialWritePeripheral                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getGPSData                                           3     3      0    1398
                                              7 COMMON     3     3      0
               _serialFindPeripheral
                      _serialPrintBT
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           2     0      2     340
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _setActivePeripheral                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialPrintBT                                        5     3      2     801
                                              2 COMMON     5     3      2
                      _serialWriteBT
 ---------------------------------------------------------------------------------
 (3) _serialWriteBT                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serialFindPeripheral                                 5     3      2     143
                                              1 COMMON     5     3      2
               _serialReadPeripheral
 ---------------------------------------------------------------------------------
 (3) _serialReadPeripheral                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBTSerial                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timerCount                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initBTSerial
   _setActivePeripheral
   _waitForCommand
     _getGPSData
       _serialFindPeripheral
         _serialReadPeripheral
       _serialPrintBT
         _serialWriteBT
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getGSMData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getWiFiData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _sendSigfox
       _serialPrintPeripheral
         _serialWritePeripheral
       _setActivePeripheral
     _serialPrintBT
       _serialWriteBT
     _serialReadBT
     _startTimer
     _strcmp
     _strncmp

 _timerCount (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      55       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     45      49       6       91.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      55      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Apr 18 16:21:48 2018

                   __CFG_CP$OFF 0000                              l96 04C7                     __CFG_LVP$ON 0000  
                           l210 0031                             l108 04AB                             l132 04CF  
                           l125 01E2                             l144 04A1                             l193 0271  
                           l188 0251                             l960 04B3                             l970 0197  
                           l994 01C4                             l986 01B5                             l978 01A6  
                           u907 0141                             u917 0167                             u927 018A  
                           u937 0282                             u857 031D                             u867 0200  
                           u877 0211                             u887 0237                             u897 0130  
         serialFindPeripheral@i 0074           serialFindPeripheral@s 0071            sendSigfox@hexMessage 0077  
                  __CFG_BORV$LO 0000                             wreg 0009                   __CFG_BBEN$OFF 0000  
                  __CFG_ZCD$OFF 0000                            l1020 030D                            l1004 01D4  
                          l1012 0331                            l1024 02F1                            l1026 030F  
                          l1130 02CA                            l1036 034B                            l1116 0262  
                          l1052 04A9                            l1132 02D2                            l1118 0273  
                          l1070 022D                            l1150 02BC                            l1206 00F2  
                          l1136 02E9                            l1208 010D                            l1146 02A5  
                          l1154 0289                            l1170 003E                            l1068 0220  
                          l1156 02C5                            l1172 0054                            l1086 0150  
                          l1190 00BF                            l1182 0086                            l1270 032B  
                          l1096 0173                            l1088 015D                            l1098 0180  
                          l1194 00DB                            l1186 009C                            l1178 0070  
                          STR_1 0405                            STR_2 03A8                            STR_3 0464  
                          STR_4 044E                            STR_5 042B                            STR_6 041F  
                          STR_7 04B5                            STR_8 0443                            STR_9 046F  
                 __CFG_FCMEN$ON 0000    __end_of_serialFindPeripheral 0311                            _main 0311  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          btemp 007E                   __CFG_BOREN$ON 0000                            start 0025  
                 __CFG_CSWEN$ON 0000                   __CFG_MCLRE$ON 0000                           ?_main 0070  
                         STR_10 0437                           STR_11 04BE                           STR_20 048D  
                         STR_12 0479                           STR_21 03EA                           STR_13 03DB  
                         STR_14 04DD                           STR_22 0459                           STR_23 03EA  
                         STR_15 03F8                           STR_16 04D6                           STR_24 037C  
                         STR_17 03D8                           STR_25 03CC                   __CFG_WDTE$OFF 0000  
                         STR_26 03EA                           STR_18 0497                           STR_27 0483  
                         STR_19 03EA                           STR_28 03EA                           STR_29 0412  
                 ?_initBTSerial 0070                           i1l161 0013                           i1l163 0020  
                         u82_25 001A    __size_of_setActivePeripheral 0059                   __CFG_WRTB$OFF 0000  
                 __CFG_WRTC$OFF 0000                           status 0003                           wtemp0 007E  
               __end_of_strncmp 02C8                 __initialization 0027            _serialReadPeripheral 04AB  
                  __end_of_main 032F                  __CFG_SAFEN$OFF 0000         ??_serialPrintPeripheral 0074  
                ??_initBTSerial 0071                          ??_main 0063            __size_of_getWiFiData 0054  
                        _ANSELA 1F38                          _ANSELB 1F43                          _ANSELC 1F4E  
                        _T0CON0 059E                          _T0CON1 059F                          _RC1REG 0119  
                        _RC2REG 0A19                          _RA4PPS 1F14                          _RC1PPS 1F21  
                        _RB6PPS 1F1E                          _RC4PPS 1F24                          _RC6PPS 1F26  
                __CFG_WDTCCS$SC 0000                          _SP1BRG 011B                          _SP2BRG 0A1B  
       setActivePeripheral@peri 0071                          _TX1REG 011A                          _TX2REG 0A1A  
                        _TRISC0 00A0                          _TRISA5 0095                          _TRISB5 009D  
                        _TRISC3 00A3                          _TRISC5 00A5                  __CFG_PWRTE$OFF 0000  
           waitForCommand@i_439 0060           ?_serialReadPeripheral 0070                 getGPSData@found 0078  
                __CFG_STVREN$ON 0000                          _strcmp 02C8            _serialFindPeripheral 02EF  
       __size_of_waitForCommand 00E8                       ??_strncmp 0075         __end_of__initialization 002D  
         __end_of_serialPrintBT 0363  __size_of_serialWritePeripheral 0008           __end_of_serialWriteBT 04D6  
 __end_of_serialWritePeripheral 04CE                  __pcstackCOMMON 0070           ?_serialFindPeripheral 0071  
                    __pbssBANK0 0065                      _getGSMData 0119                      _getGPSData 023D  
          __end_of_initBTSerial 03A8          ??_serialReadPeripheral 0071             _setActivePeripheral 0190  
        serialPrintPeripheral@i 0075          serialPrintPeripheral@s 0072                      __pmaintext 0311  
               __CFG_PPS1WAY$ON 0000                      __pintentry 0004             __CFG_RSTOSC$HFINT32 0000  
                       ?_strcmp 0071            ?_setActivePeripheral 0070                   ?_serialReadBT 0070  
        ??_serialFindPeripheral 0073                         __ptext1 0031                         __ptext2 0288  
                       __ptext3 02C8                         __ptext4 04A1                         __ptext5 0363  
                       __ptext6 01E9                         __ptext7 0119                         __ptext8 032F  
                       __ptext9 04C6  __size_of_serialPrintPeripheral 001A   __end_of_serialPrintPeripheral 0349  
                _waitForCommand 0031                 __CFG_WRTAPP$OFF 0000                 __size_of_strcmp 0027  
         ??_setActivePeripheral 0071                 __CFG_WRTSAF$OFF 0000                         _strncmp 0288  
          end_of_initialization 002D                      _sendSigfox 0363                     ?_getGPSData 0070  
                   ?_getGSMData 0070                  ??_serialReadBT 0071                  serialPrintBT@i 0075  
                serialPrintBT@s 0072                      _timerCount 0004          __end_of_waitForCommand 0119  
                       strcmp@r 0074           __CFG_WDTCPS$WDTCPS_31 0000                  serialWriteBT@c 0071  
                 ??_getWiFiData 0077           __size_of_initBTSerial 0016                __CFG_FEXTOSC$OFF 0000  
                    _startTimer 03BB                 ?_waitForCommand 0070             __size_of_getGPSData 004B  
           __size_of_getGSMData 0077                    _initBTSerial 0392                  __end_of_strcmp 02EF  
           start_initialization 0027             __end_of_getWiFiData 023D                     ?_sendSigfox 0077  
              __CFG_LPBOREN$OFF 0000           _serialWritePeripheral 04C6                     ?_timerCount 0070  
                      ??_strcmp 0073            __end_of_serialReadBT 04AB                     __pbssCOMMON 007B  
        __size_of_serialPrintBT 001A                       ___latbits 0001                   __pcstackBANK0 0020  
        __size_of_serialWriteBT 0008                     ?_startTimer 0071   __size_of_serialReadPeripheral 000A  
           __size_of_sendSigfox 0019                     _getWiFiData 01E9                        ?_strncmp 0071  
        serialWritePeripheral@c 0071                    ??_getGPSData 0077                    ??_getGSMData 0077  
           __size_of_timerCount 0021                        _PIE0bits 0716                   _serialPrintBT 0349  
                      _PIR0bits 070C                        _PIR3bits 070F                   _serialWriteBT 04CE  
        ?_serialWritePeripheral 0070               __CFG_BBSIZE$BB512 0000                       _timerDone 007B  
   __end_of_setActivePeripheral 01E9             __size_of_startTimer 0011                    _RX1DTPPSbits 1ECB  
 __size_of_serialFindPeripheral 0022              __end_of_getGPSData 0288              __end_of_getGSMData 0190  
             startTimer@seconds 0071                 waitForCommand@i 005E                 waitForCommand@p 0062  
         _serialPrintPeripheral 032F                    _RX2DTPPSbits 1ECD                  ?_serialPrintBT 0072  
                ?_serialWriteBT 0070                ??_waitForCommand 007A           __size_of_serialReadBT 000A  
         waitForCommand@command 003E                     getGPSData@c 0079           waitForCommand@message 0020  
                    _T0CON0bits 059E                        __ptext10 023D                        __ptext11 03BB  
                      __ptext12 0190                        __ptext13 0349                        __ptext14 04CE  
                      __ptext15 02EF                        __ptext16 04AB                        __ptext17 0392  
                  ??_sendSigfox 0079                __size_of_strncmp 0040                   __size_of_main 001E  
                    strncmp@len 0073                   _timerSetpoint 0067                    _serialReadBT 04A1  
          __CFG_WDTCWS$WDTCWS_7 0000                      _RC1STAbits 011D                      _RC2STAbits 0A1D  
                      int$flags 007E                    ??_timerCount 0070              __end_of_sendSigfox 037C  
        ?_serialPrintPeripheral 0072                      _INTCONbits 000B                  __pstringtext10 042B  
                __pstringtext11 0437                  __pstringtext20 0497                  __pstringtext12 0443  
                __pstringtext21 04B5                  __pstringtext13 044E                  __pstringtext22 04BE  
                __pstringtext14 0459                  __pstringtext23 04D6                  __pstringtext15 0464  
                __pstringtext24 04DD                  __pstringtext16 046F                  __pstringtext25 0000  
                __pstringtext17 0479                  __pstringtext18 0483                  __pstringtext19 048D  
                  ??_startTimer 0073                        intlevel1 0000                 ??_serialPrintBT 0074  
            __end_of_timerCount 0025               __CFG_CLKOUTEN$OFF 0000                 ??_serialWriteBT 0071  
                     strncmp@s1 0077                       strncmp@s2 0071              __end_of_startTimer 03CC  
                 __pstringtext1 037C                   __pstringtext2 03A8                   __pstringtext3 03CC  
                 __pstringtext4 03DB                   __pstringtext5 03EA                   __pstringtext6 03F8  
                 __pstringtext7 0405                   __pstringtext8 0412                   __pstringtext9 041F  
                  ?_getWiFiData 0070                     _timerActual 0065                        strcmp@s1 0075  
                      strcmp@s2 0071    __end_of_serialReadPeripheral 04B5                      _TX1STAbits 011E  
                    _TX2STAbits 0A1E         ??_serialWritePeripheral 0071  
