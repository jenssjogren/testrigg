

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Apr 10 15:37:22 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F15344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	stringtext15,global,class=STRCODE,delta=2
    19                           	psect	stringtext16,global,class=STRCODE,delta=2
    20                           	psect	stringtext17,global,class=STRCODE,delta=2
    21                           	psect	stringtext18,global,class=STRCODE,delta=2
    22                           	psect	stringtext19,global,class=STRCODE,delta=2
    23                           	psect	stringtext20,global,class=STRCODE,delta=2
    24                           	psect	stringtext21,global,class=STRCODE,delta=2
    25                           	psect	stringtext22,global,class=STRCODE,delta=2
    26                           	psect	stringtext23,global,class=STRCODE,delta=2
    27                           	psect	cinit,global,class=CODE,merge=1,delta=2
    28                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    29                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.44
    54                           ; Generated 14/09/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F15344 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0119                     	;# 
   115  0119                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011A                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011B                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011C                     	;# 
   126  011C                     	;# 
   127  011C                     	;# 
   128  011D                     	;# 
   129  011D                     	;# 
   130  011D                     	;# 
   131  011E                     	;# 
   132  011E                     	;# 
   133  011E                     	;# 
   134  011F                     	;# 
   135  011F                     	;# 
   136  011F                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  018F                     	;# 
   143  0190                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  020C                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  020E                     	;# 
   150  020F                     	;# 
   151  020F                     	;# 
   152  0210                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  028C                     	;# 
   157  028C                     	;# 
   158  028D                     	;# 
   159  028D                     	;# 
   160  028E                     	;# 
   161  028F                     	;# 
   162  0290                     	;# 
   163  0291                     	;# 
   164  030C                     	;# 
   165  030C                     	;# 
   166  030D                     	;# 
   167  030E                     	;# 
   168  030F                     	;# 
   169  0310                     	;# 
   170  0310                     	;# 
   171  0311                     	;# 
   172  0312                     	;# 
   173  0313                     	;# 
   174  0314                     	;# 
   175  0315                     	;# 
   176  0316                     	;# 
   177  0318                     	;# 
   178  0319                     	;# 
   179  031A                     	;# 
   180  031C                     	;# 
   181  031D                     	;# 
   182  031E                     	;# 
   183  038C                     	;# 
   184  038D                     	;# 
   185  038E                     	;# 
   186  058C                     	;# 
   187  058C                     	;# 
   188  058D                     	;# 
   189  058E                     	;# 
   190  058F                     	;# 
   191  058F                     	;# 
   192  0590                     	;# 
   193  0591                     	;# 
   194  0592                     	;# 
   195  0593                     	;# 
   196  059C                     	;# 
   197  059C                     	;# 
   198  059D                     	;# 
   199  059D                     	;# 
   200  059E                     	;# 
   201  059F                     	;# 
   202  060C                     	;# 
   203  060D                     	;# 
   204  060E                     	;# 
   205  060F                     	;# 
   206  0610                     	;# 
   207  0611                     	;# 
   208  0612                     	;# 
   209  0613                     	;# 
   210  0614                     	;# 
   211  070C                     	;# 
   212  070D                     	;# 
   213  070E                     	;# 
   214  070F                     	;# 
   215  0710                     	;# 
   216  0711                     	;# 
   217  0712                     	;# 
   218  0713                     	;# 
   219  0716                     	;# 
   220  0717                     	;# 
   221  0718                     	;# 
   222  0719                     	;# 
   223  071A                     	;# 
   224  071B                     	;# 
   225  071C                     	;# 
   226  071D                     	;# 
   227  0796                     	;# 
   228  0797                     	;# 
   229  0798                     	;# 
   230  0799                     	;# 
   231  079A                     	;# 
   232  079B                     	;# 
   233  080C                     	;# 
   234  080D                     	;# 
   235  080E                     	;# 
   236  080F                     	;# 
   237  0810                     	;# 
   238  0811                     	;# 
   239  0812                     	;# 
   240  0813                     	;# 
   241  0814                     	;# 
   242  081A                     	;# 
   243  081A                     	;# 
   244  081B                     	;# 
   245  081C                     	;# 
   246  081C                     	;# 
   247  081D                     	;# 
   248  081E                     	;# 
   249  081F                     	;# 
   250  088C                     	;# 
   251  088D                     	;# 
   252  088E                     	;# 
   253  088F                     	;# 
   254  0890                     	;# 
   255  0891                     	;# 
   256  0892                     	;# 
   257  0893                     	;# 
   258  0895                     	;# 
   259  0896                     	;# 
   260  090C                     	;# 
   261  090E                     	;# 
   262  090F                     	;# 
   263  091F                     	;# 
   264  098F                     	;# 
   265  098F                     	;# 
   266  0990                     	;# 
   267  0991                     	;# 
   268  0992                     	;# 
   269  0993                     	;# 
   270  0994                     	;# 
   271  0995                     	;# 
   272  0996                     	;# 
   273  0997                     	;# 
   274  0A19                     	;# 
   275  0A19                     	;# 
   276  0A1A                     	;# 
   277  0A1A                     	;# 
   278  0A1B                     	;# 
   279  0A1B                     	;# 
   280  0A1B                     	;# 
   281  0A1C                     	;# 
   282  0A1C                     	;# 
   283  0A1D                     	;# 
   284  0A1D                     	;# 
   285  0A1E                     	;# 
   286  0A1E                     	;# 
   287  0A1F                     	;# 
   288  0A1F                     	;# 
   289  0A1F                     	;# 
   290  1E0F                     	;# 
   291  1E10                     	;# 
   292  1E11                     	;# 
   293  1E12                     	;# 
   294  1E13                     	;# 
   295  1E14                     	;# 
   296  1E15                     	;# 
   297  1E16                     	;# 
   298  1E17                     	;# 
   299  1E18                     	;# 
   300  1E19                     	;# 
   301  1E1A                     	;# 
   302  1E1B                     	;# 
   303  1E1C                     	;# 
   304  1E1D                     	;# 
   305  1E1E                     	;# 
   306  1E1F                     	;# 
   307  1E20                     	;# 
   308  1E21                     	;# 
   309  1E22                     	;# 
   310  1E23                     	;# 
   311  1E24                     	;# 
   312  1E25                     	;# 
   313  1E26                     	;# 
   314  1E27                     	;# 
   315  1E28                     	;# 
   316  1E29                     	;# 
   317  1E2A                     	;# 
   318  1E2B                     	;# 
   319  1E2C                     	;# 
   320  1E2D                     	;# 
   321  1E2E                     	;# 
   322  1E2F                     	;# 
   323  1E30                     	;# 
   324  1E31                     	;# 
   325  1E32                     	;# 
   326  1E33                     	;# 
   327  1E34                     	;# 
   328  1E35                     	;# 
   329  1E36                     	;# 
   330  1E37                     	;# 
   331  1E8F                     	;# 
   332  1E90                     	;# 
   333  1E91                     	;# 
   334  1E92                     	;# 
   335  1E93                     	;# 
   336  1E9C                     	;# 
   337  1EA1                     	;# 
   338  1EA2                     	;# 
   339  1EB1                     	;# 
   340  1EBB                     	;# 
   341  1EBC                     	;# 
   342  1EBD                     	;# 
   343  1EBE                     	;# 
   344  1EC3                     	;# 
   345  1EC5                     	;# 
   346  1EC6                     	;# 
   347  1EC7                     	;# 
   348  1ECB                     	;# 
   349  1ECC                     	;# 
   350  1ECD                     	;# 
   351  1ECE                     	;# 
   352  1F10                     	;# 
   353  1F11                     	;# 
   354  1F12                     	;# 
   355  1F13                     	;# 
   356  1F14                     	;# 
   357  1F15                     	;# 
   358  1F1C                     	;# 
   359  1F1D                     	;# 
   360  1F1E                     	;# 
   361  1F1F                     	;# 
   362  1F20                     	;# 
   363  1F21                     	;# 
   364  1F22                     	;# 
   365  1F23                     	;# 
   366  1F24                     	;# 
   367  1F25                     	;# 
   368  1F26                     	;# 
   369  1F27                     	;# 
   370  1F38                     	;# 
   371  1F39                     	;# 
   372  1F3A                     	;# 
   373  1F3B                     	;# 
   374  1F3C                     	;# 
   375  1F3D                     	;# 
   376  1F3E                     	;# 
   377  1F3F                     	;# 
   378  1F43                     	;# 
   379  1F44                     	;# 
   380  1F45                     	;# 
   381  1F46                     	;# 
   382  1F47                     	;# 
   383  1F48                     	;# 
   384  1F49                     	;# 
   385  1F4A                     	;# 
   386  1F4E                     	;# 
   387  1F4F                     	;# 
   388  1F50                     	;# 
   389  1F51                     	;# 
   390  1F52                     	;# 
   391  1F53                     	;# 
   392  1F54                     	;# 
   393  1F55                     	;# 
   394  1FE4                     	;# 
   395  1FE5                     	;# 
   396  1FE6                     	;# 
   397  1FE7                     	;# 
   398  1FE8                     	;# 
   399  1FE8                     	;# 
   400  1FE9                     	;# 
   401  1FEA                     	;# 
   402  1FEA                     	;# 
   403  1FEB                     	;# 
   404  1FED                     	;# 
   405  1FEE                     	;# 
   406  1FEF                     	;# 
   407  000B                     _INTCONbits	set	11
   408  00A5                     _TRISC5	set	165
   409  0095                     _TRISA5	set	149
   410  00A0                     _TRISC0	set	160
   411  00A3                     _TRISC3	set	163
   412  009D                     _TRISB5	set	157
   413  011B                     _SP1BRG	set	283
   414  011E                     _TX1STAbits	set	286
   415  0119                     _RC1REG	set	281
   416  011D                     _RC1STAbits	set	285
   417  011A                     _TX1REG	set	282
   418  059F                     _T0CON1	set	1439
   419  059E                     _T0CON0	set	1438
   420  059E                     _T0CON0bits	set	1438
   421  0716                     _PIE0bits	set	1814
   422  070C                     _PIR0bits	set	1804
   423  070F                     _PIR3bits	set	1807
   424  0A1B                     _SP2BRG	set	2587
   425  0A19                     _RC2REG	set	2585
   426  0A1A                     _TX2REG	set	2586
   427  0A1D                     _RC2STAbits	set	2589
   428  0A1E                     _TX2STAbits	set	2590
   429  1ECB                     _RX1DTPPSbits	set	7883
   430  1ECD                     _RX2DTPPSbits	set	7885
   431  1F24                     _RC4PPS	set	7972
   432  1F14                     _RA4PPS	set	7956
   433  1F21                     _RC1PPS	set	7969
   434  1F26                     _RC6PPS	set	7974
   435  1F1E                     _RB6PPS	set	7966
   436  1F4E                     _ANSELC	set	8014
   437  1F43                     _ANSELB	set	8003
   438  1F38                     _ANSELA	set	7992
   439                           
   440                           	psect	stringtext1
   441  0374                     __pstringtext1:	
   442  0374                     STR_2:	
   443  0374  3441               	retlw	65	;'A'
   444  0375  3454               	retlw	84	;'T'
   445  0376  342B               	retlw	43	;'+'
   446  0377  3443               	retlw	67	;'C'
   447  0378  3457               	retlw	87	;'W'
   448  0379  344C               	retlw	76	;'L'
   449  037A  3441               	retlw	65	;'A'
   450  037B  3450               	retlw	80	;'P'
   451  037C  344F               	retlw	79	;'O'
   452  037D  3450               	retlw	80	;'P'
   453  037E  3454               	retlw	84	;'T'
   454  037F  343D               	retlw	61	;'='
   455  0380  3431               	retlw	49	;'1'
   456  0381  342C               	retlw	44	;','
   457  0382  3431               	retlw	49	;'1'
   458  0383  3432               	retlw	50	;'2'
   459  0384  340D               	retlw	13
   460  0385  340A               	retlw	10
   461  0386  3400               	retlw	0
   462                           
   463                           	psect	stringtext2
   464  0398                     __pstringtext2:	
   465  0398                     STR_13:	
   466  0398  3453               	retlw	83	;'S'
   467  0399  3449               	retlw	73	;'I'
   468  039A  3447               	retlw	71	;'G'
   469  039B  3446               	retlw	70	;'F'
   470  039C  344F               	retlw	79	;'O'
   471  039D  3458               	retlw	88	;'X'
   472  039E  345F               	retlw	95	;'_'
   473  039F  3453               	retlw	83	;'S'
   474  03A0  3454               	retlw	84	;'T'
   475  03A1  3441               	retlw	65	;'A'
   476  03A2  3452               	retlw	82	;'R'
   477  03A3  3454               	retlw	84	;'T'
   478  03A4  340D               	retlw	13
   479  03A5  340A               	retlw	10
   480  03A6  3400               	retlw	0
   481                           
   482                           	psect	stringtext3
   483  03A7                     __pstringtext3:	
   484  03A7                     STR_19:	
   485  03A7  344D               	retlw	77	;'M'
   486  03A8  3445               	retlw	69	;'E'
   487  03A9  3453               	retlw	83	;'S'
   488  03AA  3453               	retlw	83	;'S'
   489  03AB  3441               	retlw	65	;'A'
   490  03AC  3447               	retlw	71	;'G'
   491  03AD  3445               	retlw	69	;'E'
   492  03AE  345F               	retlw	95	;'_'
   493  03AF  3445               	retlw	69	;'E'
   494  03B0  344E               	retlw	78	;'N'
   495  03B1  3444               	retlw	68	;'D'
   496  03B2  340D               	retlw	13
   497  03B3  340A               	retlw	10
   498  03B4  3400               	retlw	0
   499                           
   500                           	psect	stringtext4
   501  03B5                     __pstringtext4:	
   502  03B5                     STR_15:	
   503  03B5  3453               	retlw	83	;'S'
   504  03B6  3449               	retlw	73	;'I'
   505  03B7  3447               	retlw	71	;'G'
   506  03B8  3446               	retlw	70	;'F'
   507  03B9  344F               	retlw	79	;'O'
   508  03BA  3458               	retlw	88	;'X'
   509  03BB  345F               	retlw	95	;'_'
   510  03BC  3445               	retlw	69	;'E'
   511  03BD  344E               	retlw	78	;'N'
   512  03BE  3444               	retlw	68	;'D'
   513  03BF  340D               	retlw	13
   514  03C0  340A               	retlw	10
   515  03C1  3400               	retlw	0
   516                           
   517                           	psect	stringtext5
   518  03C2                     __pstringtext5:	
   519  03C2                     STR_1:	
   520  03C2  3457               	retlw	87	;'W'
   521  03C3  3449               	retlw	73	;'I'
   522  03C4  3446               	retlw	70	;'F'
   523  03C5  3449               	retlw	73	;'I'
   524  03C6  345F               	retlw	95	;'_'
   525  03C7  3453               	retlw	83	;'S'
   526  03C8  3454               	retlw	84	;'T'
   527  03C9  3441               	retlw	65	;'A'
   528  03CA  3452               	retlw	82	;'R'
   529  03CB  3454               	retlw	84	;'T'
   530  03CC  340D               	retlw	13
   531  03CD  340A               	retlw	10
   532  03CE  3400               	retlw	0
   533                           
   534                           	psect	stringtext6
   535  03CF                     __pstringtext6:	
   536  03CF                     STR_26:	
   537  03CF  3453               	retlw	83	;'S'
   538  03D0  3445               	retlw	69	;'E'
   539  03D1  344E               	retlw	78	;'N'
   540  03D2  3444               	retlw	68	;'D'
   541  03D3  345F               	retlw	95	;'_'
   542  03D4  3453               	retlw	83	;'S'
   543  03D5  3449               	retlw	73	;'I'
   544  03D6  3447               	retlw	71	;'G'
   545  03D7  3446               	retlw	70	;'F'
   546  03D8  344F               	retlw	79	;'O'
   547  03D9  3458               	retlw	88	;'X'
   548  03DA  343A               	retlw	58	;':'
   549  03DB  3400               	retlw	0
   550                           
   551                           	psect	stringtext7
   552  03DC                     __pstringtext7:	
   553  03DC                     STR_6:	
   554  03DC  3441               	retlw	65	;'A'
   555  03DD  3454               	retlw	84	;'T'
   556  03DE  342B               	retlw	43	;'+'
   557  03DF  3443               	retlw	67	;'C'
   558  03E0  3452               	retlw	82	;'R'
   559  03E1  3445               	retlw	69	;'E'
   560  03E2  3447               	retlw	71	;'G'
   561  03E3  343D               	retlw	61	;'='
   562  03E4  3432               	retlw	50	;'2'
   563  03E5  340D               	retlw	13
   564  03E6  340A               	retlw	10
   565  03E7  3400               	retlw	0
   566                           
   567                           	psect	stringtext8
   568  03E8                     __pstringtext8:	
   569  03E8                     STR_5:	
   570  03E8  3447               	retlw	71	;'G'
   571  03E9  3453               	retlw	83	;'S'
   572  03EA  344D               	retlw	77	;'M'
   573  03EB  345F               	retlw	95	;'_'
   574  03EC  3453               	retlw	83	;'S'
   575  03ED  3454               	retlw	84	;'T'
   576  03EE  3441               	retlw	65	;'A'
   577  03EF  3452               	retlw	82	;'R'
   578  03F0  3454               	retlw	84	;'T'
   579  03F1  340D               	retlw	13
   580  03F2  340A               	retlw	10
   581  03F3  3400               	retlw	0
   582                           
   583                           	psect	stringtext9
   584  03F4                     __pstringtext9:	
   585  03F4                     STR_10:	
   586  03F4  3447               	retlw	71	;'G'
   587  03F5  3450               	retlw	80	;'P'
   588  03F6  3453               	retlw	83	;'S'
   589  03F7  345F               	retlw	95	;'_'
   590  03F8  3453               	retlw	83	;'S'
   591  03F9  3454               	retlw	84	;'T'
   592  03FA  3441               	retlw	65	;'A'
   593  03FB  3452               	retlw	82	;'R'
   594  03FC  3454               	retlw	84	;'T'
   595  03FD  340D               	retlw	13
   596  03FE  340A               	retlw	10
   597  03FF  3400               	retlw	0
   598                           
   599                           	psect	stringtext10
   600  0400                     __pstringtext10:	
   601  0400                     STR_8:	
   602  0400  3441               	retlw	65	;'A'
   603  0401  3454               	retlw	84	;'T'
   604  0402  342B               	retlw	43	;'+'
   605  0403  3443               	retlw	67	;'C'
   606  0404  3452               	retlw	82	;'R'
   607  0405  3445               	retlw	69	;'E'
   608  0406  3447               	retlw	71	;'G'
   609  0407  343F               	retlw	63	;'?'
   610  0408  340D               	retlw	13
   611  0409  340A               	retlw	10
   612  040A  3400               	retlw	0
   613                           
   614                           	psect	stringtext11
   615  040B                     __pstringtext11:	
   616  040B                     STR_4:	
   617  040B  3457               	retlw	87	;'W'
   618  040C  3449               	retlw	73	;'I'
   619  040D  3446               	retlw	70	;'F'
   620  040E  3449               	retlw	73	;'I'
   621  040F  345F               	retlw	95	;'_'
   622  0410  3445               	retlw	69	;'E'
   623  0411  344E               	retlw	78	;'N'
   624  0412  3444               	retlw	68	;'D'
   625  0413  340D               	retlw	13
   626  0414  340A               	retlw	10
   627  0415  3400               	retlw	0
   628                           
   629                           	psect	stringtext12
   630  0416                     __pstringtext12:	
   631  0416                     STR_22:	
   632  0416  3447               	retlw	71	;'G'
   633  0417  3445               	retlw	69	;'E'
   634  0418  3454               	retlw	84	;'T'
   635  0419  345F               	retlw	95	;'_'
   636  041A  3457               	retlw	87	;'W'
   637  041B  3449               	retlw	73	;'I'
   638  041C  3446               	retlw	70	;'F'
   639  041D  3449               	retlw	73	;'I'
   640  041E  340D               	retlw	13
   641  041F  340A               	retlw	10
   642  0420  3400               	retlw	0
   643                           
   644                           	psect	stringtext13
   645  0421                     __pstringtext13:	
   646  0421                     STR_3:	
   647  0421  3441               	retlw	65	;'A'
   648  0422  3454               	retlw	84	;'T'
   649  0423  342B               	retlw	43	;'+'
   650  0424  3443               	retlw	67	;'C'
   651  0425  3457               	retlw	87	;'W'
   652  0426  344C               	retlw	76	;'L'
   653  0427  3441               	retlw	65	;'A'
   654  0428  3450               	retlw	80	;'P'
   655  0429  340D               	retlw	13
   656  042A  340A               	retlw	10
   657  042B  3400               	retlw	0
   658                           
   659                           	psect	stringtext14
   660  042C                     __pstringtext14:	
   661  042C                     STR_9:	
   662  042C  3447               	retlw	71	;'G'
   663  042D  3453               	retlw	83	;'S'
   664  042E  344D               	retlw	77	;'M'
   665  042F  345F               	retlw	95	;'_'
   666  0430  3445               	retlw	69	;'E'
   667  0431  344E               	retlw	78	;'N'
   668  0432  3444               	retlw	68	;'D'
   669  0433  340D               	retlw	13
   670  0434  340A               	retlw	10
   671  0435  3400               	retlw	0
   672                           
   673                           	psect	stringtext15
   674  0436                     __pstringtext15:	
   675  0436                     STR_12:	
   676  0436  3447               	retlw	71	;'G'
   677  0437  3450               	retlw	80	;'P'
   678  0438  3453               	retlw	83	;'S'
   679  0439  345F               	retlw	95	;'_'
   680  043A  3445               	retlw	69	;'E'
   681  043B  344E               	retlw	78	;'N'
   682  043C  3444               	retlw	68	;'D'
   683  043D  340D               	retlw	13
   684  043E  340A               	retlw	10
   685  043F  3400               	retlw	0
   686                           
   687                           	psect	stringtext16
   688  0440                     __pstringtext16:	
   689  0440                     STR_24:	
   690  0440  3447               	retlw	71	;'G'
   691  0441  3445               	retlw	69	;'E'
   692  0442  3454               	retlw	84	;'T'
   693  0443  345F               	retlw	95	;'_'
   694  0444  3441               	retlw	65	;'A'
   695  0445  344C               	retlw	76	;'L'
   696  0446  344C               	retlw	76	;'L'
   697  0447  340D               	retlw	13
   698  0448  340A               	retlw	10
   699  0449  3400               	retlw	0
   700                           
   701                           	psect	stringtext17
   702  044A                     __pstringtext17:	
   703  044A                     STR_20:	
   704  044A  3447               	retlw	71	;'G'
   705  044B  3445               	retlw	69	;'E'
   706  044C  3454               	retlw	84	;'T'
   707  044D  345F               	retlw	95	;'_'
   708  044E  3447               	retlw	71	;'G'
   709  044F  3453               	retlw	83	;'S'
   710  0450  344D               	retlw	77	;'M'
   711  0451  340D               	retlw	13
   712  0452  340A               	retlw	10
   713  0453  3400               	retlw	0
   714                           
   715                           	psect	stringtext18
   716  0454                     __pstringtext18:	
   717  0454                     STR_18:	
   718  0454  3447               	retlw	71	;'G'
   719  0455  3445               	retlw	69	;'E'
   720  0456  3454               	retlw	84	;'T'
   721  0457  345F               	retlw	95	;'_'
   722  0458  3447               	retlw	71	;'G'
   723  0459  3450               	retlw	80	;'P'
   724  045A  3453               	retlw	83	;'S'
   725  045B  340D               	retlw	13
   726  045C  340A               	retlw	10
   727  045D  3400               	retlw	0
   728                           
   729                           	psect	stringtext19
   730  0472                     __pstringtext19:	
   731  0472                     STR_7:	
   732  0472  3441               	retlw	65	;'A'
   733  0473  3454               	retlw	84	;'T'
   734  0474  342B               	retlw	43	;'+'
   735  0475  3443               	retlw	67	;'C'
   736  0476  3453               	retlw	83	;'S'
   737  0477  3451               	retlw	81	;'Q'
   738  0478  340D               	retlw	13
   739  0479  340A               	retlw	10
   740  047A  3400               	retlw	0
   741                           
   742                           	psect	stringtext20
   743  047B                     __pstringtext20:	
   744  047B                     STR_11:	
   745  047B  3424               	retlw	36	;'$'
   746  047C  3447               	retlw	71	;'G'
   747  047D  3450               	retlw	80	;'P'
   748  047E  3447               	retlw	71	;'G'
   749  047F  3447               	retlw	71	;'G'
   750  0480  3441               	retlw	65	;'A'
   751  0481  342C               	retlw	44	;','
   752  0482  3400               	retlw	0
   753                           
   754                           	psect	stringtext21
   755  0493                     __pstringtext21:	
   756  0493                     STR_16:	
   757  0493  3441               	retlw	65	;'A'
   758  0494  3454               	retlw	84	;'T'
   759  0495  3424               	retlw	36	;'$'
   760  0496  3453               	retlw	83	;'S'
   761  0497  3446               	retlw	70	;'F'
   762  0498  343D               	retlw	61	;'='
   763  0499  3400               	retlw	0
   764                           
   765                           	psect	stringtext22
   766  049A                     __pstringtext22:	
   767  049A                     STR_14:	
   768  049A  3441               	retlw	65	;'A'
   769  049B  3454               	retlw	84	;'T'
   770  049C  340D               	retlw	13
   771  049D  340A               	retlw	10
   772  049E  3400               	retlw	0
   773                           
   774                           	psect	stringtext23
   775  0000                     __pstringtext23:	
   776  0384                     
   777                           ; #config settings
   778  0000                     
   779                           	psect	cinit
   780  0027                     start_initialization:	
   781  0027                     __initialization:	
   782                           
   783                           ; Clear objects allocated to COMMON
   784  0027  01FB               	clrf	__pbssCOMMON& (0+127)
   785                           
   786                           ; Clear objects allocated to BANK0
   787  0028  0140               	movlb	0	; select bank0
   788  0029  01E5               	clrf	__pbssBANK0& (0+127)
   789  002A  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   790  002B  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   791  002C  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   792  002D                     end_of_initialization:	
   793                           ;End of C runtime variable initialization code
   794                           
   795  002D                     __end_of__initialization:	
   796  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   797  002E  0140               	movlb	0
   798  002F  3182  2AF2         	ljmp	_main	;jump to C main() function
   799                           
   800                           	psect	bssCOMMON
   801  007B                     __pbssCOMMON:	
   802  007B                     _timerDone:	
   803  007B                     	ds	1
   804                           
   805                           	psect	bssBANK0
   806  0065                     __pbssBANK0:	
   807  0065                     _timerActual:	
   808  0065                     	ds	2
   809  0067                     _timerSetpoint:	
   810  0067                     	ds	2
   811                           
   812                           	psect	cstackCOMMON
   813  0070                     __pcstackCOMMON:	
   814  0070                     ?_initBTSerial:	
   815  0070                     ?_setActivePeripheral:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_waitForCommand:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_main:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_serialWritePeripheral:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_serialReadPeripheral:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_serialWriteBT:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_serialReadBT:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_timerCount:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ??_timerCount:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_getWiFiData:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_getGSMData:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_getGPSData:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_sendSigfox:	
   852                           ; 1 bytes @ 0x0
   853                           
   854                           
   855                           ; 1 bytes @ 0x0
   856  0070                     	ds	1
   857  0071                     ??_initBTSerial:	
   858  0071                     ??_setActivePeripheral:	
   859                           ; 1 bytes @ 0x1
   860                           
   861  0071                     ??_serialWritePeripheral:	
   862                           ; 1 bytes @ 0x1
   863                           
   864  0071                     ??_serialReadPeripheral:	
   865                           ; 1 bytes @ 0x1
   866                           
   867  0071                     ?_serialFindPeripheral:	
   868                           ; 1 bytes @ 0x1
   869                           
   870  0071                     ??_serialWriteBT:	
   871                           ; 1 bytes @ 0x1
   872                           
   873  0071                     ??_serialReadBT:	
   874                           ; 1 bytes @ 0x1
   875                           
   876  0071                     ?_startTimer:	
   877                           ; 1 bytes @ 0x1
   878                           
   879  0071                     ?_strcmp:	
   880                           ; 1 bytes @ 0x1
   881                           
   882  0071                     ?_strncmp:	
   883                           ; 2 bytes @ 0x1
   884                           
   885  0071                     serialWritePeripheral@c:	
   886                           ; 2 bytes @ 0x1
   887                           
   888  0071                     setActivePeripheral@peri:	
   889                           ; 1 bytes @ 0x1
   890                           
   891  0071                     serialWriteBT@c:	
   892                           ; 1 bytes @ 0x1
   893                           
   894  0071                     serialFindPeripheral@s:	
   895                           ; 1 bytes @ 0x1
   896                           
   897  0071                     startTimer@seconds:	
   898                           ; 2 bytes @ 0x1
   899                           
   900  0071                     strcmp@s2:	
   901                           ; 2 bytes @ 0x1
   902                           
   903  0071                     strncmp@s2:	
   904                           ; 2 bytes @ 0x1
   905                           
   906                           
   907                           ; 2 bytes @ 0x1
   908  0071                     	ds	1
   909  0072                     ?_serialPrintPeripheral:	
   910  0072                     ?_serialPrintBT:	
   911                           ; 1 bytes @ 0x2
   912                           
   913  0072                     serialPrintPeripheral@s:	
   914                           ; 1 bytes @ 0x2
   915                           
   916  0072                     serialPrintBT@s:	
   917                           ; 2 bytes @ 0x2
   918                           
   919                           
   920                           ; 2 bytes @ 0x2
   921  0072                     	ds	1
   922  0073                     ??_strcmp:	
   923  0073                     ??_serialFindPeripheral:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0073                     ??_startTimer:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0073                     strncmp@len:	
   930                           ; 1 bytes @ 0x3
   931                           
   932                           
   933                           ; 2 bytes @ 0x3
   934  0073                     	ds	1
   935  0074                     ??_serialPrintPeripheral:	
   936  0074                     ??_serialPrintBT:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0074                     strcmp@r:	
   940                           ; 1 bytes @ 0x4
   941                           
   942  0074                     serialFindPeripheral@i:	
   943                           ; 1 bytes @ 0x4
   944                           
   945                           
   946                           ; 2 bytes @ 0x4
   947  0074                     	ds	1
   948  0075                     ??_strncmp:	
   949  0075                     strcmp@s1:	
   950                           ; 1 bytes @ 0x5
   951                           
   952  0075                     serialPrintPeripheral@i:	
   953                           ; 1 bytes @ 0x5
   954                           
   955  0075                     serialPrintBT@i:	
   956                           ; 2 bytes @ 0x5
   957                           
   958                           
   959                           ; 2 bytes @ 0x5
   960  0075                     	ds	2
   961  0077                     ??_getWiFiData:	
   962  0077                     ??_getGSMData:	
   963                           ; 1 bytes @ 0x7
   964                           
   965  0077                     ??_getGPSData:	
   966                           ; 1 bytes @ 0x7
   967                           
   968  0077                     ??_sendSigfox:	
   969                           ; 1 bytes @ 0x7
   970                           
   971  0077                     sendSigfox@hexMessage:	
   972                           ; 1 bytes @ 0x7
   973                           
   974  0077                     strncmp@s1:	
   975                           ; 1 bytes @ 0x7
   976                           
   977                           
   978                           ; 1 bytes @ 0x7
   979  0077                     	ds	1
   980  0078                     getGPSData@found:	
   981                           
   982                           ; 1 bytes @ 0x8
   983  0078                     	ds	1
   984  0079                     getGPSData@c:	
   985                           
   986                           ; 1 bytes @ 0x9
   987  0079                     	ds	1
   988  007A                     ??_waitForCommand:	
   989                           
   990                           ; 1 bytes @ 0xA
   991  007A                     	ds	1
   992                           
   993                           	psect	cstackBANK0
   994  0020                     __pcstackBANK0:	
   995  0020                     waitForCommand@message:	
   996                           
   997                           ; 30 bytes @ 0x0
   998  0020                     	ds	30
   999  003E                     waitForCommand@command:	
  1000                           
  1001                           ; 32 bytes @ 0x1E
  1002  003E                     	ds	32
  1003  005E                     waitForCommand@i:	
  1004                           
  1005                           ; 2 bytes @ 0x3E
  1006  005E                     	ds	2
  1007  0060                     waitForCommand@i_435:	
  1008                           
  1009                           ; 2 bytes @ 0x40
  1010  0060                     	ds	2
  1011  0062                     waitForCommand@p:	
  1012                           
  1013                           ; 1 bytes @ 0x42
  1014  0062                     	ds	1
  1015  0063                     ??_main:	
  1016                           
  1017                           ; 1 bytes @ 0x43
  1018  0063                     	ds	2
  1019                           
  1020                           	psect	maintext
  1021  02F2                     __pmaintext:	
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 88 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : B3F/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1041 ;;      Params:         0       0       0       0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0
  1043 ;;      Temps:          0       2       0       0       0       0       0       0
  1044 ;;      Totals:         0       2       0       0       0       0       0       0
  1045 ;;Total ram usage:        2 bytes
  1046 ;; Hardware stack levels required when called:    5
  1047 ;; This function calls:
  1048 ;;		_initBTSerial
  1049 ;;		_setActivePeripheral
  1050 ;;		_waitForCommand
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _main
  1058  02F2                     _main:	
  1059                           
  1060                           ;main.c: 90: ANSELA = 0;
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1064  02F2  017E               	movlb	62	; select bank62
  1065  02F3  01B8               	clrf	56	;volatile
  1066                           
  1067                           ;main.c: 91: ANSELB = 0;
  1068  02F4  01C3               	clrf	67	;volatile
  1069                           
  1070                           ;main.c: 92: ANSELC = 0;
  1071  02F5  01CE               	clrf	78	;volatile
  1072                           
  1073                           ;main.c: 95: INTCONbits.GIE = 1;
  1074  02F6  178B               	bsf	11,7	;volatile
  1075                           
  1076                           ;main.c: 96: INTCONbits.PEIE = 1;
  1077  02F7  170B               	bsf	11,6	;volatile
  1078                           
  1079                           ;main.c: 99: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1080  02F8  30CB               	movlw	203
  1081  02F9  0140               	movlb	0	; select bank0
  1082  02FA  00E4               	movwf	??_main+1
  1083  02FB  30EC               	movlw	236
  1084  02FC  00E3               	movwf	??_main
  1085  02FD  3084               	movlw	132
  1086  02FE                     u837:	
  1087  02FE  0B89               	decfsz	9,f
  1088  02FF  2AFE               	goto	u837
  1089  0300  0BE3               	decfsz	??_main,f
  1090  0301  2AFE               	goto	u837
  1091  0302  0BE4               	decfsz	??_main+1,f
  1092  0303  2AFE               	goto	u837
  1093  0304  0000               	nop
  1094                           
  1095                           ;main.c: 100: initBTSerial();
  1096  0305  3183  235E  3182   	fcall	_initBTSerial
  1097                           
  1098                           ;main.c: 101: setActivePeripheral(sigfox);
  1099  0308  3002               	movlw	2
  1100  0309  3181  2171  3182   	fcall	_setActivePeripheral
  1101  030C                     l1264:	
  1102                           ;main.c: 103: while (1) {
  1103                           
  1104                           
  1105                           ;main.c: 104: waitForCommand();
  1106  030C  3180  2031  3182   	fcall	_waitForCommand
  1107  030F  2B0C               	goto	l1264
  1108  0310                     __end_of_main:	
  1109                           ;main.c: 106: }
  1110                           ;main.c: 107: return;
  1111                           
  1112                           
  1113                           	psect	text1
  1114  0031                     __ptext1:	
  1115 ;; *************** function _waitForCommand *****************
  1116 ;; Defined at:
  1117 ;;		line 380 in file "main.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  message        30    0[BANK0 ] unsigned char [30]
  1122 ;;  i               2   64[BANK0 ] int 
  1123 ;;  p               1   66[BANK0 ] PTR unsigned char 
  1124 ;;		 -> waitForCommand@command(32), 
  1125 ;;  command        32   30[BANK0 ] unsigned char [32]
  1126 ;;  i               2   62[BANK0 ] int 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1136 ;;      Params:         0       0       0       0       0       0       0       0
  1137 ;;      Locals:         0      67       0       0       0       0       0       0
  1138 ;;      Temps:          1       0       0       0       0       0       0       0
  1139 ;;      Totals:         1      67       0       0       0       0       0       0
  1140 ;;Total ram usage:       68 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    4
  1143 ;; This function calls:
  1144 ;;		_getGPSData
  1145 ;;		_getGSMData
  1146 ;;		_getWiFiData
  1147 ;;		_sendSigfox
  1148 ;;		_serialPrintBT
  1149 ;;		_serialReadBT
  1150 ;;		_startTimer
  1151 ;;		_strcmp
  1152 ;;		_strncmp
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _waitForCommand
  1160  0031                     _waitForCommand:	
  1161  0031                     l210:	
  1162                           ;main.c: 381: char command[32];
  1163                           ;main.c: 383: while (!PIR3bits.RC2IF) {
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _waitForCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1167                           
  1168  0031  014E               	movlb	14	; select bank14
  1169  0032  1F8F               	btfss	15,7	;volatile
  1170  0033  2831               	goto	l210
  1171                           
  1172                           ;main.c: 384: }
  1173                           ;main.c: 386: startTimer(2);
  1174  0034  3002               	movlw	2
  1175  0035  00F1               	movwf	startTimer@seconds
  1176  0036  3000               	movlw	0
  1177  0037  00F2               	movwf	startTimer@seconds+1
  1178  0038  3183  2387  3180   	fcall	_startTimer
  1179                           
  1180                           ;main.c: 387: int i = 0;
  1181  003B  0140               	movlb	0	; select bank0
  1182  003C  01DE               	clrf	waitForCommand@i
  1183  003D  01DF               	clrf	waitForCommand@i+1
  1184  003E                     l1166:	
  1185                           ;main.c: 388: while (!timerDone) {
  1186                           
  1187  003E  087B               	movf	_timerDone,w
  1188  003F  1D03               	btfss	3,2
  1189  0040  2854               	goto	l1168
  1190                           
  1191                           ;main.c: 389: if (PIR3bits.RC2IF) {
  1192  0041  014E               	movlb	14	; select bank14
  1193  0042  1F8F               	btfss	15,7	;volatile
  1194  0043  283E               	goto	l1166
  1195                           
  1196                           ;main.c: 390: command[i] = serialReadBT();
  1197  0044  3184  245E  3180   	fcall	_serialReadBT
  1198  0047  00FA               	movwf	??_waitForCommand
  1199  0048  0140               	movlb	0	; select bank0
  1200  0049  085E               	movf	waitForCommand@i,w
  1201  004A  3E3E               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1202  004B  0086               	movwf	6
  1203  004C  0187               	clrf	7
  1204  004D  087A               	movf	??_waitForCommand,w
  1205  004E  0081               	movwf	1
  1206                           
  1207                           ;main.c: 391: i++;
  1208  004F  3001               	movlw	1
  1209  0050  07DE               	addwf	waitForCommand@i,f
  1210  0051  3000               	movlw	0
  1211  0052  3DDF               	addwfc	waitForCommand@i+1,f
  1212  0053  283E               	goto	l1166
  1213  0054                     l1168:	
  1214                           
  1215                           ;main.c: 392: }
  1216                           ;main.c: 393: }
  1217                           ;main.c: 394: command[i] = '\0';
  1218  0054  0140               	movlb	0	; select bank0
  1219  0055  085E               	movf	waitForCommand@i,w
  1220  0056  3E3E               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1221  0057  0086               	movwf	6
  1222  0058  0187               	clrf	7
  1223  0059  0181               	clrf	1
  1224                           
  1225                           ;main.c: 397: if (strcmp(command, "GET_GPS\r\n") == 0) {
  1226  005A  3054               	movlw	low (STR_18| (0+32768))
  1227  005B  00F1               	movwf	strcmp@s2
  1228  005C  3084               	movlw	high (STR_18| (0+32768))
  1229  005D  00F2               	movwf	strcmp@s2+1
  1230  005E  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1231  005F  3182  22A9  3180   	fcall	_strcmp
  1232  0062  0871               	movf	?_strcmp,w
  1233  0063  0472               	iorwf	?_strcmp+1,w
  1234  0064  1D03               	btfss	3,2
  1235  0065  2870               	goto	l1174
  1236                           
  1237                           ;main.c: 398: getGPSData();
  1238  0066  3182  221E  3180   	fcall	_getGPSData
  1239                           
  1240                           ;main.c: 399: serialPrintBT("MESSAGE_END\r\n");
  1241  0069  30A7               	movlw	low (STR_19| (0+32768))
  1242  006A  00F2               	movwf	serialPrintBT@s
  1243  006B  3083               	movlw	high (STR_19| (0+32768))
  1244  006C  00F3               	movwf	serialPrintBT@s+1
  1245  006D  3183  2344         	fcall	_serialPrintBT
  1246                           
  1247                           ;main.c: 400: } else if (strcmp(command, "GET_GSM\r\n") == 0) {
  1248  006F  0008               	return
  1249  0070                     l1174:	
  1250  0070  304A               	movlw	low (STR_20| (0+32768))
  1251  0071  00F1               	movwf	strcmp@s2
  1252  0072  3084               	movlw	high (STR_20| (0+32768))
  1253  0073  00F2               	movwf	strcmp@s2+1
  1254  0074  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1255  0075  3182  22A9  3180   	fcall	_strcmp
  1256  0078  0871               	movf	?_strcmp,w
  1257  0079  0472               	iorwf	?_strcmp+1,w
  1258  007A  1D03               	btfss	3,2
  1259  007B  2886               	goto	l1178
  1260                           
  1261                           ;main.c: 401: getGSMData();
  1262  007C  3180  20FA  3180   	fcall	_getGSMData
  1263                           
  1264                           ;main.c: 402: serialPrintBT("MESSAGE_END\r\n");
  1265  007F  30A7               	movlw	low (STR_19| (0+32768))
  1266  0080  00F2               	movwf	serialPrintBT@s
  1267  0081  3083               	movlw	high (STR_19| (0+32768))
  1268  0082  00F3               	movwf	serialPrintBT@s+1
  1269  0083  3183  2344         	fcall	_serialPrintBT
  1270                           
  1271                           ;main.c: 403: } else if (strcmp(command, "GET_WIFI\r\n") == 0) {
  1272  0085  0008               	return
  1273  0086                     l1178:	
  1274  0086  3016               	movlw	low (STR_22| (0+32768))
  1275  0087  00F1               	movwf	strcmp@s2
  1276  0088  3084               	movlw	high (STR_22| (0+32768))
  1277  0089  00F2               	movwf	strcmp@s2+1
  1278  008A  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1279  008B  3182  22A9  3180   	fcall	_strcmp
  1280  008E  0871               	movf	?_strcmp,w
  1281  008F  0472               	iorwf	?_strcmp+1,w
  1282  0090  1D03               	btfss	3,2
  1283  0091  289C               	goto	l1182
  1284                           
  1285                           ;main.c: 404: getWiFiData();
  1286  0092  3181  21CA  3180   	fcall	_getWiFiData
  1287                           
  1288                           ;main.c: 405: serialPrintBT("MESSAGE_END\r\n");
  1289  0095  30A7               	movlw	low (STR_19| (0+32768))
  1290  0096  00F2               	movwf	serialPrintBT@s
  1291  0097  3083               	movlw	high (STR_19| (0+32768))
  1292  0098  00F3               	movwf	serialPrintBT@s+1
  1293  0099  3183  2344         	fcall	_serialPrintBT
  1294                           
  1295                           ;main.c: 406: } else if (strcmp(command, "GET_ALL\r\n") == 0) {
  1296  009B  0008               	return
  1297  009C                     l1182:	
  1298  009C  3040               	movlw	low (STR_24| (0+32768))
  1299  009D  00F1               	movwf	strcmp@s2
  1300  009E  3084               	movlw	high (STR_24| (0+32768))
  1301  009F  00F2               	movwf	strcmp@s2+1
  1302  00A0  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1303  00A1  3182  22A9  3180   	fcall	_strcmp
  1304  00A4  0871               	movf	?_strcmp,w
  1305  00A5  0472               	iorwf	?_strcmp+1,w
  1306  00A6  1D03               	btfss	3,2
  1307  00A7  28B8               	goto	l1186
  1308                           
  1309                           ;main.c: 407: getGPSData();
  1310  00A8  3182  221E  3180   	fcall	_getGPSData
  1311                           
  1312                           ;main.c: 408: getGSMData();
  1313  00AB  3180  20FA  3180   	fcall	_getGSMData
  1314                           
  1315                           ;main.c: 409: getWiFiData();
  1316  00AE  3181  21CA  3180   	fcall	_getWiFiData
  1317                           
  1318                           ;main.c: 410: serialPrintBT("MESSAGE_END\r\n");
  1319  00B1  30A7               	movlw	low (STR_19| (0+32768))
  1320  00B2  00F2               	movwf	serialPrintBT@s
  1321  00B3  3083               	movlw	high (STR_19| (0+32768))
  1322  00B4  00F3               	movwf	serialPrintBT@s+1
  1323  00B5  3183  2344         	fcall	_serialPrintBT
  1324                           
  1325                           ;main.c: 411: } else if (strncmp(command, "SEND_SIGFOX:", 12) == 0) {
  1326  00B7  0008               	return
  1327  00B8                     l1186:	
  1328  00B8  30CF               	movlw	low (STR_26| (0+32768))
  1329  00B9  00F1               	movwf	strncmp@s2
  1330  00BA  3083               	movlw	high (STR_26| (0+32768))
  1331  00BB  00F2               	movwf	strncmp@s2+1
  1332  00BC  300C               	movlw	12
  1333  00BD  00F3               	movwf	strncmp@len
  1334  00BE  3000               	movlw	0
  1335  00BF  00F4               	movwf	strncmp@len+1
  1336  00C0  303E               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1337  00C1  3182  2269  3180   	fcall	_strncmp
  1338  00C4  0871               	movf	?_strncmp,w
  1339  00C5  0472               	iorwf	?_strncmp+1,w
  1340  00C6  1D03               	btfss	3,2
  1341  00C7  0008               	return
  1342                           
  1343                           ;main.c: 412: char * p;
  1344                           ;main.c: 413: p = command + 12;
  1345  00C8  304A               	movlw	(low ((waitForCommand@command| 0+12)))& (0+255)
  1346  00C9  00FA               	movwf	??_waitForCommand
  1347  00CA  087A               	movf	??_waitForCommand,w
  1348  00CB  0140               	movlb	0	; select bank0
  1349  00CC  00E2               	movwf	waitForCommand@p
  1350                           
  1351                           ;main.c: 414: char message[30];
  1352                           ;main.c: 415: int i = 0;
  1353  00CD  01E0               	clrf	waitForCommand@i_435
  1354  00CE  01E1               	clrf	waitForCommand@i_435+1
  1355  00CF                     l1198:	
  1356                           ;main.c: 417: while(*p != '\r') {
  1357                           
  1358  00CF  0862               	movf	waitForCommand@p,w
  1359  00D0  0086               	movwf	6
  1360  00D1  0187               	clrf	7
  1361  00D2  300D               	movlw	13
  1362  00D3  0601               	xorwf	1,w
  1363  00D4  1903               	btfsc	3,2
  1364  00D5  28EA               	goto	l1200
  1365                           
  1366                           ;main.c: 418: message[i] = *p;
  1367  00D6  0862               	movf	waitForCommand@p,w
  1368  00D7  0086               	movwf	6
  1369  00D8  0187               	clrf	7
  1370  00D9  0801               	movf	1,w
  1371  00DA  00FA               	movwf	??_waitForCommand
  1372  00DB  0860               	movf	waitForCommand@i_435,w
  1373  00DC  3E20               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1374  00DD  0086               	movwf	6
  1375  00DE  0187               	clrf	7
  1376  00DF  087A               	movf	??_waitForCommand,w
  1377  00E0  0081               	movwf	1
  1378                           
  1379                           ;main.c: 419: p++;
  1380  00E1  3001               	movlw	1
  1381  00E2  00FA               	movwf	??_waitForCommand
  1382  00E3  087A               	movf	??_waitForCommand,w
  1383  00E4  07E2               	addwf	waitForCommand@p,f
  1384                           
  1385                           ;main.c: 420: i++;
  1386  00E5  3001               	movlw	1
  1387  00E6  07E0               	addwf	waitForCommand@i_435,f
  1388  00E7  3000               	movlw	0
  1389  00E8  3DE1               	addwfc	waitForCommand@i_435+1,f
  1390  00E9  28CF               	goto	l1198
  1391  00EA                     l1200:	
  1392                           
  1393                           ;main.c: 421: }
  1394                           ;main.c: 422: message[i] = '\0';
  1395  00EA  0860               	movf	waitForCommand@i_435,w
  1396  00EB  3E20               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1397  00EC  0086               	movwf	6
  1398  00ED  0187               	clrf	7
  1399  00EE  0181               	clrf	1
  1400                           
  1401                           ;main.c: 424: sendSigfox(message);
  1402  00EF  3020               	movlw	(low (waitForCommand@message| 0))& (0+255)
  1403  00F0  3183  2310  3180   	fcall	_sendSigfox
  1404                           
  1405                           ;main.c: 425: serialPrintBT("MESSAGE_END\r\n");
  1406  00F3  30A7               	movlw	low (STR_19| (0+32768))
  1407  00F4  00F2               	movwf	serialPrintBT@s
  1408  00F5  3083               	movlw	high (STR_19| (0+32768))
  1409  00F6  00F3               	movwf	serialPrintBT@s+1
  1410  00F7  3183  2344         	fcall	_serialPrintBT
  1411  00F9  0008               	return
  1412  00FA                     __end_of_waitForCommand:	
  1413                           
  1414                           	psect	text2
  1415  0269                     __ptext2:	
  1416 ;; *************** function _strncmp *****************
  1417 ;; Defined at:
  1418 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  s1              1    wreg     PTR const unsigned char 
  1421 ;;		 -> waitForCommand@command(32), 
  1422 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1423 ;;		 -> STR_26(13), 
  1424 ;;  len             2    3[COMMON] unsigned int 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  s1              1    7[COMMON] PTR const unsigned char 
  1427 ;;		 -> waitForCommand@command(32), 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  2    1[COMMON] int 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1437 ;;      Params:         4       0       0       0       0       0       0       0
  1438 ;;      Locals:         1       0       0       0       0       0       0       0
  1439 ;;      Temps:          2       0       0       0       0       0       0       0
  1440 ;;      Totals:         7       0       0       0       0       0       0       0
  1441 ;;Total ram usage:        7 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_waitForCommand
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _strncmp
  1453  0269                     _strncmp:	
  1454                           
  1455                           ;incstack = 0
  1456                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  1457                           ;strncmp@s1 stored from wreg
  1458  0269  00F7               	movwf	strncmp@s1
  1459  026A                     l1150:	
  1460  026A  3001               	movlw	1
  1461  026B  02F3               	subwf	strncmp@len,f
  1462  026C  3000               	movlw	0
  1463  026D  3BF4               	subwfb	strncmp@len+1,f
  1464  026E  0A73               	incf	strncmp@len,w
  1465  026F  1903               	btfsc	3,2
  1466  0270  0A74               	incf	strncmp@len+1,w
  1467  0271  1903               	btfsc	3,2
  1468  0272  2AA6               	goto	l1152
  1469  0273  0877               	movf	strncmp@s1,w
  1470  0274  0086               	movwf	6
  1471  0275  0187               	clrf	7
  1472  0276  0801               	movf	1,w
  1473  0277  1903               	btfsc	3,2
  1474  0278  2A86               	goto	l1142
  1475  0279  0871               	movf	strncmp@s2,w
  1476  027A  0084               	movwf	4
  1477  027B  0872               	movf	strncmp@s2+1,w
  1478  027C  0085               	movwf	5
  1479  027D  0800               	movf	0,w	;code access
  1480  027E  00F5               	movwf	??_strncmp
  1481  027F  0877               	movf	strncmp@s1,w
  1482  0280  0086               	movwf	6
  1483  0281  0187               	clrf	7
  1484  0282  0801               	movf	1,w
  1485  0283  0675               	xorwf	??_strncmp,w
  1486  0284  1903               	skipnz
  1487  0285  2A9D               	goto	l1146
  1488  0286                     l1142:	
  1489  0286  0871               	movf	strncmp@s2,w
  1490  0287  0084               	movwf	4
  1491  0288  0872               	movf	strncmp@s2+1,w
  1492  0289  0085               	movwf	5
  1493  028A  0800               	movf	0,w	;code access
  1494  028B  00F5               	movwf	??_strncmp
  1495  028C  01F6               	clrf	??_strncmp+1
  1496  028D  09F5               	comf	??_strncmp,f
  1497  028E  09F6               	comf	??_strncmp+1,f
  1498  028F  0AF5               	incf	??_strncmp,f
  1499  0290  1903               	skipnz
  1500  0291  0AF6               	incf	??_strncmp+1,f
  1501  0292  0877               	movf	strncmp@s1,w
  1502  0293  0086               	movwf	6
  1503  0294  0187               	clrf	7
  1504  0295  0801               	movf	1,w
  1505  0296  0775               	addwf	??_strncmp,w
  1506  0297  00F1               	movwf	?_strncmp
  1507  0298  0876               	movf	??_strncmp+1,w
  1508  0299  1803               	skipnc
  1509  029A  0A76               	incf	??_strncmp+1,w
  1510  029B  00F2               	movwf	?_strncmp+1
  1511  029C  0008               	return
  1512  029D                     l1146:	
  1513  029D  3001               	movlw	1
  1514  029E  00F5               	movwf	??_strncmp
  1515  029F  0875               	movf	??_strncmp,w
  1516  02A0  07F7               	addwf	strncmp@s1,f
  1517  02A1  3001               	movlw	1
  1518  02A2  07F1               	addwf	strncmp@s2,f
  1519  02A3  3000               	movlw	0
  1520  02A4  3DF2               	addwfc	strncmp@s2+1,f
  1521  02A5  2A6A               	goto	l1150
  1522  02A6                     l1152:	
  1523  02A6  01F1               	clrf	?_strncmp
  1524  02A7  01F2               	clrf	?_strncmp+1
  1525  02A8  0008               	return
  1526  02A9                     __end_of_strncmp:	
  1527                           
  1528                           	psect	text3
  1529  02A9                     __ptext3:	
  1530 ;; *************** function _strcmp *****************
  1531 ;; Defined at:
  1532 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  s1              1    wreg     PTR const unsigned char 
  1535 ;;		 -> waitForCommand@command(32), 
  1536 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1537 ;;		 -> STR_24(10), STR_22(11), STR_20(10), STR_18(10), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1540 ;;		 -> waitForCommand@command(32), 
  1541 ;;  r               1    4[COMMON] char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  2    1[COMMON] int 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1551 ;;      Params:         2       0       0       0       0       0       0       0
  1552 ;;      Locals:         2       0       0       0       0       0       0       0
  1553 ;;      Temps:          1       0       0       0       0       0       0       0
  1554 ;;      Totals:         5       0       0       0       0       0       0       0
  1555 ;;Total ram usage:        5 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_waitForCommand
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _strcmp
  1567  02A9                     _strcmp:	
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  1571                           ;strcmp@s1 stored from wreg
  1572  02A9  00F5               	movwf	strcmp@s1
  1573  02AA  2AB3               	goto	l1128
  1574  02AB                     l1126:	
  1575  02AB  3001               	movlw	1
  1576  02AC  00F3               	movwf	??_strcmp
  1577  02AD  0873               	movf	??_strcmp,w
  1578  02AE  07F5               	addwf	strcmp@s1,f
  1579  02AF  3001               	movlw	1
  1580  02B0  07F1               	addwf	strcmp@s2,f
  1581  02B1  3000               	movlw	0
  1582  02B2  3DF2               	addwfc	strcmp@s2+1,f
  1583  02B3                     l1128:	
  1584  02B3  0875               	movf	strcmp@s1,w
  1585  02B4  0086               	movwf	6
  1586  02B5  0187               	clrf	7
  1587  02B6  0871               	movf	strcmp@s2,w
  1588  02B7  0084               	movwf	4
  1589  02B8  0872               	movf	strcmp@s2+1,w
  1590  02B9  0085               	movwf	5
  1591  02BA  0800               	movf	0,w	;code access
  1592  02BB  3AFF               	xorlw	255
  1593  02BC  3E01               	addlw	1
  1594  02BD  0701               	addwf	1,w
  1595  02BE  00F3               	movwf	??_strcmp
  1596  02BF  0873               	movf	??_strcmp,w
  1597  02C0  00F4               	movwf	strcmp@r
  1598  02C1  0874               	movf	strcmp@r,w
  1599  02C2  1D03               	btfss	3,2
  1600  02C3  2ACA               	goto	l1132
  1601  02C4  0875               	movf	strcmp@s1,w
  1602  02C5  0086               	movwf	6
  1603  02C6  0187               	clrf	7
  1604  02C7  0801               	movf	1,w
  1605  02C8  1D03               	btfss	3,2
  1606  02C9  2AAB               	goto	l1126
  1607  02CA                     l1132:	
  1608  02CA  0874               	movf	strcmp@r,w
  1609  02CB  00F1               	movwf	?_strcmp
  1610  02CC  01F2               	clrf	?_strcmp+1
  1611  02CD  1BF1               	btfsc	?_strcmp,7
  1612  02CE  03F2               	decf	?_strcmp+1,f
  1613  02CF  0008               	return
  1614  02D0                     __end_of_strcmp:	
  1615                           
  1616                           	psect	text4
  1617  045E                     __ptext4:	
  1618 ;; *************** function _serialReadBT *****************
  1619 ;; Defined at:
  1620 ;;		line 235 in file "main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      unsigned char 
  1627 ;; Registers used:
  1628 ;;		wreg
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1634 ;;      Params:         0       0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_waitForCommand
  1645 ;;		_serialFindBT
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _serialReadBT
  1651  045E                     _serialReadBT:	
  1652  045E                     l144:	
  1653                           ;main.c: 236: while (!PIR3bits.RC2IF) {
  1654                           
  1655                           ;incstack = 0
  1656                           ; Regs used in _serialReadBT: [wreg]
  1657                           
  1658  045E  014E               	movlb	14	; select bank14
  1659  045F  1F8F               	btfss	15,7	;volatile
  1660  0460  2C5E               	goto	l144
  1661                           
  1662                           ;main.c: 237: }
  1663                           ;main.c: 238: if (1 == RC2STAbits.OERR) {
  1664  0461  0154               	movlb	20	; select bank20
  1665  0462  1C9D               	btfss	29,1	;volatile
  1666  0463  2C66               	goto	l1048
  1667                           
  1668                           ;main.c: 239: RC2STAbits.SPEN = 0;
  1669  0464  139D               	bcf	29,7	;volatile
  1670                           
  1671                           ;main.c: 240: RC2STAbits.SPEN = 1;
  1672  0465  179D               	bsf	29,7	;volatile
  1673  0466                     l1048:	
  1674                           
  1675                           ;main.c: 241: }
  1676                           ;main.c: 242: return RC2REG;
  1677  0466  0819               	movf	25,w	;volatile
  1678  0467  0008               	return
  1679  0468                     __end_of_serialReadBT:	
  1680                           
  1681                           	psect	text5
  1682  0310                     __ptext5:	
  1683 ;; *************** function _sendSigfox *****************
  1684 ;; Defined at:
  1685 ;;		line 373 in file "main.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  hexMessage      1    wreg     PTR unsigned char 
  1688 ;;		 -> waitForCommand@message(30), 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  hexMessage      1    7[COMMON] PTR unsigned char 
  1691 ;;		 -> waitForCommand@message(30), 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1701 ;;      Params:         0       0       0       0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0
  1704 ;;      Totals:         1       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    3
  1708 ;; This function calls:
  1709 ;;		_serialPrintPeripheral
  1710 ;;		_setActivePeripheral
  1711 ;; This function is called by:
  1712 ;;		_waitForCommand
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _sendSigfox
  1718  0310                     _sendSigfox:	
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _sendSigfox: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1722                           ;sendSigfox@hexMessage stored from wreg
  1723  0310  00F7               	movwf	sendSigfox@hexMessage
  1724                           
  1725                           ;main.c: 374: setActivePeripheral(sigfox);
  1726  0311  3002               	movlw	2
  1727  0312  3181  2171  3183   	fcall	_setActivePeripheral
  1728                           
  1729                           ;main.c: 375: serialPrintPeripheral("AT$SF=");
  1730  0315  3093               	movlw	low (STR_16| (0+32768))
  1731  0316  00F2               	movwf	serialPrintPeripheral@s
  1732  0317  3084               	movlw	high (STR_16| (0+32768))
  1733  0318  00F3               	movwf	serialPrintPeripheral@s+1
  1734  0319  3183  232A  3183   	fcall	_serialPrintPeripheral
  1735                           
  1736                           ;main.c: 376: serialPrintPeripheral(hexMessage);
  1737  031C  0877               	movf	sendSigfox@hexMessage,w
  1738  031D  00F2               	movwf	serialPrintPeripheral@s
  1739  031E  3000               	movlw	0
  1740  031F  00F3               	movwf	serialPrintPeripheral@s+1
  1741  0320  3183  232A  3183   	fcall	_serialPrintPeripheral
  1742                           
  1743                           ;main.c: 377: serialPrintPeripheral("\r\n");
  1744  0323  3084               	movlw	low ((STR_2+16)| (0+32768))
  1745  0324  00F2               	movwf	serialPrintPeripheral@s
  1746  0325  3083               	movlw	high ((STR_2+16)| (0+32768))
  1747  0326  00F3               	movwf	serialPrintPeripheral@s+1
  1748  0327  3183  232A         	fcall	_serialPrintPeripheral
  1749  0329  0008               	return
  1750  032A                     __end_of_sendSigfox:	
  1751                           
  1752                           	psect	text6
  1753  01CA                     __ptext6:	
  1754 ;; *************** function _getWiFiData *****************
  1755 ;; Defined at:
  1756 ;;		line 282 in file "main.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1770 ;;      Params:         0       0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0       0
  1772 ;;      Temps:          2       0       0       0       0       0       0       0
  1773 ;;      Totals:         2       0       0       0       0       0       0       0
  1774 ;;Total ram usage:        2 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    3
  1777 ;; This function calls:
  1778 ;;		_serialPrintBT
  1779 ;;		_serialPrintPeripheral
  1780 ;;		_serialReadPeripheral
  1781 ;;		_serialWriteBT
  1782 ;;		_setActivePeripheral
  1783 ;;		_startTimer
  1784 ;; This function is called by:
  1785 ;;		_waitForCommand
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _getWiFiData
  1791  01CA                     _getWiFiData:	
  1792                           
  1793                           ;main.c: 283: serialPrintBT("WIFI_START\r\n");
  1794                           
  1795                           ;incstack = 0
  1796                           ; Regs used in _getWiFiData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1797  01CA  30C2               	movlw	low (STR_1| (0+32768))
  1798  01CB  00F2               	movwf	serialPrintBT@s
  1799  01CC  3083               	movlw	high (STR_1| (0+32768))
  1800  01CD  00F3               	movwf	serialPrintBT@s+1
  1801  01CE  3183  2344  3181   	fcall	_serialPrintBT
  1802                           
  1803                           ;main.c: 284: setActivePeripheral(wifi);
  1804  01D1  3001               	movlw	1
  1805  01D2  3181  2171  3181   	fcall	_setActivePeripheral
  1806                           
  1807                           ;main.c: 285: serialPrintPeripheral("AT+CWLAPOPT=1,12\r\n");
  1808  01D5  3074               	movlw	low (STR_2| (0+32768))
  1809  01D6  00F2               	movwf	serialPrintPeripheral@s
  1810  01D7  3083               	movlw	high (STR_2| (0+32768))
  1811  01D8  00F3               	movwf	serialPrintPeripheral@s+1
  1812  01D9  3183  232A  3181   	fcall	_serialPrintPeripheral
  1813                           
  1814                           ;main.c: 286: _delay((unsigned long)((500)*(32000000/4000.0)));
  1815  01DC  3015               	movlw	21
  1816  01DD  00F8               	movwf	??_getWiFiData+1
  1817  01DE  304B               	movlw	75
  1818  01DF  00F7               	movwf	??_getWiFiData
  1819  01E0  30BE               	movlw	190
  1820  01E1                     u847:	
  1821  01E1  0B89               	decfsz	9,f
  1822  01E2  29E1               	goto	u847
  1823  01E3  0BF7               	decfsz	??_getWiFiData,f
  1824  01E4  29E1               	goto	u847
  1825  01E5  0BF8               	decfsz	??_getWiFiData+1,f
  1826  01E6  29E1               	goto	u847
  1827  01E7  3200               	nop2
  1828                           
  1829                           ;main.c: 287: serialPrintPeripheral("AT+CWLAP\r\n");
  1830  01E8  3021               	movlw	low (STR_3| (0+32768))
  1831  01E9  00F2               	movwf	serialPrintPeripheral@s
  1832  01EA  3084               	movlw	high (STR_3| (0+32768))
  1833  01EB  00F3               	movwf	serialPrintPeripheral@s+1
  1834  01EC  3183  232A  3181   	fcall	_serialPrintPeripheral
  1835                           
  1836                           ;main.c: 288: _delay((unsigned long)((10)*(32000000/4000.0)));
  1837  01EF  3068               	movlw	104
  1838  01F0  00F7               	movwf	??_getWiFiData
  1839  01F1  30E4               	movlw	228
  1840  01F2                     u857:	
  1841  01F2  0B89               	decfsz	9,f
  1842  01F3  29F2               	goto	u857
  1843  01F4  0BF7               	decfsz	??_getWiFiData,f
  1844  01F5  29F2               	goto	u857
  1845  01F6  3200               	nop2
  1846                           
  1847                           ;main.c: 290: serialReadPeripheral();
  1848  01F7  3184  2468  3181   	fcall	_serialReadPeripheral
  1849                           
  1850                           ;main.c: 292: startTimer(3);
  1851  01FA  3003               	movlw	3
  1852  01FB  00F1               	movwf	startTimer@seconds
  1853  01FC  3000               	movlw	0
  1854  01FD  00F2               	movwf	startTimer@seconds+1
  1855  01FE  3183  2387  3181   	fcall	_startTimer
  1856  0201                     l1064:	
  1857                           ;main.c: 293: while (!timerDone) {
  1858                           
  1859  0201  087B               	movf	_timerDone,w
  1860  0202  1D03               	btfss	3,2
  1861  0203  2A0E               	goto	l1066
  1862                           
  1863                           ;main.c: 294: if (PIR3bits.RC1IF) {
  1864  0204  014E               	movlb	14	; select bank14
  1865  0205  1E8F               	btfss	15,5	;volatile
  1866  0206  2A01               	goto	l1064
  1867                           
  1868                           ;main.c: 295: serialWriteBT(serialReadPeripheral());
  1869  0207  3184  2468  3181   	fcall	_serialReadPeripheral
  1870  020A  3184  248B  3181   	fcall	_serialWriteBT
  1871  020D  2A01               	goto	l1064
  1872  020E                     l1066:	
  1873                           
  1874                           ;main.c: 296: }
  1875                           ;main.c: 297: }
  1876                           ;main.c: 298: serialPrintBT("WIFI_END\r\n");
  1877  020E  300B               	movlw	low (STR_4| (0+32768))
  1878  020F  00F2               	movwf	serialPrintBT@s
  1879  0210  3084               	movlw	high (STR_4| (0+32768))
  1880  0211  00F3               	movwf	serialPrintBT@s+1
  1881  0212  3183  2344  3181   	fcall	_serialPrintBT
  1882                           
  1883                           ;main.c: 299: _delay((unsigned long)((10)*(32000000/4000.0)));
  1884  0215  3068               	movlw	104
  1885  0216  00F7               	movwf	??_getWiFiData
  1886  0217  30E4               	movlw	228
  1887  0218                     u867:	
  1888  0218  0B89               	decfsz	9,f
  1889  0219  2A18               	goto	u867
  1890  021A  0BF7               	decfsz	??_getWiFiData,f
  1891  021B  2A18               	goto	u867
  1892  021C  3200               	nop2
  1893  021D  0008               	return
  1894  021E                     __end_of_getWiFiData:	
  1895                           
  1896                           	psect	text7
  1897  00FA                     __ptext7:	
  1898 ;; *************** function _getGSMData *****************
  1899 ;; Defined at:
  1900 ;;		line 302 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1914 ;;      Params:         0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0
  1916 ;;      Temps:          2       0       0       0       0       0       0       0
  1917 ;;      Totals:         2       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    3
  1921 ;; This function calls:
  1922 ;;		_serialPrintBT
  1923 ;;		_serialPrintPeripheral
  1924 ;;		_serialReadPeripheral
  1925 ;;		_serialWriteBT
  1926 ;;		_setActivePeripheral
  1927 ;;		_startTimer
  1928 ;; This function is called by:
  1929 ;;		_waitForCommand
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _getGSMData
  1935  00FA                     _getGSMData:	
  1936                           
  1937                           ;main.c: 303: serialPrintBT("GSM_START\r\n");
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _getGSMData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1941  00FA  30E8               	movlw	low (STR_5| (0+32768))
  1942  00FB  00F2               	movwf	serialPrintBT@s
  1943  00FC  3083               	movlw	high (STR_5| (0+32768))
  1944  00FD  00F3               	movwf	serialPrintBT@s+1
  1945  00FE  3183  2344  3180   	fcall	_serialPrintBT
  1946                           
  1947                           ;main.c: 305: setActivePeripheral(gsm);
  1948  0101  3003               	movlw	3
  1949  0102  3181  2171  3180   	fcall	_setActivePeripheral
  1950                           
  1951                           ;main.c: 306: serialPrintPeripheral("AT+CREG=2\r\n");
  1952  0105  30DC               	movlw	low (STR_6| (0+32768))
  1953  0106  00F2               	movwf	serialPrintPeripheral@s
  1954  0107  3083               	movlw	high (STR_6| (0+32768))
  1955  0108  00F3               	movwf	serialPrintPeripheral@s+1
  1956  0109  3183  232A  3180   	fcall	_serialPrintPeripheral
  1957                           
  1958                           ;main.c: 307: _delay((unsigned long)((500)*(32000000/4000.0)));
  1959  010C  3015               	movlw	21
  1960  010D  00F8               	movwf	??_getGSMData+1
  1961  010E  304B               	movlw	75
  1962  010F  00F7               	movwf	??_getGSMData
  1963  0110  30BE               	movlw	190
  1964  0111                     u877:	
  1965  0111  0B89               	decfsz	9,f
  1966  0112  2911               	goto	u877
  1967  0113  0BF7               	decfsz	??_getGSMData,f
  1968  0114  2911               	goto	u877
  1969  0115  0BF8               	decfsz	??_getGSMData+1,f
  1970  0116  2911               	goto	u877
  1971  0117  3200               	nop2
  1972                           
  1973                           ;main.c: 308: serialPrintPeripheral("AT+CSQ\r\n");
  1974  0118  3072               	movlw	low (STR_7| (0+32768))
  1975  0119  00F2               	movwf	serialPrintPeripheral@s
  1976  011A  3084               	movlw	high (STR_7| (0+32768))
  1977  011B  00F3               	movwf	serialPrintPeripheral@s+1
  1978  011C  3183  232A  3180   	fcall	_serialPrintPeripheral
  1979                           
  1980                           ;main.c: 309: _delay((unsigned long)((10)*(32000000/4000.0)));
  1981  011F  3068               	movlw	104
  1982  0120  00F7               	movwf	??_getGSMData
  1983  0121  30E4               	movlw	228
  1984  0122                     u887:	
  1985  0122  0B89               	decfsz	9,f
  1986  0123  2922               	goto	u887
  1987  0124  0BF7               	decfsz	??_getGSMData,f
  1988  0125  2922               	goto	u887
  1989  0126  3200               	nop2
  1990                           
  1991                           ;main.c: 310: serialReadPeripheral();
  1992  0127  3184  2468  3180   	fcall	_serialReadPeripheral
  1993                           
  1994                           ;main.c: 312: startTimer(1);
  1995  012A  3001               	movlw	1
  1996  012B  00F1               	movwf	startTimer@seconds
  1997  012C  3000               	movlw	0
  1998  012D  00F2               	movwf	startTimer@seconds+1
  1999  012E  3183  2387  3180   	fcall	_startTimer
  2000  0131                     l1082:	
  2001                           ;main.c: 313: while (!timerDone) {
  2002                           
  2003  0131  087B               	movf	_timerDone,w
  2004  0132  1D03               	btfss	3,2
  2005  0133  293E               	goto	l1084
  2006                           
  2007                           ;main.c: 314: if (PIR3bits.RC1IF) {
  2008  0134  014E               	movlb	14	; select bank14
  2009  0135  1E8F               	btfss	15,5	;volatile
  2010  0136  2931               	goto	l1082
  2011                           
  2012                           ;main.c: 315: serialWriteBT(serialReadPeripheral());
  2013  0137  3184  2468  3180   	fcall	_serialReadPeripheral
  2014  013A  3184  248B  3180   	fcall	_serialWriteBT
  2015  013D  2931               	goto	l1082
  2016  013E                     l1084:	
  2017                           
  2018                           ;main.c: 316: }
  2019                           ;main.c: 317: }
  2020                           ;main.c: 319: serialPrintPeripheral("AT+CREG?\r\n");
  2021  013E  3000               	movlw	low (STR_8| (0+32768))
  2022  013F  00F2               	movwf	serialPrintPeripheral@s
  2023  0140  3084               	movlw	high (STR_8| (0+32768))
  2024  0141  00F3               	movwf	serialPrintPeripheral@s+1
  2025  0142  3183  232A  3180   	fcall	_serialPrintPeripheral
  2026                           
  2027                           ;main.c: 320: _delay((unsigned long)((10)*(32000000/4000.0)));
  2028  0145  3068               	movlw	104
  2029  0146  00F7               	movwf	??_getGSMData
  2030  0147  30E4               	movlw	228
  2031  0148                     u897:	
  2032  0148  0B89               	decfsz	9,f
  2033  0149  2948               	goto	u897
  2034  014A  0BF7               	decfsz	??_getGSMData,f
  2035  014B  2948               	goto	u897
  2036  014C  3200               	nop2
  2037                           
  2038                           ;main.c: 322: startTimer(1);
  2039  014D  3001               	movlw	1
  2040  014E  00F1               	movwf	startTimer@seconds
  2041  014F  3000               	movlw	0
  2042  0150  00F2               	movwf	startTimer@seconds+1
  2043  0151  3183  2387  3180   	fcall	_startTimer
  2044  0154                     l1092:	
  2045                           ;main.c: 323: while (!timerDone) {
  2046                           
  2047  0154  087B               	movf	_timerDone,w
  2048  0155  1D03               	btfss	3,2
  2049  0156  2961               	goto	l1094
  2050                           
  2051                           ;main.c: 324: if (PIR3bits.RC1IF) {
  2052  0157  014E               	movlb	14	; select bank14
  2053  0158  1E8F               	btfss	15,5	;volatile
  2054  0159  2954               	goto	l1092
  2055                           
  2056                           ;main.c: 325: serialWriteBT(serialReadPeripheral());
  2057  015A  3184  2468  3180   	fcall	_serialReadPeripheral
  2058  015D  3184  248B  3180   	fcall	_serialWriteBT
  2059  0160  2954               	goto	l1092
  2060  0161                     l1094:	
  2061                           
  2062                           ;main.c: 326: }
  2063                           ;main.c: 327: }
  2064                           ;main.c: 329: serialPrintBT("GSM_END\r\n");
  2065  0161  302C               	movlw	low (STR_9| (0+32768))
  2066  0162  00F2               	movwf	serialPrintBT@s
  2067  0163  3084               	movlw	high (STR_9| (0+32768))
  2068  0164  00F3               	movwf	serialPrintBT@s+1
  2069  0165  3183  2344  3180   	fcall	_serialPrintBT
  2070                           
  2071                           ;main.c: 330: _delay((unsigned long)((10)*(32000000/4000.0)));
  2072  0168  3068               	movlw	104
  2073  0169  00F7               	movwf	??_getGSMData
  2074  016A  30E4               	movlw	228
  2075  016B                     u907:	
  2076  016B  0B89               	decfsz	9,f
  2077  016C  296B               	goto	u907
  2078  016D  0BF7               	decfsz	??_getGSMData,f
  2079  016E  296B               	goto	u907
  2080  016F  3200               	nop2
  2081  0170  0008               	return
  2082  0171                     __end_of_getGSMData:	
  2083                           
  2084                           	psect	text8
  2085  032A                     __ptext8:	
  2086 ;; *************** function _serialPrintPeripheral *****************
  2087 ;; Defined at:
  2088 ;;		line 134 in file "main.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  s               2    2[COMMON] PTR unsigned char 
  2091 ;;		 -> waitForCommand@message(30), STR_17(3), STR_16(7), STR_14(5), 
  2092 ;;		 -> STR_8(11), STR_7(9), STR_6(12), STR_3(11), 
  2093 ;;		 -> STR_2(19), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  i               2    5[COMMON] int 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2105 ;;      Params:         2       0       0       0       0       0       0       0
  2106 ;;      Locals:         2       0       0       0       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0       0       0       0
  2108 ;;      Totals:         5       0       0       0       0       0       0       0
  2109 ;;Total ram usage:        5 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    2
  2112 ;; This function calls:
  2113 ;;		_serialWritePeripheral
  2114 ;; This function is called by:
  2115 ;;		_getWiFiData
  2116 ;;		_getGSMData
  2117 ;;		_sendSigfox
  2118 ;;		_getSigfoxData
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _serialPrintPeripheral
  2124  032A                     _serialPrintPeripheral:	
  2125                           
  2126                           ;main.c: 135: int i = 0;
  2127                           
  2128                           ;incstack = 0
  2129                           ; Regs used in _serialPrintPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2130  032A  01F5               	clrf	serialPrintPeripheral@i
  2131  032B  01F6               	clrf	serialPrintPeripheral@i+1
  2132  032C                     l1008:	
  2133                           ;main.c: 136: while (s[i] != '\0') {
  2134                           
  2135  032C  0872               	movf	serialPrintPeripheral@s,w
  2136  032D  0775               	addwf	serialPrintPeripheral@i,w
  2137  032E  0084               	movwf	4
  2138  032F  0873               	movf	serialPrintPeripheral@s+1,w
  2139  0330  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2140  0331  0085               	movwf	5
  2141  0332  0012               	moviw fsr0++
  2142  0333  1903               	btfsc	3,2
  2143  0334  0008               	return
  2144                           
  2145                           ;main.c: 137: serialWritePeripheral(s[i]);
  2146  0335  0872               	movf	serialPrintPeripheral@s,w
  2147  0336  0775               	addwf	serialPrintPeripheral@i,w
  2148  0337  0084               	movwf	4
  2149  0338  0873               	movf	serialPrintPeripheral@s+1,w
  2150  0339  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2151  033A  0085               	movwf	5
  2152  033B  0800               	movf	0,w	;code access
  2153  033C  3184  2483  3183   	fcall	_serialWritePeripheral
  2154                           
  2155                           ;main.c: 138: i++;
  2156  033F  3001               	movlw	1
  2157  0340  07F5               	addwf	serialPrintPeripheral@i,f
  2158  0341  3000               	movlw	0
  2159  0342  3DF6               	addwfc	serialPrintPeripheral@i+1,f
  2160  0343  2B2C               	goto	l1008
  2161  0344                     __end_of_serialPrintPeripheral:	
  2162                           
  2163                           	psect	text9
  2164  0483                     __ptext9:	
  2165 ;; *************** function _serialWritePeripheral *****************
  2166 ;; Defined at:
  2167 ;;		line 128 in file "main.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  c               1    wreg     unsigned char 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  c               1    1[COMMON] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2181 ;;      Params:         0       0       0       0       0       0       0       0
  2182 ;;      Locals:         1       0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0
  2184 ;;      Totals:         1       0       0       0       0       0       0       0
  2185 ;;Total ram usage:        1 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_serialPrintPeripheral
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function _serialWritePeripheral
  2197  0483                     _serialWritePeripheral:	
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _serialWritePeripheral: [wreg]
  2201                           ;serialWritePeripheral@c stored from wreg
  2202  0483  00F1               	movwf	serialWritePeripheral@c
  2203  0484                     l96:	
  2204                           ;main.c: 129: while (!PIR3bits.TX1IF) {
  2205                           
  2206  0484  014E               	movlb	14	; select bank14
  2207  0485  1E0F               	btfss	15,4	;volatile
  2208  0486  2C84               	goto	l96
  2209                           
  2210                           ;main.c: 130: }
  2211                           ;main.c: 131: TX1REG = c;
  2212  0487  0871               	movf	serialWritePeripheral@c,w
  2213  0488  0142               	movlb	2	; select bank2
  2214  0489  009A               	movwf	26	;volatile
  2215  048A  0008               	return
  2216  048B                     __end_of_serialWritePeripheral:	
  2217                           
  2218                           	psect	text10
  2219  021E                     __ptext10:	
  2220 ;; *************** function _getGPSData *****************
  2221 ;; Defined at:
  2222 ;;		line 333 in file "main.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  c               1    9[COMMON] unsigned char 
  2227 ;;  found           1    8[COMMON] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2237 ;;      Params:         0       0       0       0       0       0       0       0
  2238 ;;      Locals:         2       0       0       0       0       0       0       0
  2239 ;;      Temps:          1       0       0       0       0       0       0       0
  2240 ;;      Totals:         3       0       0       0       0       0       0       0
  2241 ;;Total ram usage:        3 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    3
  2244 ;; This function calls:
  2245 ;;		_serialFindPeripheral
  2246 ;;		_serialPrintBT
  2247 ;;		_serialReadPeripheral
  2248 ;;		_serialWriteBT
  2249 ;;		_setActivePeripheral
  2250 ;;		_startTimer
  2251 ;; This function is called by:
  2252 ;;		_waitForCommand
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _getGPSData
  2258  021E                     _getGPSData:	
  2259                           
  2260                           ;main.c: 334: setActivePeripheral(gps);
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _getGPSData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2264  021E  3000               	movlw	0
  2265  021F  3181  2171  3182   	fcall	_setActivePeripheral
  2266                           
  2267                           ;main.c: 335: serialPrintBT("GPS_START\r\n");
  2268  0222  30F4               	movlw	low (STR_10| (0+32768))
  2269  0223  00F2               	movwf	serialPrintBT@s
  2270  0224  3083               	movlw	high (STR_10| (0+32768))
  2271  0225  00F3               	movwf	serialPrintBT@s+1
  2272  0226  3183  2344  3182   	fcall	_serialPrintBT
  2273                           
  2274                           ;main.c: 336: char found = 0;
  2275  0229  01F8               	clrf	getGPSData@found
  2276                           
  2277                           ;main.c: 337: startTimer(3);
  2278  022A  3003               	movlw	3
  2279  022B  00F1               	movwf	startTimer@seconds
  2280  022C  3000               	movlw	0
  2281  022D  00F2               	movwf	startTimer@seconds+1
  2282  022E  3183  2387  3182   	fcall	_startTimer
  2283                           
  2284                           ;main.c: 338: while (!timerDone && !found) {
  2285  0231  2A54               	goto	l1114
  2286  0232                     l188:	
  2287                           
  2288                           ;main.c: 339: if (PIR3bits.RC1IF) {
  2289  0232  014E               	movlb	14	; select bank14
  2290  0233  1E8F               	btfss	15,5	;volatile
  2291  0234  2A54               	goto	l1114
  2292                           
  2293                           ;main.c: 340: if (serialFindPeripheral("$GPGGA,")) {
  2294  0235  307B               	movlw	low (STR_11| (0+32768))
  2295  0236  00F1               	movwf	serialFindPeripheral@s
  2296  0237  3084               	movlw	high (STR_11| (0+32768))
  2297  0238  00F2               	movwf	serialFindPeripheral@s+1
  2298  0239  3182  22D0  3182   	fcall	_serialFindPeripheral
  2299  023C  3A00               	xorlw	0
  2300  023D  1903               	skipnz
  2301  023E  2A54               	goto	l1114
  2302                           
  2303                           ;main.c: 341: char c = 'c';
  2304  023F  3063               	movlw	99
  2305  0240  00F7               	movwf	??_getGPSData
  2306  0241  0877               	movf	??_getGPSData,w
  2307  0242  00F9               	movwf	getGPSData@c
  2308  0243                     l1112:	
  2309                           ;main.c: 342: while (c != '\n') {
  2310                           
  2311  0243  300A               	movlw	10
  2312  0244  0679               	xorwf	getGPSData@c,w
  2313  0245  1903               	btfsc	3,2
  2314  0246  2A52               	goto	l193
  2315                           
  2316                           ;main.c: 343: c = serialReadPeripheral();
  2317  0247  3184  2468  3182   	fcall	_serialReadPeripheral
  2318  024A  00F7               	movwf	??_getGPSData
  2319  024B  0877               	movf	??_getGPSData,w
  2320  024C  00F9               	movwf	getGPSData@c
  2321                           
  2322                           ;main.c: 344: serialWriteBT(c);
  2323  024D  0879               	movf	getGPSData@c,w
  2324  024E  3184  248B  3182   	fcall	_serialWriteBT
  2325  0251  2A43               	goto	l1112
  2326  0252                     l193:	
  2327                           
  2328                           ;main.c: 345: }
  2329                           ;main.c: 346: found = 1;
  2330  0252  01F8               	clrf	getGPSData@found
  2331  0253  0AF8               	incf	getGPSData@found,f
  2332  0254                     l1114:	
  2333  0254  087B               	movf	_timerDone,w
  2334  0255  1903               	btfsc	3,2
  2335  0256  0878               	movf	getGPSData@found,w
  2336  0257  1903               	btfsc	3,2
  2337  0258  2A32               	goto	l188
  2338                           
  2339                           ;main.c: 347: }
  2340                           ;main.c: 348: }
  2341                           ;main.c: 349: }
  2342                           ;main.c: 350: serialPrintBT("GPS_END\r\n");
  2343  0259  3036               	movlw	low (STR_12| (0+32768))
  2344  025A  00F2               	movwf	serialPrintBT@s
  2345  025B  3084               	movlw	high (STR_12| (0+32768))
  2346  025C  00F3               	movwf	serialPrintBT@s+1
  2347  025D  3183  2344  3182   	fcall	_serialPrintBT
  2348                           
  2349                           ;main.c: 351: _delay((unsigned long)((10)*(32000000/4000.0)));
  2350  0260  3068               	movlw	104
  2351  0261  00F7               	movwf	??_getGPSData
  2352  0262  30E4               	movlw	228
  2353  0263                     u917:	
  2354  0263  0B89               	decfsz	9,f
  2355  0264  2A63               	goto	u917
  2356  0265  0BF7               	decfsz	??_getGPSData,f
  2357  0266  2A63               	goto	u917
  2358  0267  3200               	nop2
  2359  0268  0008               	return
  2360  0269                     __end_of_getGPSData:	
  2361                           
  2362                           	psect	text11
  2363  0387                     __ptext11:	
  2364 ;; *************** function _startTimer *****************
  2365 ;; Defined at:
  2366 ;;		line 269 in file "main.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  seconds         2    1[COMMON] int 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2380 ;;      Params:         2       0       0       0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0
  2383 ;;      Totals:         2       0       0       0       0       0       0       0
  2384 ;;Total ram usage:        2 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_getWiFiData
  2391 ;;		_getGSMData
  2392 ;;		_getGPSData
  2393 ;;		_waitForCommand
  2394 ;;		_getSigfoxData
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _startTimer
  2400  0387                     _startTimer:	
  2401                           
  2402                           ;main.c: 272: timerDone = 0;
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _startTimer: [wreg+status,2]
  2406  0387  01FB               	clrf	_timerDone
  2407                           
  2408                           ;main.c: 273: timerSetpoint = seconds;
  2409  0388  0872               	movf	startTimer@seconds+1,w
  2410  0389  0140               	movlb	0	; select bank0
  2411  038A  00E8               	movwf	_timerSetpoint+1
  2412  038B  0871               	movf	startTimer@seconds,w
  2413  038C  00E7               	movwf	_timerSetpoint
  2414                           
  2415                           ;main.c: 274: timerActual = 0;
  2416  038D  01E5               	clrf	_timerActual
  2417  038E  01E6               	clrf	_timerActual+1
  2418                           
  2419                           ;main.c: 276: PIE0bits.TMR0IE = 1;
  2420  038F  014E               	movlb	14	; select bank14
  2421  0390  1696               	bsf	22,5	;volatile
  2422                           
  2423                           ;main.c: 277: T0CON0 = 0b00010000;
  2424  0391  3010               	movlw	16
  2425  0392  014B               	movlb	11	; select bank11
  2426  0393  009E               	movwf	30	;volatile
  2427                           
  2428                           ;main.c: 278: T0CON1 = 0b01000111;
  2429  0394  3047               	movlw	71
  2430  0395  009F               	movwf	31	;volatile
  2431                           
  2432                           ;main.c: 279: T0CON0bits.T0EN = 1;
  2433  0396  179E               	bsf	30,7	;volatile
  2434  0397  0008               	return
  2435  0398                     __end_of_startTimer:	
  2436                           
  2437                           	psect	text12
  2438  0171                     __ptext12:	
  2439 ;; *************** function _setActivePeripheral *****************
  2440 ;; Defined at:
  2441 ;;		line 164 in file "main.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  peri            1    wreg     enum E8210
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  peri            1    1[COMMON] enum E8210
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2455 ;;      Params:         0       0       0       0       0       0       0       0
  2456 ;;      Locals:         1       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0
  2458 ;;      Totals:         1       0       0       0       0       0       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;;		_getWiFiData
  2467 ;;		_getGSMData
  2468 ;;		_getGPSData
  2469 ;;		_sendSigfox
  2470 ;;		_getSigfoxData
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           
  2475                           ;psect for function _setActivePeripheral
  2476  0171                     _setActivePeripheral:	
  2477                           
  2478                           ;incstack = 0
  2479                           ; Regs used in _setActivePeripheral: [wreg-fsr0h+status,2+status,0]
  2480                           ;setActivePeripheral@peri stored from wreg
  2481  0171  00F1               	movwf	setActivePeripheral@peri
  2482                           
  2483                           ;main.c: 173: RC6PPS = 0x00;
  2484  0172  017E               	movlb	62	; select bank62
  2485  0173  01A6               	clrf	38	;volatile
  2486                           
  2487                           ;main.c: 174: RC1PPS = 0x00;
  2488  0174  01A1               	clrf	33	;volatile
  2489                           
  2490                           ;main.c: 175: RA4PPS = 0x00;
  2491  0175  0194               	clrf	20	;volatile
  2492                           
  2493                           ;main.c: 176: RC4PPS = 0x00;
  2494  0176  01A4               	clrf	36	;volatile
  2495                           
  2496                           ;main.c: 179: switch (peri) {
  2497  0177  29B5               	goto	l1000
  2498  0178                     l966:	
  2499                           ;main.c: 180: case sigfox:
  2500                           
  2501                           
  2502                           ;main.c: 181: {
  2503                           ;main.c: 182: RC6PPS = 0x0F;
  2504  0178  300F               	movlw	15
  2505  0179  017E               	movlb	62	; select bank62
  2506  017A  00A6               	movwf	38	;volatile
  2507                           
  2508                           ;main.c: 183: SP1BRG = 207;
  2509  017B  3000               	movlw	0
  2510  017C  0142               	movlb	2	; select bank2
  2511  017D  009C               	movwf	28	;volatile
  2512  017E  30CF               	movlw	207
  2513  017F  009B               	movwf	27	;volatile
  2514                           
  2515                           ;main.c: 184: TRISC3 = 1;
  2516  0180  0140               	movlb	0	; select bank0
  2517  0181  1594               	bsf	20,3	;volatile
  2518                           
  2519                           ;main.c: 185: RX1DTPPSbits.RX1DTPPS = 0x13;
  2520  0182  017D               	movlb	61	; select bank61
  2521  0183  084B               	movf	75,w	;volatile
  2522  0184  39C0               	andlw	-64
  2523  0185  3813               	iorlw	19
  2524  0186  29B3               	goto	L3
  2525  0187                     l974:	
  2526                           ;main.c: 187: }
  2527                           ;main.c: 188: case gsm:
  2528                           
  2529                           ;main.c: 186: break;
  2530                           
  2531                           
  2532                           ;main.c: 189: {
  2533                           ;main.c: 190: RC1PPS = 0x0F;
  2534  0187  300F               	movlw	15
  2535  0188  017E               	movlb	62	; select bank62
  2536  0189  00A1               	movwf	33	;volatile
  2537                           
  2538                           ;main.c: 191: SP1BRG = 16;
  2539  018A  3000               	movlw	0
  2540  018B  0142               	movlb	2	; select bank2
  2541  018C  009C               	movwf	28	;volatile
  2542  018D  3010               	movlw	16
  2543  018E  009B               	movwf	27	;volatile
  2544                           
  2545                           ;main.c: 192: TRISC0 = 1;
  2546  018F  0140               	movlb	0	; select bank0
  2547  0190  1414               	bsf	20,0	;volatile
  2548                           
  2549                           ;main.c: 193: RX1DTPPSbits.RX1DTPPS = 0x10;
  2550  0191  017D               	movlb	61	; select bank61
  2551  0192  084B               	movf	75,w	;volatile
  2552  0193  39C0               	andlw	-64
  2553  0194  3810               	iorlw	16
  2554  0195  29B3               	goto	L3
  2555  0196                     l982:	
  2556                           ;main.c: 195: }
  2557                           ;main.c: 196: case wifi:
  2558                           
  2559                           ;main.c: 194: break;
  2560                           
  2561                           
  2562                           ;main.c: 197: {
  2563                           ;main.c: 198: RA4PPS = 0x0F;
  2564  0196  300F               	movlw	15
  2565  0197  017E               	movlb	62	; select bank62
  2566  0198  0094               	movwf	20	;volatile
  2567                           
  2568                           ;main.c: 199: SP1BRG = 16;
  2569  0199  3000               	movlw	0
  2570  019A  0142               	movlb	2	; select bank2
  2571  019B  009C               	movwf	28	;volatile
  2572  019C  3010               	movlw	16
  2573  019D  009B               	movwf	27	;volatile
  2574                           
  2575                           ;main.c: 200: TRISA5 = 1;
  2576  019E  0140               	movlb	0	; select bank0
  2577  019F  1692               	bsf	18,5	;volatile
  2578                           
  2579                           ;main.c: 201: RX1DTPPSbits.RX1DTPPS = 0x05;
  2580  01A0  017D               	movlb	61	; select bank61
  2581  01A1  084B               	movf	75,w	;volatile
  2582  01A2  39C0               	andlw	-64
  2583  01A3  3805               	iorlw	5
  2584  01A4  29B3               	goto	L3
  2585  01A5                     l990:	
  2586                           ;main.c: 203: }
  2587                           ;main.c: 204: case gps:
  2588                           
  2589                           ;main.c: 202: break;
  2590                           
  2591                           
  2592                           ;main.c: 205: {
  2593                           ;main.c: 206: RC4PPS = 0x0F;
  2594  01A5  300F               	movlw	15
  2595  01A6  017E               	movlb	62	; select bank62
  2596  01A7  00A4               	movwf	36	;volatile
  2597                           
  2598                           ;main.c: 207: SP1BRG = 207;
  2599  01A8  3000               	movlw	0
  2600  01A9  0142               	movlb	2	; select bank2
  2601  01AA  009C               	movwf	28	;volatile
  2602  01AB  30CF               	movlw	207
  2603  01AC  009B               	movwf	27	;volatile
  2604                           
  2605                           ;main.c: 208: TRISC5 = 1;
  2606  01AD  0140               	movlb	0	; select bank0
  2607  01AE  1694               	bsf	20,5	;volatile
  2608                           
  2609                           ;main.c: 209: RX1DTPPSbits.RX1DTPPS = 0x15;
  2610  01AF  017D               	movlb	61	; select bank61
  2611  01B0  084B               	movf	75,w	;volatile
  2612  01B1  39C0               	andlw	-64
  2613  01B2  3815               	iorlw	21
  2614  01B3                     L3:	
  2615  01B3  00CB               	movwf	75	;volatile
  2616                           
  2617                           ;main.c: 211: }
  2618                           ;main.c: 212: }
  2619                           
  2620                           ;main.c: 210: break;
  2621  01B4  29C3               	goto	l125
  2622  01B5                     l1000:	
  2623  01B5  0871               	movf	setActivePeripheral@peri,w
  2624                           
  2625                           ; Switch size 1, requested type "space"
  2626                           ; Number of cases is 4, Range of values is 0 to 3
  2627                           ; switch strategies available:
  2628                           ; Name         Instructions Cycles
  2629                           ; simple_byte           13     7 (average)
  2630                           ; direct_byte           14     6 (fixed)
  2631                           ; jumptable            260     6 (fixed)
  2632                           ;	Chosen strategy is simple_byte
  2633  01B6  3A00               	xorlw	0	; case 0
  2634  01B7  1903               	skipnz
  2635  01B8  29A5               	goto	l990
  2636  01B9  3A01               	xorlw	1	; case 1
  2637  01BA  1903               	skipnz
  2638  01BB  2996               	goto	l982
  2639  01BC  3A03               	xorlw	3	; case 2
  2640  01BD  1903               	skipnz
  2641  01BE  2978               	goto	l966
  2642  01BF  3A01               	xorlw	1	; case 3
  2643  01C0  1903               	skipnz
  2644  01C1  2987               	goto	l974
  2645  01C2  29C3               	goto	l125
  2646  01C3                     l125:	
  2647                           
  2648                           ;main.c: 214: TX1STAbits.BRGH = 1;
  2649  01C3  0142               	movlb	2	; select bank2
  2650  01C4  151E               	bsf	30,2	;volatile
  2651                           
  2652                           ;main.c: 215: TX1STAbits.SYNC = 0;
  2653  01C5  121E               	bcf	30,4	;volatile
  2654                           
  2655                           ;main.c: 216: RC1STAbits.SPEN = 1;
  2656  01C6  179D               	bsf	29,7	;volatile
  2657                           
  2658                           ;main.c: 217: TX1STAbits.TXEN = 1;
  2659  01C7  169E               	bsf	30,5	;volatile
  2660                           
  2661                           ;main.c: 218: RC1STAbits.CREN = 1;
  2662  01C8  161D               	bsf	29,4	;volatile
  2663  01C9  0008               	return
  2664  01CA                     __end_of_setActivePeripheral:	
  2665                           
  2666                           	psect	text13
  2667  0344                     __ptext13:	
  2668 ;; *************** function _serialPrintBT *****************
  2669 ;; Defined at:
  2670 ;;		line 227 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  s               2    2[COMMON] PTR unsigned char 
  2673 ;;		 -> STR_27(14), STR_25(14), STR_23(14), STR_21(14), 
  2674 ;;		 -> STR_19(14), STR_15(13), STR_13(15), STR_12(10), 
  2675 ;;		 -> STR_10(12), STR_9(10), STR_5(12), STR_4(11), 
  2676 ;;		 -> STR_1(13), 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  i               2    5[COMMON] int 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2688 ;;      Params:         2       0       0       0       0       0       0       0
  2689 ;;      Locals:         2       0       0       0       0       0       0       0
  2690 ;;      Temps:          1       0       0       0       0       0       0       0
  2691 ;;      Totals:         5       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        5 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    2
  2695 ;; This function calls:
  2696 ;;		_serialWriteBT
  2697 ;; This function is called by:
  2698 ;;		_getWiFiData
  2699 ;;		_getGSMData
  2700 ;;		_getGPSData
  2701 ;;		_waitForCommand
  2702 ;;		_getSigfoxData
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _serialPrintBT
  2708  0344                     _serialPrintBT:	
  2709                           
  2710                           ;main.c: 228: int i = 0;
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _serialPrintBT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2714  0344  01F5               	clrf	serialPrintBT@i
  2715  0345  01F6               	clrf	serialPrintBT@i+1
  2716  0346                     l1032:	
  2717                           ;main.c: 229: while (s[i] != '\0') {
  2718                           
  2719  0346  0872               	movf	serialPrintBT@s,w
  2720  0347  0775               	addwf	serialPrintBT@i,w
  2721  0348  0084               	movwf	4
  2722  0349  0873               	movf	serialPrintBT@s+1,w
  2723  034A  3D76               	addwfc	serialPrintBT@i+1,w
  2724  034B  0085               	movwf	5
  2725  034C  0012               	moviw fsr0++
  2726  034D  1903               	btfsc	3,2
  2727  034E  0008               	return
  2728                           
  2729                           ;main.c: 230: serialWriteBT(s[i]);
  2730  034F  0872               	movf	serialPrintBT@s,w
  2731  0350  0775               	addwf	serialPrintBT@i,w
  2732  0351  0084               	movwf	4
  2733  0352  0873               	movf	serialPrintBT@s+1,w
  2734  0353  3D76               	addwfc	serialPrintBT@i+1,w
  2735  0354  0085               	movwf	5
  2736  0355  0800               	movf	0,w	;code access
  2737  0356  3184  248B  3183   	fcall	_serialWriteBT
  2738                           
  2739                           ;main.c: 231: i++;
  2740  0359  3001               	movlw	1
  2741  035A  07F5               	addwf	serialPrintBT@i,f
  2742  035B  3000               	movlw	0
  2743  035C  3DF6               	addwfc	serialPrintBT@i+1,f
  2744  035D  2B46               	goto	l1032
  2745  035E                     __end_of_serialPrintBT:	
  2746                           
  2747                           	psect	text14
  2748  048B                     __ptext14:	
  2749 ;; *************** function _serialWriteBT *****************
  2750 ;; Defined at:
  2751 ;;		line 221 in file "main.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  c               1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  c               1    1[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2765 ;;      Params:         0       0       0       0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0
  2768 ;;      Totals:         1       0       0       0       0       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    1
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_serialPrintBT
  2776 ;;		_getWiFiData
  2777 ;;		_getGSMData
  2778 ;;		_getGPSData
  2779 ;;		_getSigfoxData
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _serialWriteBT
  2785  048B                     _serialWriteBT:	
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _serialWriteBT: [wreg]
  2789                           ;serialWriteBT@c stored from wreg
  2790  048B  00F1               	movwf	serialWriteBT@c
  2791  048C                     l132:	
  2792                           ;main.c: 222: while (!PIR3bits.TX2IF) {
  2793                           
  2794  048C  014E               	movlb	14	; select bank14
  2795  048D  1F0F               	btfss	15,6	;volatile
  2796  048E  2C8C               	goto	l132
  2797                           
  2798                           ;main.c: 223: }
  2799                           ;main.c: 224: TX2REG = c;
  2800  048F  0871               	movf	serialWriteBT@c,w
  2801  0490  0154               	movlb	20	; select bank20
  2802  0491  009A               	movwf	26	;volatile
  2803  0492  0008               	return
  2804  0493                     __end_of_serialWriteBT:	
  2805                           
  2806                           	psect	text15
  2807  02D0                     __ptext15:	
  2808 ;; *************** function _serialFindPeripheral *****************
  2809 ;; Defined at:
  2810 ;;		line 152 in file "main.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  s               2    1[COMMON] PTR unsigned char 
  2813 ;;		 -> STR_11(8), 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  i               2    4[COMMON] int 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      unsigned char 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2825 ;;      Params:         2       0       0       0       0       0       0       0
  2826 ;;      Locals:         2       0       0       0       0       0       0       0
  2827 ;;      Temps:          1       0       0       0       0       0       0       0
  2828 ;;      Totals:         5       0       0       0       0       0       0       0
  2829 ;;Total ram usage:        5 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    2
  2832 ;; This function calls:
  2833 ;;		_serialReadPeripheral
  2834 ;; This function is called by:
  2835 ;;		_getGPSData
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function _serialFindPeripheral
  2841  02D0                     _serialFindPeripheral:	
  2842                           
  2843                           ;main.c: 153: int i = 0;
  2844                           
  2845                           ;incstack = 0
  2846                           ; Regs used in _serialFindPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2847  02D0  01F4               	clrf	serialFindPeripheral@i
  2848  02D1  01F5               	clrf	serialFindPeripheral@i+1
  2849  02D2                     l1020:	
  2850                           ;main.c: 154: while (s[i] != '\0') {
  2851                           
  2852  02D2  0871               	movf	serialFindPeripheral@s,w
  2853  02D3  0774               	addwf	serialFindPeripheral@i,w
  2854  02D4  0084               	movwf	4
  2855  02D5  0872               	movf	serialFindPeripheral@s+1,w
  2856  02D6  3D75               	addwfc	serialFindPeripheral@i+1,w
  2857  02D7  0085               	movwf	5
  2858  02D8  0012               	moviw fsr0++
  2859  02D9  1903               	btfsc	3,2
  2860  02DA  2AF0               	goto	l1022
  2861                           
  2862                           ;main.c: 155: if (serialReadPeripheral() == s[i]) {
  2863  02DB  0871               	movf	serialFindPeripheral@s,w
  2864  02DC  0774               	addwf	serialFindPeripheral@i,w
  2865  02DD  0084               	movwf	4
  2866  02DE  0872               	movf	serialFindPeripheral@s+1,w
  2867  02DF  3D75               	addwfc	serialFindPeripheral@i+1,w
  2868  02E0  0085               	movwf	5
  2869  02E1  0800               	movf	0,w	;code access
  2870  02E2  00F3               	movwf	??_serialFindPeripheral
  2871  02E3  3184  2468  3182   	fcall	_serialReadPeripheral
  2872  02E6  0673               	xorwf	??_serialFindPeripheral,w
  2873  02E7  1D03               	skipz
  2874  02E8  2AEE               	goto	l1016
  2875                           
  2876                           ;main.c: 156: i++;
  2877  02E9  3001               	movlw	1
  2878  02EA  07F4               	addwf	serialFindPeripheral@i,f
  2879  02EB  3000               	movlw	0
  2880  02EC  3DF5               	addwfc	serialFindPeripheral@i+1,f
  2881                           
  2882                           ;main.c: 157: } else {
  2883  02ED  2AD2               	goto	l1020
  2884  02EE                     l1016:	
  2885                           
  2886                           ;main.c: 158: return 0;
  2887  02EE  3000               	movlw	0
  2888  02EF  0008               	return
  2889  02F0                     l1022:	
  2890                           
  2891                           ;main.c: 159: }
  2892                           ;main.c: 160: }
  2893                           ;main.c: 161: return 1;
  2894  02F0  3001               	movlw	1
  2895  02F1  0008               	return
  2896  02F2                     __end_of_serialFindPeripheral:	
  2897                           
  2898                           	psect	text16
  2899  0468                     __ptext16:	
  2900 ;; *************** function _serialReadPeripheral *****************
  2901 ;; Defined at:
  2902 ;;		line 142 in file "main.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      unsigned char 
  2909 ;; Registers used:
  2910 ;;		wreg
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2916 ;;      Params:         0       0       0       0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_serialFindPeripheral
  2927 ;;		_getWiFiData
  2928 ;;		_getGSMData
  2929 ;;		_getGPSData
  2930 ;;		_getSigfoxData
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _serialReadPeripheral
  2936  0468                     _serialReadPeripheral:	
  2937  0468                     l108:	
  2938                           ;main.c: 143: while (!PIR3bits.RC1IF) {
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _serialReadPeripheral: [wreg]
  2942                           
  2943  0468  014E               	movlb	14	; select bank14
  2944  0469  1E8F               	btfss	15,5	;volatile
  2945  046A  2C68               	goto	l108
  2946                           
  2947                           ;main.c: 144: }
  2948                           ;main.c: 145: if (1 == RC1STAbits.OERR) {
  2949  046B  0142               	movlb	2	; select bank2
  2950  046C  1C9D               	btfss	29,1	;volatile
  2951  046D  2C70               	goto	l956
  2952                           
  2953                           ;main.c: 146: RC1STAbits.SPEN = 0;
  2954  046E  139D               	bcf	29,7	;volatile
  2955                           
  2956                           ;main.c: 147: RC1STAbits.SPEN = 1;
  2957  046F  179D               	bsf	29,7	;volatile
  2958  0470                     l956:	
  2959                           
  2960                           ;main.c: 148: }
  2961                           ;main.c: 149: return RC1REG;
  2962  0470  0819               	movf	25,w	;volatile
  2963  0471  0008               	return
  2964  0472                     __end_of_serialReadPeripheral:	
  2965                           
  2966                           	psect	text17
  2967  035E                     __ptext17:	
  2968 ;; *************** function _initBTSerial *****************
  2969 ;; Defined at:
  2970 ;;		line 110 in file "main.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2984 ;;      Params:         0       0       0       0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _initBTSerial
  3000  035E                     _initBTSerial:	
  3001                           
  3002                           ;main.c: 115: RB6PPS = 0x11;
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in _initBTSerial: [wreg+status,2+status,0]
  3006  035E  3011               	movlw	17
  3007  035F  017E               	movlb	62	; select bank62
  3008  0360  009E               	movwf	30	;volatile
  3009                           
  3010                           ;main.c: 116: TX2STAbits.BRGH = 1;
  3011  0361  0154               	movlb	20	; select bank20
  3012  0362  151E               	bsf	30,2	;volatile
  3013                           
  3014                           ;main.c: 117: SP2BRG = 16;
  3015  0363  3000               	movlw	0
  3016  0364  009C               	movwf	28	;volatile
  3017  0365  3010               	movlw	16
  3018  0366  009B               	movwf	27	;volatile
  3019                           
  3020                           ;main.c: 118: TX2STAbits.SYNC = 0;
  3021  0367  121E               	bcf	30,4	;volatile
  3022                           
  3023                           ;main.c: 119: RC2STAbits.SPEN = 1;
  3024  0368  179D               	bsf	29,7	;volatile
  3025                           
  3026                           ;main.c: 120: TX2STAbits.TXEN = 1;
  3027  0369  169E               	bsf	30,5	;volatile
  3028                           
  3029                           ;main.c: 123: TRISB5 = 1;
  3030  036A  0140               	movlb	0	; select bank0
  3031  036B  1693               	bsf	19,5	;volatile
  3032                           
  3033                           ;main.c: 124: RX2DTPPSbits.RX2DTPPS = 0x0D;
  3034  036C  017D               	movlb	61	; select bank61
  3035  036D  084D               	movf	77,w	;volatile
  3036  036E  39C0               	andlw	-64
  3037  036F  380D               	iorlw	13
  3038  0370  00CD               	movwf	77	;volatile
  3039                           
  3040                           ;main.c: 125: RC2STAbits.CREN = 1;
  3041  0371  0154               	movlb	20	; select bank20
  3042  0372  161D               	bsf	29,4	;volatile
  3043  0373  0008               	return
  3044  0374                     __end_of_initBTSerial:	
  3045                           
  3046                           	psect	intentry
  3047  0004                     __pintentry:	
  3048 ;; *************** function _timerCount *****************
  3049 ;; Defined at:
  3050 ;;		line 257 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3064 ;;      Params:         0       0       0       0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0
  3066 ;;      Temps:          1       0       0       0       0       0       0       0
  3067 ;;      Totals:         1       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        1 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		Interrupt level 1
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077  0004                     _timerCount:	
  3078                           
  3079                           ;incstack = 0
  3080  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3081                           
  3082                           ; Regs used in _timerCount: [wreg]
  3083  0005  3180               	pagesel	$
  3084  0006  0140               	movlb	0	; select bank0
  3085  0007  087F               	movf	127,w
  3086  0008  00F0               	movwf	??_timerCount
  3087                           
  3088                           ;main.c: 259: if (PIR0bits.TMR0IF) {
  3089  0009  014E               	movlb	14	; select bank14
  3090  000A  1E8C               	btfss	12,5	;volatile
  3091  000B  2813               	goto	i1l161
  3092                           
  3093                           ;main.c: 260: timerActual++;
  3094  000C  3001               	movlw	1
  3095  000D  0140               	movlb	0	; select bank0
  3096  000E  07E5               	addwf	_timerActual,f
  3097  000F  3000               	movlw	0
  3098  0010  3DE6               	addwfc	_timerActual+1,f
  3099                           
  3100                           ;main.c: 261: PIR0bits.TMR0IF = 0;
  3101  0011  014E               	movlb	14	; select bank14
  3102  0012  128C               	bcf	12,5	;volatile
  3103  0013                     i1l161:	
  3104                           
  3105                           ;main.c: 262: }
  3106                           ;main.c: 263: if (timerActual == timerSetpoint) {
  3107  0013  0140               	movlb	0	; select bank0
  3108  0014  0868               	movf	_timerSetpoint+1,w
  3109  0015  0666               	xorwf	_timerActual+1,w
  3110  0016  1D03               	skipz
  3111  0017  281A               	goto	u80_25
  3112  0018  0867               	movf	_timerSetpoint,w
  3113  0019  0665               	xorwf	_timerActual,w
  3114  001A                     u80_25:	
  3115  001A  1D03               	skipz
  3116  001B  2820               	goto	i1l163
  3117                           
  3118                           ;main.c: 264: timerDone = 1;
  3119  001C  01FB               	clrf	_timerDone
  3120  001D  0AFB               	incf	_timerDone,f
  3121                           
  3122                           ;main.c: 265: T0CON0bits.T0EN = 0;
  3123  001E  014B               	movlb	11	; select bank11
  3124  001F  139E               	bcf	30,7	;volatile
  3125  0020                     i1l163:	
  3126  0020  0870               	movf	??_timerCount,w
  3127  0021  0140               	movlb	0	; select bank0
  3128  0022  00FF               	movwf	127
  3129  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3130  0024  0009               	retfie
  3131  0025                     __end_of_timerCount:	
  3132  007E                     btemp	set	126	;btemp
  3133  007E                     int$flags	set	126
  3134  007E                     wtemp0	set	126


Data Sizes:
    Strings     246
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     69      73
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_26(CODE[13]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_24(CODE[10]), STR_22(CODE[11]), STR_20(CODE[10]), STR_18(CODE[10]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    waitForCommand@p	PTR unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    sendSigfox@hexMessage	PTR unsigned char  size(1) Largest target is 30
		 -> waitForCommand@message(BANK0[30]), 

    serialPrintBT@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_27(CODE[14]), STR_25(CODE[14]), STR_23(CODE[14]), STR_21(CODE[14]), 
		 -> STR_19(CODE[14]), STR_15(CODE[13]), STR_13(CODE[15]), STR_12(CODE[10]), 
		 -> STR_10(CODE[12]), STR_9(CODE[10]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_1(CODE[13]), 

    serialFindPeripheral@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[8]), 

    serialPrintPeripheral@s	PTR unsigned char  size(2) Largest target is 30
		 -> waitForCommand@message(BANK0[30]), STR_17(CODE[3]), STR_16(CODE[7]), STR_14(CODE[5]), 
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[12]), STR_3(CODE[11]), 
		 -> STR_2(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_waitForCommand
    _waitForCommand->_getGPSData
    _sendSigfox->_serialPrintPeripheral
    _getWiFiData->_serialPrintBT
    _getWiFiData->_serialPrintPeripheral
    _getGSMData->_serialPrintBT
    _getGSMData->_serialPrintPeripheral
    _serialPrintPeripheral->_serialWritePeripheral
    _getGPSData->_serialPrintBT
    _serialPrintBT->_serialWriteBT

Critical Paths under _timerCount in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_waitForCommand

Critical Paths under _timerCount in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timerCount in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timerCount in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timerCount in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timerCount in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timerCount in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timerCount in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7844
                                             67 BANK0      2     2      0
                       _initBTSerial
                _setActivePeripheral
                     _waitForCommand
 ---------------------------------------------------------------------------------
 (1) _waitForCommand                                      68    68      0    7822
                                             10 COMMON     1     1      0
                                              0 BANK0     67    67      0
                         _getGPSData
                         _getGSMData
                        _getWiFiData
                         _sendSigfox
                      _serialPrintBT
                       _serialReadBT
                         _startTimer
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     267
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     411
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _serialReadBT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sendSigfox                                           1     1      0     660
                                              7 COMMON     1     1      0
              _serialPrintPeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _getWiFiData                                          2     2      0    1774
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _getGSMData                                           2     2      0    1774
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (3) _serialPrintPeripheral                                5     3      2     589
                                              2 COMMON     5     3      2
              _serialWritePeripheral
 ---------------------------------------------------------------------------------
 (4) _serialWritePeripheral                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getGPSData                                           3     3      0    1398
                                              7 COMMON     3     3      0
               _serialFindPeripheral
                      _serialPrintBT
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           2     0      2     340
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _setActivePeripheral                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialPrintBT                                        5     3      2     801
                                              2 COMMON     5     3      2
                      _serialWriteBT
 ---------------------------------------------------------------------------------
 (3) _serialWriteBT                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serialFindPeripheral                                 5     3      2     143
                                              1 COMMON     5     3      2
               _serialReadPeripheral
 ---------------------------------------------------------------------------------
 (3) _serialReadPeripheral                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBTSerial                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timerCount                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initBTSerial
   _setActivePeripheral
   _waitForCommand
     _getGPSData
       _serialFindPeripheral
         _serialReadPeripheral
       _serialPrintBT
         _serialWriteBT
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getGSMData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getWiFiData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _sendSigfox
       _serialPrintPeripheral
         _serialWritePeripheral
       _setActivePeripheral
     _serialPrintBT
       _serialWriteBT
     _serialReadBT
     _startTimer
     _strcmp
     _strncmp

 _timerCount (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      55       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     45      49       6       91.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      55      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Apr 10 15:37:22 2018

                   __CFG_CP$OFF 0000                              l96 0484                     __CFG_LVP$ON 0000  
                           l210 0031                             l108 0468                             l132 048C  
                           l125 01C3                             l144 045E                             l193 0252  
                           l188 0232                             l956 0470                             l990 01A5  
                           l982 0196                             l974 0187                             l966 0178  
                           u907 016B                             u917 0263                             u837 02FE  
                           u847 01E1                             u857 01F2                             u867 0218  
                           u877 0111                             u887 0122                             u897 0148  
         serialFindPeripheral@i 0074           serialFindPeripheral@s 0071            sendSigfox@hexMessage 0077  
                  __CFG_BORV$LO 0000                             wreg 0009                   __CFG_BBEN$OFF 0000  
                  __CFG_ZCD$OFF 0000                            l1000 01B5                            l1020 02D2  
                          l1022 02F0                            l1016 02EE                            l1032 0346  
                          l1112 0243                            l1008 032C                            l1200 00EA  
                          l1114 0254                            l1132 02CA                            l1126 02AB  
                          l1142 0286                            l1150 026A                            l1064 0201  
                          l1048 0466                            l1128 02B3                            l1152 02A6  
                          l1082 0131                            l1066 020E                            l1146 029D  
                          l1092 0154                            l1084 013E                            l1094 0161  
                          l1182 009C                            l1174 0070                            l1166 003E  
                          l1168 0054                            l1264 030C                            l1186 00B8  
                          l1178 0086                            l1198 00CF                            STR_1 03C2  
                          STR_2 0374                            STR_3 0421                            STR_4 040B  
                          STR_5 03E8                            STR_6 03DC                            STR_7 0472  
                          STR_8 0400                            STR_9 042C                   __CFG_FCMEN$ON 0000  
  __end_of_serialFindPeripheral 02F2                            _main 02F2                            fsr0h 0005  
                          fsr1h 0007                            indf0 0000                            fsr0l 0004  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0025                   __CFG_CSWEN$ON 0000  
                 __CFG_MCLRE$ON 0000                           ?_main 0070                           STR_10 03F4  
                         STR_11 047B                           STR_20 044A                           STR_12 0436  
                         STR_21 03A7                           STR_13 0398                           STR_14 049A  
                         STR_22 0416                           STR_23 03A7                           STR_15 03B5  
                         STR_16 0493                           STR_24 0440                           STR_17 0384  
                         STR_25 03A7                   __CFG_WDTE$OFF 0000                           STR_18 0454  
                         STR_26 03CF                           STR_27 03A7                           STR_19 03A7  
                 ?_initBTSerial 0070                           i1l161 0013                           i1l163 0020  
                         u80_25 001A    __size_of_setActivePeripheral 0059                   __CFG_WRTB$OFF 0000  
                 __CFG_WRTC$OFF 0000                           status 0003                           wtemp0 007E  
               __end_of_strncmp 02A9                 __initialization 0027            _serialReadPeripheral 0468  
                  __end_of_main 0310                  __CFG_SAFEN$OFF 0000         ??_serialPrintPeripheral 0074  
                ??_initBTSerial 0071                          ??_main 0063            __size_of_getWiFiData 0054  
                        _ANSELA 1F38                          _ANSELB 1F43                          _ANSELC 1F4E  
                        _T0CON0 059E                          _T0CON1 059F                          _RC1REG 0119  
                        _RC2REG 0A19                          _RA4PPS 1F14                          _RC1PPS 1F21  
                        _RB6PPS 1F1E                          _RC4PPS 1F24                          _RC6PPS 1F26  
                __CFG_WDTCCS$SC 0000                          _SP1BRG 011B                          _SP2BRG 0A1B  
       setActivePeripheral@peri 0071                          _TX1REG 011A                          _TX2REG 0A1A  
                        _TRISC0 00A0                          _TRISA5 0095                          _TRISB5 009D  
                        _TRISC3 00A3                          _TRISC5 00A5                  __CFG_PWRTE$OFF 0000  
           waitForCommand@i_435 0060           ?_serialReadPeripheral 0070                 getGPSData@found 0078  
                __CFG_STVREN$ON 0000                          _strcmp 02A9            _serialFindPeripheral 02D0  
       __size_of_waitForCommand 00C9                       ??_strncmp 0075         __end_of__initialization 002D  
         __end_of_serialPrintBT 035E  __size_of_serialWritePeripheral 0008           __end_of_serialWriteBT 0493  
 __end_of_serialWritePeripheral 048B                  __pcstackCOMMON 0070           ?_serialFindPeripheral 0071  
                    __pbssBANK0 0065                      _getGSMData 00FA                      _getGPSData 021E  
          __end_of_initBTSerial 0374          ??_serialReadPeripheral 0071             _setActivePeripheral 0171  
        serialPrintPeripheral@i 0075          serialPrintPeripheral@s 0072                      __pmaintext 02F2  
               __CFG_PPS1WAY$ON 0000                      __pintentry 0004             __CFG_RSTOSC$HFINT32 0000  
                       ?_strcmp 0071            ?_setActivePeripheral 0070                   ?_serialReadBT 0070  
        ??_serialFindPeripheral 0073                         __ptext1 0031                         __ptext2 0269  
                       __ptext3 02A9                         __ptext4 045E                         __ptext5 0310  
                       __ptext6 01CA                         __ptext7 00FA                         __ptext8 032A  
                       __ptext9 0483  __size_of_serialPrintPeripheral 001A   __end_of_serialPrintPeripheral 0344  
                _waitForCommand 0031                 __CFG_WRTAPP$OFF 0000                 __size_of_strcmp 0027  
         ??_setActivePeripheral 0071                 __CFG_WRTSAF$OFF 0000                         _strncmp 0269  
          end_of_initialization 002D                      _sendSigfox 0310                     ?_getGPSData 0070  
                   ?_getGSMData 0070                  ??_serialReadBT 0071                  serialPrintBT@i 0075  
                serialPrintBT@s 0072                      _timerCount 0004          __end_of_waitForCommand 00FA  
                       strcmp@r 0074           __CFG_WDTCPS$WDTCPS_31 0000                  serialWriteBT@c 0071  
                 ??_getWiFiData 0077           __size_of_initBTSerial 0016                __CFG_FEXTOSC$OFF 0000  
                    _startTimer 0387                 ?_waitForCommand 0070             __size_of_getGPSData 004B  
           __size_of_getGSMData 0077                    _initBTSerial 035E                  __end_of_strcmp 02D0  
           start_initialization 0027             __end_of_getWiFiData 021E                     ?_sendSigfox 0070  
              __CFG_LPBOREN$OFF 0000           _serialWritePeripheral 0483                     ?_timerCount 0070  
                      ??_strcmp 0073            __end_of_serialReadBT 0468                     __pbssCOMMON 007B  
        __size_of_serialPrintBT 001A                       ___latbits 0001                   __pcstackBANK0 0020  
        __size_of_serialWriteBT 0008                     ?_startTimer 0071   __size_of_serialReadPeripheral 000A  
           __size_of_sendSigfox 001A                     _getWiFiData 01CA                        ?_strncmp 0071  
        serialWritePeripheral@c 0071                    ??_getGPSData 0077                    ??_getGSMData 0077  
           __size_of_timerCount 0021                        _PIE0bits 0716                   _serialPrintBT 0344  
                      _PIR0bits 070C                        _PIR3bits 070F                   _serialWriteBT 048B  
        ?_serialWritePeripheral 0070               __CFG_BBSIZE$BB512 0000                       _timerDone 007B  
   __end_of_setActivePeripheral 01CA             __size_of_startTimer 0011                    _RX1DTPPSbits 1ECB  
 __size_of_serialFindPeripheral 0022              __end_of_getGPSData 0269              __end_of_getGSMData 0171  
             startTimer@seconds 0071                 waitForCommand@i 005E                 waitForCommand@p 0062  
         _serialPrintPeripheral 032A                    _RX2DTPPSbits 1ECD                  ?_serialPrintBT 0072  
                ?_serialWriteBT 0070                ??_waitForCommand 007A           __size_of_serialReadBT 000A  
         waitForCommand@command 003E                     getGPSData@c 0079           waitForCommand@message 0020  
                    _T0CON0bits 059E                        __ptext10 021E                        __ptext11 0387  
                      __ptext12 0171                        __ptext13 0344                        __ptext14 048B  
                      __ptext15 02D0                        __ptext16 0468                        __ptext17 035E  
                  ??_sendSigfox 0077                __size_of_strncmp 0040                   __size_of_main 001E  
                    strncmp@len 0073                   _timerSetpoint 0067                    _serialReadBT 045E  
          __CFG_WDTCWS$WDTCWS_7 0000                      _RC1STAbits 011D                      _RC2STAbits 0A1D  
                      int$flags 007E                    ??_timerCount 0070              __end_of_sendSigfox 032A  
        ?_serialPrintPeripheral 0072                      _INTCONbits 000B                  __pstringtext10 0400  
                __pstringtext11 040B                  __pstringtext20 047B                  __pstringtext12 0416  
                __pstringtext21 0493                  __pstringtext13 0421                  __pstringtext22 049A  
                __pstringtext14 042C                  __pstringtext23 0000                  __pstringtext15 0436  
                __pstringtext16 0440                  __pstringtext17 044A                  __pstringtext18 0454  
                __pstringtext19 0472                    ??_startTimer 0073                        intlevel1 0000  
               ??_serialPrintBT 0074              __end_of_timerCount 0025               __CFG_CLKOUTEN$OFF 0000  
               ??_serialWriteBT 0071                       strncmp@s1 0077                       strncmp@s2 0071  
            __end_of_startTimer 0398                   __pstringtext1 0374                   __pstringtext2 0398  
                 __pstringtext3 03A7                   __pstringtext4 03B5                   __pstringtext5 03C2  
                 __pstringtext6 03CF                   __pstringtext7 03DC                   __pstringtext8 03E8  
                 __pstringtext9 03F4                    ?_getWiFiData 0070                     _timerActual 0065  
                      strcmp@s1 0075                        strcmp@s2 0071    __end_of_serialReadPeripheral 0472  
                    _TX1STAbits 011E                      _TX2STAbits 0A1E         ??_serialWritePeripheral 0071  
