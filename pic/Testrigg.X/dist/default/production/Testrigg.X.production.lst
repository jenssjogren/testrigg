

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed May 02 17:36:31 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F15344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	stringtext15,global,class=STRCODE,delta=2
    19                           	psect	stringtext16,global,class=STRCODE,delta=2
    20                           	psect	stringtext17,global,class=STRCODE,delta=2
    21                           	psect	stringtext18,global,class=STRCODE,delta=2
    22                           	psect	stringtext19,global,class=STRCODE,delta=2
    23                           	psect	stringtext20,global,class=STRCODE,delta=2
    24                           	psect	stringtext21,global,class=STRCODE,delta=2
    25                           	psect	stringtext22,global,class=STRCODE,delta=2
    26                           	psect	stringtext23,global,class=STRCODE,delta=2
    27                           	psect	stringtext24,global,class=STRCODE,delta=2
    28                           	psect	stringtext25,global,class=STRCODE,delta=2
    29                           	psect	stringtext26,global,class=STRCODE,delta=2
    30                           	psect	stringtext27,global,class=STRCODE,delta=2
    31                           	psect	stringtext28,global,class=STRCODE,delta=2
    32                           	psect	stringtext29,global,class=STRCODE,delta=2
    33                           	psect	stringtext30,global,class=STRCODE,delta=2
    34                           	psect	stringtext31,global,class=STRCODE,delta=2
    35                           	psect	cinit,global,class=CODE,merge=1,delta=2
    36                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    39                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    40                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    41                           	psect	text1,local,class=CODE,merge=1,delta=2
    42                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text4,local,class=CODE,merge=1,delta=2
    45                           	psect	text5,local,class=CODE,merge=1,delta=2
    46                           	psect	text6,local,class=CODE,merge=1,delta=2
    47                           	psect	text7,local,class=CODE,merge=1,delta=2
    48                           	psect	text8,local,class=CODE,merge=1,delta=2
    49                           	psect	text9,local,class=CODE,merge=1,delta=2
    50                           	psect	text10,local,class=CODE,merge=1,delta=2
    51                           	psect	text11,local,class=CODE,merge=1,delta=2
    52                           	psect	text12,local,class=CODE,merge=1,delta=2
    53                           	psect	text13,local,class=CODE,merge=1,delta=2
    54                           	psect	text14,local,class=CODE,merge=1,delta=2
    55                           	psect	text15,local,class=CODE,merge=1,delta=2
    56                           	psect	text16,local,class=CODE,merge=1,delta=2
    57                           	psect	text17,local,class=CODE,merge=1,delta=2
    58                           	psect	text18,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 1.44
    63                           ; Generated 14/09/2017 GMT
    64                           ; 
    65                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F15344 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0119                     	;# 
   124  0119                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011A                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011C                     	;# 
   135  011C                     	;# 
   136  011C                     	;# 
   137  011D                     	;# 
   138  011D                     	;# 
   139  011D                     	;# 
   140  011E                     	;# 
   141  011E                     	;# 
   142  011E                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  018F                     	;# 
   152  0190                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  020C                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  020E                     	;# 
   159  020F                     	;# 
   160  020F                     	;# 
   161  0210                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  028C                     	;# 
   166  028C                     	;# 
   167  028D                     	;# 
   168  028D                     	;# 
   169  028E                     	;# 
   170  028F                     	;# 
   171  0290                     	;# 
   172  0291                     	;# 
   173  030C                     	;# 
   174  030C                     	;# 
   175  030D                     	;# 
   176  030E                     	;# 
   177  030F                     	;# 
   178  0310                     	;# 
   179  0310                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0316                     	;# 
   186  0318                     	;# 
   187  0319                     	;# 
   188  031A                     	;# 
   189  031C                     	;# 
   190  031D                     	;# 
   191  031E                     	;# 
   192  038C                     	;# 
   193  038D                     	;# 
   194  038E                     	;# 
   195  058C                     	;# 
   196  058C                     	;# 
   197  058D                     	;# 
   198  058E                     	;# 
   199  058F                     	;# 
   200  058F                     	;# 
   201  0590                     	;# 
   202  0591                     	;# 
   203  0592                     	;# 
   204  0593                     	;# 
   205  059C                     	;# 
   206  059C                     	;# 
   207  059D                     	;# 
   208  059D                     	;# 
   209  059E                     	;# 
   210  059F                     	;# 
   211  060C                     	;# 
   212  060D                     	;# 
   213  060E                     	;# 
   214  060F                     	;# 
   215  0610                     	;# 
   216  0611                     	;# 
   217  0612                     	;# 
   218  0613                     	;# 
   219  0614                     	;# 
   220  070C                     	;# 
   221  070D                     	;# 
   222  070E                     	;# 
   223  070F                     	;# 
   224  0710                     	;# 
   225  0711                     	;# 
   226  0712                     	;# 
   227  0713                     	;# 
   228  0716                     	;# 
   229  0717                     	;# 
   230  0718                     	;# 
   231  0719                     	;# 
   232  071A                     	;# 
   233  071B                     	;# 
   234  071C                     	;# 
   235  071D                     	;# 
   236  0796                     	;# 
   237  0797                     	;# 
   238  0798                     	;# 
   239  0799                     	;# 
   240  079A                     	;# 
   241  079B                     	;# 
   242  080C                     	;# 
   243  080D                     	;# 
   244  080E                     	;# 
   245  080F                     	;# 
   246  0810                     	;# 
   247  0811                     	;# 
   248  0812                     	;# 
   249  0813                     	;# 
   250  0814                     	;# 
   251  081A                     	;# 
   252  081A                     	;# 
   253  081B                     	;# 
   254  081C                     	;# 
   255  081C                     	;# 
   256  081D                     	;# 
   257  081E                     	;# 
   258  081F                     	;# 
   259  088C                     	;# 
   260  088D                     	;# 
   261  088E                     	;# 
   262  088F                     	;# 
   263  0890                     	;# 
   264  0891                     	;# 
   265  0892                     	;# 
   266  0893                     	;# 
   267  0895                     	;# 
   268  0896                     	;# 
   269  090C                     	;# 
   270  090E                     	;# 
   271  090F                     	;# 
   272  091F                     	;# 
   273  098F                     	;# 
   274  098F                     	;# 
   275  0990                     	;# 
   276  0991                     	;# 
   277  0992                     	;# 
   278  0993                     	;# 
   279  0994                     	;# 
   280  0995                     	;# 
   281  0996                     	;# 
   282  0997                     	;# 
   283  0A19                     	;# 
   284  0A19                     	;# 
   285  0A1A                     	;# 
   286  0A1A                     	;# 
   287  0A1B                     	;# 
   288  0A1B                     	;# 
   289  0A1B                     	;# 
   290  0A1C                     	;# 
   291  0A1C                     	;# 
   292  0A1D                     	;# 
   293  0A1D                     	;# 
   294  0A1E                     	;# 
   295  0A1E                     	;# 
   296  0A1F                     	;# 
   297  0A1F                     	;# 
   298  0A1F                     	;# 
   299  1E0F                     	;# 
   300  1E10                     	;# 
   301  1E11                     	;# 
   302  1E12                     	;# 
   303  1E13                     	;# 
   304  1E14                     	;# 
   305  1E15                     	;# 
   306  1E16                     	;# 
   307  1E17                     	;# 
   308  1E18                     	;# 
   309  1E19                     	;# 
   310  1E1A                     	;# 
   311  1E1B                     	;# 
   312  1E1C                     	;# 
   313  1E1D                     	;# 
   314  1E1E                     	;# 
   315  1E1F                     	;# 
   316  1E20                     	;# 
   317  1E21                     	;# 
   318  1E22                     	;# 
   319  1E23                     	;# 
   320  1E24                     	;# 
   321  1E25                     	;# 
   322  1E26                     	;# 
   323  1E27                     	;# 
   324  1E28                     	;# 
   325  1E29                     	;# 
   326  1E2A                     	;# 
   327  1E2B                     	;# 
   328  1E2C                     	;# 
   329  1E2D                     	;# 
   330  1E2E                     	;# 
   331  1E2F                     	;# 
   332  1E30                     	;# 
   333  1E31                     	;# 
   334  1E32                     	;# 
   335  1E33                     	;# 
   336  1E34                     	;# 
   337  1E35                     	;# 
   338  1E36                     	;# 
   339  1E37                     	;# 
   340  1E8F                     	;# 
   341  1E90                     	;# 
   342  1E91                     	;# 
   343  1E92                     	;# 
   344  1E93                     	;# 
   345  1E9C                     	;# 
   346  1EA1                     	;# 
   347  1EA2                     	;# 
   348  1EB1                     	;# 
   349  1EBB                     	;# 
   350  1EBC                     	;# 
   351  1EBD                     	;# 
   352  1EBE                     	;# 
   353  1EC3                     	;# 
   354  1EC5                     	;# 
   355  1EC6                     	;# 
   356  1EC7                     	;# 
   357  1ECB                     	;# 
   358  1ECC                     	;# 
   359  1ECD                     	;# 
   360  1ECE                     	;# 
   361  1F10                     	;# 
   362  1F11                     	;# 
   363  1F12                     	;# 
   364  1F13                     	;# 
   365  1F14                     	;# 
   366  1F15                     	;# 
   367  1F1C                     	;# 
   368  1F1D                     	;# 
   369  1F1E                     	;# 
   370  1F1F                     	;# 
   371  1F20                     	;# 
   372  1F21                     	;# 
   373  1F22                     	;# 
   374  1F23                     	;# 
   375  1F24                     	;# 
   376  1F25                     	;# 
   377  1F26                     	;# 
   378  1F27                     	;# 
   379  1F38                     	;# 
   380  1F39                     	;# 
   381  1F3A                     	;# 
   382  1F3B                     	;# 
   383  1F3C                     	;# 
   384  1F3D                     	;# 
   385  1F3E                     	;# 
   386  1F3F                     	;# 
   387  1F43                     	;# 
   388  1F44                     	;# 
   389  1F45                     	;# 
   390  1F46                     	;# 
   391  1F47                     	;# 
   392  1F48                     	;# 
   393  1F49                     	;# 
   394  1F4A                     	;# 
   395  1F4E                     	;# 
   396  1F4F                     	;# 
   397  1F50                     	;# 
   398  1F51                     	;# 
   399  1F52                     	;# 
   400  1F53                     	;# 
   401  1F54                     	;# 
   402  1F55                     	;# 
   403  1FE4                     	;# 
   404  1FE5                     	;# 
   405  1FE6                     	;# 
   406  1FE7                     	;# 
   407  1FE8                     	;# 
   408  1FE8                     	;# 
   409  1FE9                     	;# 
   410  1FEA                     	;# 
   411  1FEA                     	;# 
   412  1FEB                     	;# 
   413  1FED                     	;# 
   414  1FEE                     	;# 
   415  1FEF                     	;# 
   416  000B                     _INTCONbits	set	11
   417  00A5                     _TRISC5	set	165
   418  0095                     _TRISA5	set	149
   419  00A0                     _TRISC0	set	160
   420  00A3                     _TRISC3	set	163
   421  009D                     _TRISB5	set	157
   422  00CF                     _LATB7	set	207
   423  009F                     _TRISB7	set	159
   424  011B                     _SP1BRG	set	283
   425  011E                     _TX1STAbits	set	286
   426  0119                     _RC1REG	set	281
   427  011D                     _RC1STAbits	set	285
   428  011A                     _TX1REG	set	282
   429  059F                     _T0CON1	set	1439
   430  059E                     _T0CON0	set	1438
   431  059E                     _T0CON0bits	set	1438
   432  0716                     _PIE0bits	set	1814
   433  070C                     _PIR0bits	set	1804
   434  070F                     _PIR3bits	set	1807
   435  0A1B                     _SP2BRG	set	2587
   436  0A19                     _RC2REG	set	2585
   437  0A1A                     _TX2REG	set	2586
   438  0A1D                     _RC2STAbits	set	2589
   439  0A1E                     _TX2STAbits	set	2590
   440  1ECB                     _RX1DTPPSbits	set	7883
   441  1ECD                     _RX2DTPPSbits	set	7885
   442  1F24                     _RC4PPS	set	7972
   443  1F14                     _RA4PPS	set	7956
   444  1F21                     _RC1PPS	set	7969
   445  1F26                     _RC6PPS	set	7974
   446  1F1E                     _RB6PPS	set	7966
   447  1F4E                     _ANSELC	set	8014
   448  1F43                     _ANSELB	set	8003
   449  1F38                     _ANSELA	set	7992
   450                           
   451                           	psect	stringtext1
   452  041B                     __pstringtext1:	
   453  041B                     STR_28:	
   454  041B  3447               	retlw	71	;'G'
   455  041C  3445               	retlw	69	;'E'
   456  041D  3454               	retlw	84	;'T'
   457  041E  345F               	retlw	95	;'_'
   458  041F  3441               	retlw	65	;'A'
   459  0420  344C               	retlw	76	;'L'
   460  0421  344C               	retlw	76	;'L'
   461  0422  345F               	retlw	95	;'_'
   462  0423  3453               	retlw	83	;'S'
   463  0424  3445               	retlw	69	;'E'
   464  0425  344E               	retlw	78	;'N'
   465  0426  3444               	retlw	68	;'D'
   466  0427  345F               	retlw	95	;'_'
   467  0428  3453               	retlw	83	;'S'
   468  0429  3449               	retlw	73	;'I'
   469  042A  3447               	retlw	71	;'G'
   470  042B  3446               	retlw	70	;'F'
   471  042C  344F               	retlw	79	;'O'
   472  042D  3458               	retlw	88	;'X'
   473  042E  340D               	retlw	13
   474  042F  340A               	retlw	10
   475  0430  3400               	retlw	0
   476                           
   477                           	psect	stringtext2
   478  0447                     __pstringtext2:	
   479  0447                     STR_2:	
   480  0447  3441               	retlw	65	;'A'
   481  0448  3454               	retlw	84	;'T'
   482  0449  342B               	retlw	43	;'+'
   483  044A  3443               	retlw	67	;'C'
   484  044B  3457               	retlw	87	;'W'
   485  044C  344C               	retlw	76	;'L'
   486  044D  3441               	retlw	65	;'A'
   487  044E  3450               	retlw	80	;'P'
   488  044F  344F               	retlw	79	;'O'
   489  0450  3450               	retlw	80	;'P'
   490  0451  3454               	retlw	84	;'T'
   491  0452  343D               	retlw	61	;'='
   492  0453  3431               	retlw	49	;'1'
   493  0454  342C               	retlw	44	;','
   494  0455  3431               	retlw	49	;'1'
   495  0456  3432               	retlw	50	;'2'
   496  0457  340D               	retlw	13
   497  0458  340A               	retlw	10
   498  0459  3400               	retlw	0
   499                           
   500                           	psect	stringtext3
   501  046B                     __pstringtext3:	
   502  046B                     STR_29:	
   503  046B  3430               	retlw	48	;'0'
   504  046C  3430               	retlw	48	;'0'
   505  046D  3430               	retlw	48	;'0'
   506  046E  3430               	retlw	48	;'0'
   507  046F  3430               	retlw	48	;'0'
   508  0470  3430               	retlw	48	;'0'
   509  0471  3430               	retlw	48	;'0'
   510  0472  3430               	retlw	48	;'0'
   511  0473  3430               	retlw	48	;'0'
   512  0474  3430               	retlw	48	;'0'
   513  0475  3430               	retlw	48	;'0'
   514  0476  3430               	retlw	48	;'0'
   515  0477  340D               	retlw	13
   516  0478  340A               	retlw	10
   517  0479  3400               	retlw	0
   518                           
   519                           	psect	stringtext4
   520  047A                     __pstringtext4:	
   521  047A                     STR_13:	
   522  047A  3453               	retlw	83	;'S'
   523  047B  3449               	retlw	73	;'I'
   524  047C  3447               	retlw	71	;'G'
   525  047D  3446               	retlw	70	;'F'
   526  047E  344F               	retlw	79	;'O'
   527  047F  3458               	retlw	88	;'X'
   528  0480  345F               	retlw	95	;'_'
   529  0481  3453               	retlw	83	;'S'
   530  0482  3454               	retlw	84	;'T'
   531  0483  3441               	retlw	65	;'A'
   532  0484  3452               	retlw	82	;'R'
   533  0485  3454               	retlw	84	;'T'
   534  0486  340D               	retlw	13
   535  0487  340A               	retlw	10
   536  0488  3400               	retlw	0
   537                           
   538                           	psect	stringtext5
   539  0489                     __pstringtext5:	
   540  0489                     STR_23:	
   541  0489  344D               	retlw	77	;'M'
   542  048A  3445               	retlw	69	;'E'
   543  048B  3453               	retlw	83	;'S'
   544  048C  3453               	retlw	83	;'S'
   545  048D  3441               	retlw	65	;'A'
   546  048E  3447               	retlw	71	;'G'
   547  048F  3445               	retlw	69	;'E'
   548  0490  345F               	retlw	95	;'_'
   549  0491  3445               	retlw	69	;'E'
   550  0492  344E               	retlw	78	;'N'
   551  0493  3444               	retlw	68	;'D'
   552  0494  340D               	retlw	13
   553  0495  340A               	retlw	10
   554  0496  3400               	retlw	0
   555                           
   556                           	psect	stringtext6
   557  0497                     __pstringtext6:	
   558  0497                     STR_15:	
   559  0497  3453               	retlw	83	;'S'
   560  0498  3449               	retlw	73	;'I'
   561  0499  3447               	retlw	71	;'G'
   562  049A  3446               	retlw	70	;'F'
   563  049B  344F               	retlw	79	;'O'
   564  049C  3458               	retlw	88	;'X'
   565  049D  345F               	retlw	95	;'_'
   566  049E  3445               	retlw	69	;'E'
   567  049F  344E               	retlw	78	;'N'
   568  04A0  3444               	retlw	68	;'D'
   569  04A1  340D               	retlw	13
   570  04A2  340A               	retlw	10
   571  04A3  3400               	retlw	0
   572                           
   573                           	psect	stringtext7
   574  04A4                     __pstringtext7:	
   575  04A4                     STR_1:	
   576  04A4  3457               	retlw	87	;'W'
   577  04A5  3449               	retlw	73	;'I'
   578  04A6  3446               	retlw	70	;'F'
   579  04A7  3449               	retlw	73	;'I'
   580  04A8  345F               	retlw	95	;'_'
   581  04A9  3453               	retlw	83	;'S'
   582  04AA  3454               	retlw	84	;'T'
   583  04AB  3441               	retlw	65	;'A'
   584  04AC  3452               	retlw	82	;'R'
   585  04AD  3454               	retlw	84	;'T'
   586  04AE  340D               	retlw	13
   587  04AF  340A               	retlw	10
   588  04B0  3400               	retlw	0
   589                           
   590                           	psect	stringtext8
   591  04B1                     __pstringtext8:	
   592  04B1                     STR_33:	
   593  04B1  3453               	retlw	83	;'S'
   594  04B2  3445               	retlw	69	;'E'
   595  04B3  344E               	retlw	78	;'N'
   596  04B4  3444               	retlw	68	;'D'
   597  04B5  345F               	retlw	95	;'_'
   598  04B6  3453               	retlw	83	;'S'
   599  04B7  3449               	retlw	73	;'I'
   600  04B8  3447               	retlw	71	;'G'
   601  04B9  3446               	retlw	70	;'F'
   602  04BA  344F               	retlw	79	;'O'
   603  04BB  3458               	retlw	88	;'X'
   604  04BC  343A               	retlw	58	;':'
   605  04BD  3400               	retlw	0
   606                           
   607                           	psect	stringtext9
   608  04BE                     __pstringtext9:	
   609  04BE                     STR_18:	
   610  04BE  3441               	retlw	65	;'A'
   611  04BF  3454               	retlw	84	;'T'
   612  04C0  342B               	retlw	43	;'+'
   613  04C1  3443               	retlw	67	;'C'
   614  04C2  344D               	retlw	77	;'M'
   615  04C3  3447               	retlw	71	;'G'
   616  04C4  3446               	retlw	70	;'F'
   617  04C5  343D               	retlw	61	;'='
   618  04C6  3431               	retlw	49	;'1'
   619  04C7  340D               	retlw	13
   620  04C8  340A               	retlw	10
   621  04C9  3400               	retlw	0
   622                           
   623                           	psect	stringtext10
   624  04CA                     __pstringtext10:	
   625  04CA                     STR_6:	
   626  04CA  3441               	retlw	65	;'A'
   627  04CB  3454               	retlw	84	;'T'
   628  04CC  342B               	retlw	43	;'+'
   629  04CD  3443               	retlw	67	;'C'
   630  04CE  3452               	retlw	82	;'R'
   631  04CF  3445               	retlw	69	;'E'
   632  04D0  3447               	retlw	71	;'G'
   633  04D1  343D               	retlw	61	;'='
   634  04D2  3432               	retlw	50	;'2'
   635  04D3  340D               	retlw	13
   636  04D4  340A               	retlw	10
   637  04D5  3400               	retlw	0
   638                           
   639                           	psect	stringtext11
   640  04D6                     __pstringtext11:	
   641  04D6                     STR_5:	
   642  04D6  3447               	retlw	71	;'G'
   643  04D7  3453               	retlw	83	;'S'
   644  04D8  344D               	retlw	77	;'M'
   645  04D9  345F               	retlw	95	;'_'
   646  04DA  3453               	retlw	83	;'S'
   647  04DB  3454               	retlw	84	;'T'
   648  04DC  3441               	retlw	65	;'A'
   649  04DD  3452               	retlw	82	;'R'
   650  04DE  3454               	retlw	84	;'T'
   651  04DF  340D               	retlw	13
   652  04E0  340A               	retlw	10
   653  04E1  3400               	retlw	0
   654                           
   655                           	psect	stringtext12
   656  04E2                     __pstringtext12:	
   657  04E2                     STR_10:	
   658  04E2  3447               	retlw	71	;'G'
   659  04E3  3450               	retlw	80	;'P'
   660  04E4  3453               	retlw	83	;'S'
   661  04E5  345F               	retlw	95	;'_'
   662  04E6  3453               	retlw	83	;'S'
   663  04E7  3454               	retlw	84	;'T'
   664  04E8  3441               	retlw	65	;'A'
   665  04E9  3452               	retlw	82	;'R'
   666  04EA  3454               	retlw	84	;'T'
   667  04EB  340D               	retlw	13
   668  04EC  340A               	retlw	10
   669  04ED  3400               	retlw	0
   670                           
   671                           	psect	stringtext13
   672  04EE                     __pstringtext13:	
   673  04EE                     STR_36:	
   674  04EE  3448               	retlw	72	;'H'
   675  04EF  3465               	retlw	101	;'e'
   676  04F0  346C               	retlw	108	;'l'
   677  04F1  346C               	retlw	108	;'l'
   678  04F2  346F               	retlw	111	;'o'
   679  04F3  3420               	retlw	32	;' '
   680  04F4  3457               	retlw	87	;'W'
   681  04F5  346F               	retlw	111	;'o'
   682  04F6  3472               	retlw	114	;'r'
   683  04F7  346C               	retlw	108	;'l'
   684  04F8  3464               	retlw	100	;'d'
   685  04F9  3400               	retlw	0
   686                           
   687                           	psect	stringtext14
   688  04FA                     __pstringtext14:	
   689  04FA                     STR_8:	
   690  04FA  3441               	retlw	65	;'A'
   691  04FB  3454               	retlw	84	;'T'
   692  04FC  342B               	retlw	43	;'+'
   693  04FD  3443               	retlw	67	;'C'
   694  04FE  3452               	retlw	82	;'R'
   695  04FF  3445               	retlw	69	;'E'
   696  0500  3447               	retlw	71	;'G'
   697  0501  343F               	retlw	63	;'?'
   698  0502  340D               	retlw	13
   699  0503  340A               	retlw	10
   700  0504  3400               	retlw	0
   701                           
   702                           	psect	stringtext15
   703  0505                     __pstringtext15:	
   704  0505                     STR_4:	
   705  0505  3457               	retlw	87	;'W'
   706  0506  3449               	retlw	73	;'I'
   707  0507  3446               	retlw	70	;'F'
   708  0508  3449               	retlw	73	;'I'
   709  0509  345F               	retlw	95	;'_'
   710  050A  3445               	retlw	69	;'E'
   711  050B  344E               	retlw	78	;'N'
   712  050C  3444               	retlw	68	;'D'
   713  050D  340D               	retlw	13
   714  050E  340A               	retlw	10
   715  050F  3400               	retlw	0
   716                           
   717                           	psect	stringtext16
   718  0510                     __pstringtext16:	
   719  0510                     STR_26:	
   720  0510  3447               	retlw	71	;'G'
   721  0511  3445               	retlw	69	;'E'
   722  0512  3454               	retlw	84	;'T'
   723  0513  345F               	retlw	95	;'_'
   724  0514  3457               	retlw	87	;'W'
   725  0515  3449               	retlw	73	;'I'
   726  0516  3446               	retlw	70	;'F'
   727  0517  3449               	retlw	73	;'I'
   728  0518  340D               	retlw	13
   729  0519  340A               	retlw	10
   730  051A  3400               	retlw	0
   731                           
   732                           	psect	stringtext17
   733  051B                     __pstringtext17:	
   734  051B                     STR_3:	
   735  051B  3441               	retlw	65	;'A'
   736  051C  3454               	retlw	84	;'T'
   737  051D  342B               	retlw	43	;'+'
   738  051E  3443               	retlw	67	;'C'
   739  051F  3457               	retlw	87	;'W'
   740  0520  344C               	retlw	76	;'L'
   741  0521  3441               	retlw	65	;'A'
   742  0522  3450               	retlw	80	;'P'
   743  0523  340D               	retlw	13
   744  0524  340A               	retlw	10
   745  0525  3400               	retlw	0
   746                           
   747                           	psect	stringtext18
   748  0526                     __pstringtext18:	
   749  0526                     STR_34:	
   750  0526  3453               	retlw	83	;'S'
   751  0527  3445               	retlw	69	;'E'
   752  0528  344E               	retlw	78	;'N'
   753  0529  3444               	retlw	68	;'D'
   754  052A  345F               	retlw	95	;'_'
   755  052B  3453               	retlw	83	;'S'
   756  052C  344D               	retlw	77	;'M'
   757  052D  3453               	retlw	83	;'S'
   758  052E  340D               	retlw	13
   759  052F  340A               	retlw	10
   760  0530  3400               	retlw	0
   761                           
   762                           	psect	stringtext19
   763  0531                     __pstringtext19:	
   764  0531                     STR_9:	
   765  0531  3447               	retlw	71	;'G'
   766  0532  3453               	retlw	83	;'S'
   767  0533  344D               	retlw	77	;'M'
   768  0534  345F               	retlw	95	;'_'
   769  0535  3445               	retlw	69	;'E'
   770  0536  344E               	retlw	78	;'N'
   771  0537  3444               	retlw	68	;'D'
   772  0538  340D               	retlw	13
   773  0539  340A               	retlw	10
   774  053A  3400               	retlw	0
   775                           
   776                           	psect	stringtext20
   777  053B                     __pstringtext20:	
   778  053B                     STR_12:	
   779  053B  3447               	retlw	71	;'G'
   780  053C  3450               	retlw	80	;'P'
   781  053D  3453               	retlw	83	;'S'
   782  053E  345F               	retlw	95	;'_'
   783  053F  3445               	retlw	69	;'E'
   784  0540  344E               	retlw	78	;'N'
   785  0541  3444               	retlw	68	;'D'
   786  0542  340D               	retlw	13
   787  0543  340A               	retlw	10
   788  0544  3400               	retlw	0
   789                           
   790                           	psect	stringtext21
   791  0545                     __pstringtext21:	
   792  0545                     STR_31:	
   793  0545  3447               	retlw	71	;'G'
   794  0546  3445               	retlw	69	;'E'
   795  0547  3454               	retlw	84	;'T'
   796  0548  345F               	retlw	95	;'_'
   797  0549  3441               	retlw	65	;'A'
   798  054A  344C               	retlw	76	;'L'
   799  054B  344C               	retlw	76	;'L'
   800  054C  340D               	retlw	13
   801  054D  340A               	retlw	10
   802  054E  3400               	retlw	0
   803                           
   804                           	psect	stringtext22
   805  054F                     __pstringtext22:	
   806  054F                     STR_24:	
   807  054F  3447               	retlw	71	;'G'
   808  0550  3445               	retlw	69	;'E'
   809  0551  3454               	retlw	84	;'T'
   810  0552  345F               	retlw	95	;'_'
   811  0553  3447               	retlw	71	;'G'
   812  0554  3453               	retlw	83	;'S'
   813  0555  344D               	retlw	77	;'M'
   814  0556  340D               	retlw	13
   815  0557  340A               	retlw	10
   816  0558  3400               	retlw	0
   817                           
   818                           	psect	stringtext23
   819  0559                     __pstringtext23:	
   820  0559                     STR_22:	
   821  0559  3447               	retlw	71	;'G'
   822  055A  3445               	retlw	69	;'E'
   823  055B  3454               	retlw	84	;'T'
   824  055C  345F               	retlw	95	;'_'
   825  055D  3447               	retlw	71	;'G'
   826  055E  3450               	retlw	80	;'P'
   827  055F  3453               	retlw	83	;'S'
   828  0560  340D               	retlw	13
   829  0561  340A               	retlw	10
   830  0562  3400               	retlw	0
   831                           
   832                           	psect	stringtext24
   833  0563                     __pstringtext24:	
   834  0563                     STR_19:	
   835  0563  3441               	retlw	65	;'A'
   836  0564  3454               	retlw	84	;'T'
   837  0565  342B               	retlw	43	;'+'
   838  0566  3443               	retlw	67	;'C'
   839  0567  344D               	retlw	77	;'M'
   840  0568  3447               	retlw	71	;'G'
   841  0569  3453               	retlw	83	;'S'
   842  056A  343D               	retlw	61	;'='
   843  056B  3422               	retlw	34	;'"'
   844  056C  3400               	retlw	0
   845                           
   846                           	psect	stringtext25
   847  0581                     __pstringtext25:	
   848  0581                     STR_7:	
   849  0581  3441               	retlw	65	;'A'
   850  0582  3454               	retlw	84	;'T'
   851  0583  342B               	retlw	43	;'+'
   852  0584  3443               	retlw	67	;'C'
   853  0585  3453               	retlw	83	;'S'
   854  0586  3451               	retlw	81	;'Q'
   855  0587  340D               	retlw	13
   856  0588  340A               	retlw	10
   857  0589  3400               	retlw	0
   858                           
   859                           	psect	stringtext26
   860  058A                     __pstringtext26:	
   861  058A                     STR_11:	
   862  058A  3424               	retlw	36	;'$'
   863  058B  3447               	retlw	71	;'G'
   864  058C  3450               	retlw	80	;'P'
   865  058D  3447               	retlw	71	;'G'
   866  058E  3447               	retlw	71	;'G'
   867  058F  3441               	retlw	65	;'A'
   868  0590  342C               	retlw	44	;','
   869  0591  3400               	retlw	0
   870                           
   871                           	psect	stringtext27
   872  05A2                     __pstringtext27:	
   873  05A2                     STR_16:	
   874  05A2  3441               	retlw	65	;'A'
   875  05A3  3454               	retlw	84	;'T'
   876  05A4  3424               	retlw	36	;'$'
   877  05A5  3453               	retlw	83	;'S'
   878  05A6  3446               	retlw	70	;'F'
   879  05A7  343D               	retlw	61	;'='
   880  05A8  3400               	retlw	0
   881                           
   882                           	psect	stringtext28
   883  05A9                     __pstringtext28:	
   884  05A9                     STR_35:	
   885  05A9  346E               	retlw	110	;'n'
   886  05AA  3475               	retlw	117	;'u'
   887  05AB  346D               	retlw	109	;'m'
   888  05AC  346D               	retlw	109	;'m'
   889  05AD  3465               	retlw	101	;'e'
   890  05AE  3472               	retlw	114	;'r'
   891  05AF  3400               	retlw	0
   892                           
   893                           	psect	stringtext29
   894  05B0                     __pstringtext29:	
   895  05B0                     STR_14:	
   896  05B0  3441               	retlw	65	;'A'
   897  05B1  3454               	retlw	84	;'T'
   898  05B2  340D               	retlw	13
   899  05B3  340A               	retlw	10
   900  05B4  3400               	retlw	0
   901                           
   902                           	psect	stringtext30
   903  05B5                     __pstringtext30:	
   904  05B5                     STR_20:	
   905  05B5  3422               	retlw	34	;'"'
   906  05B6  340D               	retlw	13
   907  05B7  340A               	retlw	10
   908  05B8  3400               	retlw	0
   909                           
   910                           	psect	stringtext31
   911  0000                     __pstringtext31:	
   912  05B6                     
   913                           ; #config settings
   914  0000                     
   915                           	psect	cinit
   916  0027                     start_initialization:	
   917  0027                     __initialization:	
   918                           
   919                           ; Clear objects allocated to COMMON
   920  0027  01FC               	clrf	__pbssCOMMON& (0+127)
   921                           
   922                           ; Clear objects allocated to BANK0
   923  0028  0140               	movlb	0	; select bank0
   924  0029  01E8               	clrf	__pbssBANK0& (0+127)
   925  002A  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   926  002B  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   927  002C  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   928  002D                     end_of_initialization:	
   929                           ;End of C runtime variable initialization code
   930                           
   931  002D                     __end_of__initialization:	
   932  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   933  002E  0140               	movlb	0
   934  002F  3183  2BAD         	ljmp	_main	;jump to C main() function
   935                           
   936                           	psect	bssCOMMON
   937  007C                     __pbssCOMMON:	
   938  007C                     _timerDone:	
   939  007C                     	ds	1
   940                           
   941                           	psect	bssBANK0
   942  0068                     __pbssBANK0:	
   943  0068                     _timerActual:	
   944  0068                     	ds	2
   945  006A                     _timerSetpoint:	
   946  006A                     	ds	2
   947                           
   948                           	psect	cstackCOMMON
   949  0070                     __pcstackCOMMON:	
   950  0070                     ?_initBTSerial:	
   951  0070                     ?_setActivePeripheral:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_waitForCommand:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_main:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_serialWritePeripheral:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_serialReadPeripheral:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_serialWriteBT:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_serialReadBT:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_timerCount:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ??_timerCount:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_getWiFiData:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_getGSMData:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_getGPSData:	
   985                           ; 1 bytes @ 0x0
   986                           
   987                           
   988                           ; 1 bytes @ 0x0
   989  0070                     	ds	1
   990  0071                     ??_initBTSerial:	
   991  0071                     ??_setActivePeripheral:	
   992                           ; 1 bytes @ 0x1
   993                           
   994  0071                     ??_serialWritePeripheral:	
   995                           ; 1 bytes @ 0x1
   996                           
   997  0071                     ??_serialReadPeripheral:	
   998                           ; 1 bytes @ 0x1
   999                           
  1000  0071                     ?_serialFindPeripheral:	
  1001                           ; 1 bytes @ 0x1
  1002                           
  1003  0071                     ??_serialWriteBT:	
  1004                           ; 1 bytes @ 0x1
  1005                           
  1006  0071                     ??_serialReadBT:	
  1007                           ; 1 bytes @ 0x1
  1008                           
  1009  0071                     ?_startTimer:	
  1010                           ; 1 bytes @ 0x1
  1011                           
  1012  0071                     ?_strcmp:	
  1013                           ; 1 bytes @ 0x1
  1014                           
  1015  0071                     ?_strncmp:	
  1016                           ; 2 bytes @ 0x1
  1017                           
  1018  0071                     serialWritePeripheral@c:	
  1019                           ; 2 bytes @ 0x1
  1020                           
  1021  0071                     setActivePeripheral@peri:	
  1022                           ; 1 bytes @ 0x1
  1023                           
  1024  0071                     serialWriteBT@c:	
  1025                           ; 1 bytes @ 0x1
  1026                           
  1027  0071                     serialFindPeripheral@s:	
  1028                           ; 1 bytes @ 0x1
  1029                           
  1030  0071                     startTimer@seconds:	
  1031                           ; 2 bytes @ 0x1
  1032                           
  1033  0071                     strcmp@s2:	
  1034                           ; 2 bytes @ 0x1
  1035                           
  1036  0071                     strncmp@s2:	
  1037                           ; 2 bytes @ 0x1
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x1
  1041  0071                     	ds	1
  1042  0072                     ?_serialPrintPeripheral:	
  1043  0072                     ?_serialPrintBT:	
  1044                           ; 1 bytes @ 0x2
  1045                           
  1046  0072                     serialPrintPeripheral@s:	
  1047                           ; 1 bytes @ 0x2
  1048                           
  1049  0072                     serialPrintBT@s:	
  1050                           ; 2 bytes @ 0x2
  1051                           
  1052                           
  1053                           ; 2 bytes @ 0x2
  1054  0072                     	ds	1
  1055  0073                     ??_strcmp:	
  1056  0073                     ??_serialFindPeripheral:	
  1057                           ; 1 bytes @ 0x3
  1058                           
  1059  0073                     ??_startTimer:	
  1060                           ; 1 bytes @ 0x3
  1061                           
  1062  0073                     strncmp@len:	
  1063                           ; 1 bytes @ 0x3
  1064                           
  1065                           
  1066                           ; 2 bytes @ 0x3
  1067  0073                     	ds	1
  1068  0074                     ??_serialPrintPeripheral:	
  1069  0074                     ??_serialPrintBT:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072  0074                     strcmp@r:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075  0074                     serialFindPeripheral@i:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x4
  1080  0074                     	ds	1
  1081  0075                     ??_strncmp:	
  1082  0075                     strcmp@s1:	
  1083                           ; 1 bytes @ 0x5
  1084                           
  1085  0075                     serialPrintPeripheral@i:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088  0075                     serialPrintBT@i:	
  1089                           ; 2 bytes @ 0x5
  1090                           
  1091                           
  1092                           ; 2 bytes @ 0x5
  1093  0075                     	ds	2
  1094  0077                     ??_getWiFiData:	
  1095  0077                     ??_getGSMData:	
  1096                           ; 1 bytes @ 0x7
  1097                           
  1098  0077                     ??_getGPSData:	
  1099                           ; 1 bytes @ 0x7
  1100                           
  1101  0077                     ?_sendSigfox:	
  1102                           ; 1 bytes @ 0x7
  1103                           
  1104  0077                     ?_sendSMS:	
  1105                           ; 1 bytes @ 0x7
  1106                           
  1107  0077                     strncmp@s1:	
  1108                           ; 1 bytes @ 0x7
  1109                           
  1110  0077                     sendSigfox@hexMessage:	
  1111                           ; 1 bytes @ 0x7
  1112                           
  1113  0077                     sendSMS@number:	
  1114                           ; 2 bytes @ 0x7
  1115                           
  1116                           
  1117                           ; 2 bytes @ 0x7
  1118  0077                     	ds	1
  1119  0078                     getGPSData@found:	
  1120                           
  1121                           ; 1 bytes @ 0x8
  1122  0078                     	ds	1
  1123  0079                     ??_sendSigfox:	
  1124  0079                     getGPSData@c:	
  1125                           ; 1 bytes @ 0x9
  1126                           
  1127  0079                     sendSMS@message:	
  1128                           ; 1 bytes @ 0x9
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0x9
  1132  0079                     	ds	2
  1133  007B                     ??_waitForCommand:	
  1134                           
  1135                           ; 1 bytes @ 0xB
  1136  007B                     	ds	1
  1137                           
  1138                           	psect	cstackBANK0
  1139  0020                     __pcstackBANK0:	
  1140  0020                     ??_sendSMS:	
  1141                           
  1142                           ; 1 bytes @ 0x0
  1143  0020                     	ds	2
  1144  0022                     waitForCommand@message:	
  1145                           
  1146                           ; 30 bytes @ 0x2
  1147  0022                     	ds	30
  1148  0040                     waitForCommand@command:	
  1149                           
  1150                           ; 32 bytes @ 0x20
  1151  0040                     	ds	32
  1152  0060                     waitForCommand@c:	
  1153                           
  1154                           ; 1 bytes @ 0x40
  1155  0060                     	ds	1
  1156  0061                     waitForCommand@i:	
  1157                           
  1158                           ; 2 bytes @ 0x41
  1159  0061                     	ds	2
  1160  0063                     waitForCommand@i_448:	
  1161                           
  1162                           ; 2 bytes @ 0x43
  1163  0063                     	ds	2
  1164  0065                     waitForCommand@p:	
  1165                           
  1166                           ; 1 bytes @ 0x45
  1167  0065                     	ds	1
  1168  0066                     ??_main:	
  1169                           
  1170                           ; 1 bytes @ 0x46
  1171  0066                     	ds	2
  1172                           
  1173                           	psect	maintext
  1174  03AD                     __pmaintext:	
  1175 ;;
  1176 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1177 ;;
  1178 ;; *************** function _main *****************
  1179 ;; Defined at:
  1180 ;;		line 88 in file "main.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : B3F/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1194 ;;      Params:         0       0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0       0
  1196 ;;      Temps:          0       2       0       0       0       0       0       0
  1197 ;;      Totals:         0       2       0       0       0       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels required when called:    5
  1200 ;; This function calls:
  1201 ;;		_initBTSerial
  1202 ;;		_setActivePeripheral
  1203 ;;		_waitForCommand
  1204 ;; This function is called by:
  1205 ;;		Startup code after reset
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _main
  1211  03AD                     _main:	
  1212                           
  1213                           ;main.c: 90: ANSELA = 0;
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1217  03AD  017E               	movlb	62	; select bank62
  1218  03AE  01B8               	clrf	56	;volatile
  1219                           
  1220                           ;main.c: 91: ANSELB = 0;
  1221  03AF  01C3               	clrf	67	;volatile
  1222                           
  1223                           ;main.c: 92: ANSELC = 0;
  1224  03B0  01CE               	clrf	78	;volatile
  1225                           
  1226                           ;main.c: 95: TRISB7 = 0;
  1227  03B1  0140               	movlb	0	; select bank0
  1228  03B2  1393               	bcf	19,7	;volatile
  1229                           
  1230                           ;main.c: 96: LATB7 = 0;
  1231  03B3  1399               	bcf	25,7	;volatile
  1232                           
  1233                           ;main.c: 99: INTCONbits.GIE = 1;
  1234  03B4  178B               	bsf	11,7	;volatile
  1235                           
  1236                           ;main.c: 100: INTCONbits.PEIE = 1;
  1237  03B5  170B               	bsf	11,6	;volatile
  1238                           
  1239                           ;main.c: 103: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1240  03B6  30CB               	movlw	203
  1241  03B7  0140               	movlb	0	; select bank0
  1242  03B8  00E7               	movwf	??_main+1
  1243  03B9  30EC               	movlw	236
  1244  03BA  00E6               	movwf	??_main
  1245  03BB  3084               	movlw	132
  1246  03BC                     u1047:	
  1247  03BC  0B89               	decfsz	9,f
  1248  03BD  2BBC               	goto	u1047
  1249  03BE  0BE6               	decfsz	??_main,f
  1250  03BF  2BBC               	goto	u1047
  1251  03C0  0BE7               	decfsz	??_main+1,f
  1252  03C1  2BBC               	goto	u1047
  1253  03C2  0000               	nop
  1254                           
  1255                           ;main.c: 104: initBTSerial();
  1256  03C3  3184  2431  3183   	fcall	_initBTSerial
  1257                           
  1258                           ;main.c: 105: setActivePeripheral(sigfox);
  1259  03C6  3002               	movlw	2
  1260  03C7  3182  222C  3183   	fcall	_setActivePeripheral
  1261  03CA                     l1462:	
  1262                           ;main.c: 107: while (1) {
  1263                           
  1264                           
  1265                           ;main.c: 108: waitForCommand();
  1266  03CA  3180  2031  3183   	fcall	_waitForCommand
  1267  03CD  2BCA               	goto	l1462
  1268  03CE                     __end_of_main:	
  1269                           ;main.c: 110: }
  1270                           ;main.c: 111: return;
  1271                           
  1272                           
  1273                           	psect	text1
  1274  0031                     __ptext1:	
  1275 ;; *************** function _waitForCommand *****************
  1276 ;; Defined at:
  1277 ;;		line 402 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  c               1   64[BANK0 ] unsigned char 
  1282 ;;  message        30    2[BANK0 ] unsigned char [30]
  1283 ;;  i               2   67[BANK0 ] int 
  1284 ;;  p               1   69[BANK0 ] PTR unsigned char 
  1285 ;;		 -> waitForCommand@command(32), 
  1286 ;;  command        32   32[BANK0 ] unsigned char [32]
  1287 ;;  i               2   65[BANK0 ] int 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1297 ;;      Params:         0       0       0       0       0       0       0       0
  1298 ;;      Locals:         0      68       0       0       0       0       0       0
  1299 ;;      Temps:          1       0       0       0       0       0       0       0
  1300 ;;      Totals:         1      68       0       0       0       0       0       0
  1301 ;;Total ram usage:       69 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    4
  1304 ;; This function calls:
  1305 ;;		_getGPSData
  1306 ;;		_getGSMData
  1307 ;;		_getWiFiData
  1308 ;;		_sendSMS
  1309 ;;		_sendSigfox
  1310 ;;		_serialPrintBT
  1311 ;;		_serialReadBT
  1312 ;;		_serialReadPeripheral
  1313 ;;		_serialWriteBT
  1314 ;;		_startTimer
  1315 ;;		_strcmp
  1316 ;;		_strncmp
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _waitForCommand
  1324  0031                     _waitForCommand:	
  1325  0031                     l217:	
  1326                           ;main.c: 403: char command[32];
  1327                           ;main.c: 405: while (!PIR3bits.RC2IF) {
  1328                           
  1329                           ;incstack = 0
  1330                           ; Regs used in _waitForCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1331                           
  1332  0031  014E               	movlb	14	; select bank14
  1333  0032  1F8F               	btfss	15,7	;volatile
  1334  0033  2831               	goto	l217
  1335                           
  1336                           ;main.c: 406: }
  1337                           ;main.c: 408: startTimer(2);
  1338  0034  3002               	movlw	2
  1339  0035  00F1               	movwf	startTimer@seconds
  1340  0036  3000               	movlw	0
  1341  0037  00F2               	movwf	startTimer@seconds+1
  1342  0038  3184  245A  3180   	fcall	_startTimer
  1343                           
  1344                           ;main.c: 409: int i = 0;
  1345  003B  0140               	movlb	0	; select bank0
  1346  003C  01E1               	clrf	waitForCommand@i
  1347  003D  01E2               	clrf	waitForCommand@i+1
  1348  003E                     l1390:	
  1349                           ;main.c: 410: while (!timerDone) {
  1350                           
  1351  003E  087C               	movf	_timerDone,w
  1352  003F  1D03               	btfss	3,2
  1353  0040  2854               	goto	l1392
  1354                           
  1355                           ;main.c: 411: if (PIR3bits.RC2IF) {
  1356  0041  014E               	movlb	14	; select bank14
  1357  0042  1F8F               	btfss	15,7	;volatile
  1358  0043  283E               	goto	l1390
  1359                           
  1360                           ;main.c: 412: command[i] = serialReadBT();
  1361  0044  3185  256D  3180   	fcall	_serialReadBT
  1362  0047  00FB               	movwf	??_waitForCommand
  1363  0048  0140               	movlb	0	; select bank0
  1364  0049  0861               	movf	waitForCommand@i,w
  1365  004A  3E40               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1366  004B  0086               	movwf	6
  1367  004C  0187               	clrf	7
  1368  004D  087B               	movf	??_waitForCommand,w
  1369  004E  0081               	movwf	1
  1370                           
  1371                           ;main.c: 413: i++;
  1372  004F  3001               	movlw	1
  1373  0050  07E1               	addwf	waitForCommand@i,f
  1374  0051  3000               	movlw	0
  1375  0052  3DE2               	addwfc	waitForCommand@i+1,f
  1376  0053  283E               	goto	l1390
  1377  0054                     l1392:	
  1378                           
  1379                           ;main.c: 414: }
  1380                           ;main.c: 415: }
  1381                           ;main.c: 416: command[i] = '\0';
  1382  0054  0140               	movlb	0	; select bank0
  1383  0055  0861               	movf	waitForCommand@i,w
  1384  0056  3E40               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1385  0057  0086               	movwf	6
  1386  0058  0187               	clrf	7
  1387  0059  0181               	clrf	1
  1388                           
  1389                           ;main.c: 419: if (strcmp(command, "GET_GPS\r\n") == 0) {
  1390  005A  3059               	movlw	low (STR_22| (0+32768))
  1391  005B  00F1               	movwf	strcmp@s2
  1392  005C  3085               	movlw	high (STR_22| (0+32768))
  1393  005D  00F2               	movwf	strcmp@s2+1
  1394  005E  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1395  005F  3183  2364  3180   	fcall	_strcmp
  1396  0062  0871               	movf	?_strcmp,w
  1397  0063  0472               	iorwf	?_strcmp+1,w
  1398  0064  1D03               	btfss	3,2
  1399  0065  2870               	goto	l1398
  1400                           
  1401                           ;main.c: 420: getGPSData();
  1402  0066  3182  22D9  3180   	fcall	_getGPSData
  1403                           
  1404                           ;main.c: 421: serialPrintBT("MESSAGE_END\r\n");
  1405  0069  3089               	movlw	low (STR_23| (0+32768))
  1406  006A  00F2               	movwf	serialPrintBT@s
  1407  006B  3084               	movlw	high (STR_23| (0+32768))
  1408  006C  00F3               	movwf	serialPrintBT@s+1
  1409  006D  3183  23E8         	fcall	_serialPrintBT
  1410                           
  1411                           ;main.c: 422: } else if (strcmp(command, "GET_GSM\r\n") == 0) {
  1412  006F  0008               	return
  1413  0070                     l1398:	
  1414  0070  304F               	movlw	low (STR_24| (0+32768))
  1415  0071  00F1               	movwf	strcmp@s2
  1416  0072  3085               	movlw	high (STR_24| (0+32768))
  1417  0073  00F2               	movwf	strcmp@s2+1
  1418  0074  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1419  0075  3183  2364  3180   	fcall	_strcmp
  1420  0078  0871               	movf	?_strcmp,w
  1421  0079  0472               	iorwf	?_strcmp+1,w
  1422  007A  1D03               	btfss	3,2
  1423  007B  2886               	goto	l1402
  1424                           
  1425                           ;main.c: 423: getGSMData();
  1426  007C  3181  2141  3180   	fcall	_getGSMData
  1427                           
  1428                           ;main.c: 424: serialPrintBT("MESSAGE_END\r\n");
  1429  007F  3089               	movlw	low (STR_23| (0+32768))
  1430  0080  00F2               	movwf	serialPrintBT@s
  1431  0081  3084               	movlw	high (STR_23| (0+32768))
  1432  0082  00F3               	movwf	serialPrintBT@s+1
  1433  0083  3183  23E8         	fcall	_serialPrintBT
  1434                           
  1435                           ;main.c: 425: } else if (strcmp(command, "GET_WIFI\r\n") == 0) {
  1436  0085  0008               	return
  1437  0086                     l1402:	
  1438  0086  3010               	movlw	low (STR_26| (0+32768))
  1439  0087  00F1               	movwf	strcmp@s2
  1440  0088  3085               	movlw	high (STR_26| (0+32768))
  1441  0089  00F2               	movwf	strcmp@s2+1
  1442  008A  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1443  008B  3183  2364  3180   	fcall	_strcmp
  1444  008E  0871               	movf	?_strcmp,w
  1445  008F  0472               	iorwf	?_strcmp+1,w
  1446  0090  1D03               	btfss	3,2
  1447  0091  289C               	goto	l1406
  1448                           
  1449                           ;main.c: 426: getWiFiData();
  1450  0092  3182  2285  3180   	fcall	_getWiFiData
  1451                           
  1452                           ;main.c: 427: serialPrintBT("MESSAGE_END\r\n");
  1453  0095  3089               	movlw	low (STR_23| (0+32768))
  1454  0096  00F2               	movwf	serialPrintBT@s
  1455  0097  3084               	movlw	high (STR_23| (0+32768))
  1456  0098  00F3               	movwf	serialPrintBT@s+1
  1457  0099  3183  23E8         	fcall	_serialPrintBT
  1458                           
  1459                           ;main.c: 428: } else if (strcmp(command, "GET_ALL_SEND_SIGFOX\r\n") == 0) {
  1460  009B  0008               	return
  1461  009C                     l1406:	
  1462  009C  301B               	movlw	low (STR_28| (0+32768))
  1463  009D  00F1               	movwf	strcmp@s2
  1464  009E  3084               	movlw	high (STR_28| (0+32768))
  1465  009F  00F2               	movwf	strcmp@s2+1
  1466  00A0  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1467  00A1  3183  2364  3180   	fcall	_strcmp
  1468  00A4  0871               	movf	?_strcmp,w
  1469  00A5  0472               	iorwf	?_strcmp+1,w
  1470  00A6  1D03               	btfss	3,2
  1471  00A7  28BF               	goto	l1410
  1472                           
  1473                           ;main.c: 429: sendSigfox("000000000000\r\n");
  1474  00A8  306B               	movlw	low (STR_29| (0+32768))
  1475  00A9  00F7               	movwf	sendSigfox@hexMessage
  1476  00AA  3084               	movlw	high (STR_29| (0+32768))
  1477  00AB  00F8               	movwf	sendSigfox@hexMessage+1
  1478  00AC  3184  2402  3180   	fcall	_sendSigfox
  1479                           
  1480                           ;main.c: 430: getGPSData();
  1481  00AF  3182  22D9  3180   	fcall	_getGPSData
  1482                           
  1483                           ;main.c: 431: getGSMData();
  1484  00B2  3181  2141  3180   	fcall	_getGSMData
  1485                           
  1486                           ;main.c: 432: getWiFiData();
  1487  00B5  3182  2285  3180   	fcall	_getWiFiData
  1488                           
  1489                           ;main.c: 433: serialPrintBT("MESSAGE_END\r\n");
  1490  00B8  3089               	movlw	low (STR_23| (0+32768))
  1491  00B9  00F2               	movwf	serialPrintBT@s
  1492  00BA  3084               	movlw	high (STR_23| (0+32768))
  1493  00BB  00F3               	movwf	serialPrintBT@s+1
  1494  00BC  3183  23E8         	fcall	_serialPrintBT
  1495                           
  1496                           ;main.c: 434: } else if (strcmp(command, "GET_ALL\r\n") == 0) {
  1497  00BE  0008               	return
  1498  00BF                     l1410:	
  1499  00BF  3045               	movlw	low (STR_31| (0+32768))
  1500  00C0  00F1               	movwf	strcmp@s2
  1501  00C1  3085               	movlw	high (STR_31| (0+32768))
  1502  00C2  00F2               	movwf	strcmp@s2+1
  1503  00C3  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1504  00C4  3183  2364  3180   	fcall	_strcmp
  1505  00C7  0871               	movf	?_strcmp,w
  1506  00C8  0472               	iorwf	?_strcmp+1,w
  1507  00C9  1D03               	btfss	3,2
  1508  00CA  28DB               	goto	l1414
  1509                           
  1510                           ;main.c: 435: getGPSData();
  1511  00CB  3182  22D9  3180   	fcall	_getGPSData
  1512                           
  1513                           ;main.c: 436: getGSMData();
  1514  00CE  3181  2141  3180   	fcall	_getGSMData
  1515                           
  1516                           ;main.c: 437: getWiFiData();
  1517  00D1  3182  2285  3180   	fcall	_getWiFiData
  1518                           
  1519                           ;main.c: 438: serialPrintBT("MESSAGE_END\r\n");
  1520  00D4  3089               	movlw	low (STR_23| (0+32768))
  1521  00D5  00F2               	movwf	serialPrintBT@s
  1522  00D6  3084               	movlw	high (STR_23| (0+32768))
  1523  00D7  00F3               	movwf	serialPrintBT@s+1
  1524  00D8  3183  23E8         	fcall	_serialPrintBT
  1525                           
  1526                           ;main.c: 439: } else if (strncmp(command, "SEND_SIGFOX:", 12) == 0) {
  1527  00DA  0008               	return
  1528  00DB                     l1414:	
  1529  00DB  30B1               	movlw	low (STR_33| (0+32768))
  1530  00DC  00F1               	movwf	strncmp@s2
  1531  00DD  3084               	movlw	high (STR_33| (0+32768))
  1532  00DE  00F2               	movwf	strncmp@s2+1
  1533  00DF  300C               	movlw	12
  1534  00E0  00F3               	movwf	strncmp@len
  1535  00E1  3000               	movlw	0
  1536  00E2  00F4               	movwf	strncmp@len+1
  1537  00E3  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1538  00E4  3183  2324  3180   	fcall	_strncmp
  1539  00E7  0871               	movf	?_strncmp,w
  1540  00E8  0472               	iorwf	?_strncmp+1,w
  1541  00E9  1D03               	btfss	3,2
  1542  00EA  2919               	goto	l1432
  1543                           
  1544                           ;main.c: 440: char * p;
  1545                           ;main.c: 441: p = command + 12;
  1546  00EB  304C               	movlw	(low ((waitForCommand@command| 0+12)))& (0+255)
  1547  00EC  00FB               	movwf	??_waitForCommand
  1548  00ED  087B               	movf	??_waitForCommand,w
  1549  00EE  0140               	movlb	0	; select bank0
  1550  00EF  00E5               	movwf	waitForCommand@p
  1551                           
  1552                           ;main.c: 442: char message[30];
  1553                           ;main.c: 443: int i = 0;
  1554  00F0  01E3               	clrf	waitForCommand@i_448
  1555  00F1  01E4               	clrf	waitForCommand@i_448+1
  1556  00F2                     l1426:	
  1557                           ;main.c: 445: while (*p != '\r') {
  1558                           
  1559  00F2  0865               	movf	waitForCommand@p,w
  1560  00F3  0086               	movwf	6
  1561  00F4  0187               	clrf	7
  1562  00F5  300D               	movlw	13
  1563  00F6  0601               	xorwf	1,w
  1564  00F7  1903               	btfsc	3,2
  1565  00F8  290D               	goto	l1428
  1566                           
  1567                           ;main.c: 446: message[i] = *p;
  1568  00F9  0865               	movf	waitForCommand@p,w
  1569  00FA  0086               	movwf	6
  1570  00FB  0187               	clrf	7
  1571  00FC  0801               	movf	1,w
  1572  00FD  00FB               	movwf	??_waitForCommand
  1573  00FE  0863               	movf	waitForCommand@i_448,w
  1574  00FF  3E22               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1575  0100  0086               	movwf	6
  1576  0101  0187               	clrf	7
  1577  0102  087B               	movf	??_waitForCommand,w
  1578  0103  0081               	movwf	1
  1579                           
  1580                           ;main.c: 447: p++;
  1581  0104  3001               	movlw	1
  1582  0105  00FB               	movwf	??_waitForCommand
  1583  0106  087B               	movf	??_waitForCommand,w
  1584  0107  07E5               	addwf	waitForCommand@p,f
  1585                           
  1586                           ;main.c: 448: i++;
  1587  0108  3001               	movlw	1
  1588  0109  07E3               	addwf	waitForCommand@i_448,f
  1589  010A  3000               	movlw	0
  1590  010B  3DE4               	addwfc	waitForCommand@i_448+1,f
  1591  010C  28F2               	goto	l1426
  1592  010D                     l1428:	
  1593                           
  1594                           ;main.c: 449: }
  1595                           ;main.c: 450: message[i] = '\0';
  1596  010D  0863               	movf	waitForCommand@i_448,w
  1597  010E  3E22               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1598  010F  0086               	movwf	6
  1599  0110  0187               	clrf	7
  1600  0111  0181               	clrf	1
  1601                           
  1602                           ;main.c: 452: sendSigfox(message);
  1603  0112  3022               	movlw	low waitForCommand@message
  1604  0113  00F7               	movwf	sendSigfox@hexMessage
  1605  0114  3000               	movlw	high waitForCommand@message
  1606  0115  00F8               	movwf	sendSigfox@hexMessage+1
  1607  0116  3184  2402         	fcall	_sendSigfox
  1608                           
  1609                           ;main.c: 453: } else if ("SEND_SMS\r\n") {
  1610  0118  0008               	return
  1611  0119                     l1432:	
  1612                           
  1613                           ;main.c: 454: sendSMS("nummer", "Hello World");
  1614  0119  30A9               	movlw	low (STR_35| (0+32768))
  1615  011A  00F7               	movwf	sendSMS@number
  1616  011B  3085               	movlw	high (STR_35| (0+32768))
  1617  011C  00F8               	movwf	sendSMS@number+1
  1618  011D  30EE               	movlw	low (STR_36| (0+32768))
  1619  011E  00F9               	movwf	sendSMS@message
  1620  011F  3084               	movlw	high (STR_36| (0+32768))
  1621  0120  00FA               	movwf	sendSMS@message+1
  1622  0121  3181  21B8  3180   	fcall	_sendSMS
  1623                           
  1624                           ;main.c: 456: startTimer(4);
  1625  0124  3004               	movlw	4
  1626  0125  00F1               	movwf	startTimer@seconds
  1627  0126  3000               	movlw	0
  1628  0127  00F2               	movwf	startTimer@seconds+1
  1629  0128  3184  245A  3180   	fcall	_startTimer
  1630  012B                     l1444:	
  1631                           ;main.c: 457: while (!timerDone) {
  1632                           
  1633  012B  087C               	movf	_timerDone,w
  1634  012C  1D03               	btfss	3,2
  1635  012D  0008               	return
  1636                           
  1637                           ;main.c: 458: if (PIR3bits.RC1IF) {
  1638  012E  014E               	movlb	14	; select bank14
  1639  012F  1E8F               	btfss	15,5	;volatile
  1640  0130  292B               	goto	l1444
  1641                           
  1642                           ;main.c: 459: char c = serialReadPeripheral();
  1643  0131  3185  2577  3180   	fcall	_serialReadPeripheral
  1644  0134  00FB               	movwf	??_waitForCommand
  1645  0135  087B               	movf	??_waitForCommand,w
  1646  0136  0140               	movlb	0	; select bank0
  1647  0137  00E0               	movwf	waitForCommand@c
  1648                           
  1649                           ;main.c: 460: if (c == 'O') {
  1650  0138  304F               	movlw	79
  1651  0139  0660               	xorwf	waitForCommand@c,w
  1652  013A  1903               	btfsc	3,2
  1653                           
  1654                           ;main.c: 461: TRISB7 = 0;
  1655  013B  1393               	bcf	19,7	;volatile
  1656                           
  1657                           ;main.c: 462: }
  1658                           ;main.c: 463: serialWriteBT(c);
  1659  013C  0860               	movf	waitForCommand@c,w
  1660  013D  3185  259A  3180   	fcall	_serialWriteBT
  1661  0140  292B               	goto	l1444
  1662  0141                     __end_of_waitForCommand:	
  1663                           
  1664                           	psect	text2
  1665  0324                     __ptext2:	
  1666 ;; *************** function _strncmp *****************
  1667 ;; Defined at:
  1668 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  s1              1    wreg     PTR const unsigned char 
  1671 ;;		 -> waitForCommand@command(32), 
  1672 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1673 ;;		 -> STR_33(13), 
  1674 ;;  len             2    3[COMMON] unsigned int 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  s1              1    7[COMMON] PTR const unsigned char 
  1677 ;;		 -> waitForCommand@command(32), 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2    1[COMMON] int 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1687 ;;      Params:         4       0       0       0       0       0       0       0
  1688 ;;      Locals:         1       0       0       0       0       0       0       0
  1689 ;;      Temps:          2       0       0       0       0       0       0       0
  1690 ;;      Totals:         7       0       0       0       0       0       0       0
  1691 ;;Total ram usage:        7 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_waitForCommand
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _strncmp
  1703  0324                     _strncmp:	
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  1707                           ;strncmp@s1 stored from wreg
  1708  0324  00F7               	movwf	strncmp@s1
  1709  0325                     l1234:	
  1710  0325  3001               	movlw	1
  1711  0326  02F3               	subwf	strncmp@len,f
  1712  0327  3000               	movlw	0
  1713  0328  3BF4               	subwfb	strncmp@len+1,f
  1714  0329  0A73               	incf	strncmp@len,w
  1715  032A  1903               	btfsc	3,2
  1716  032B  0A74               	incf	strncmp@len+1,w
  1717  032C  1903               	btfsc	3,2
  1718  032D  2B61               	goto	l1236
  1719  032E  0877               	movf	strncmp@s1,w
  1720  032F  0086               	movwf	6
  1721  0330  0187               	clrf	7
  1722  0331  0801               	movf	1,w
  1723  0332  1903               	btfsc	3,2
  1724  0333  2B41               	goto	l1226
  1725  0334  0871               	movf	strncmp@s2,w
  1726  0335  0084               	movwf	4
  1727  0336  0872               	movf	strncmp@s2+1,w
  1728  0337  0085               	movwf	5
  1729  0338  0800               	movf	0,w	;code access
  1730  0339  00F5               	movwf	??_strncmp
  1731  033A  0877               	movf	strncmp@s1,w
  1732  033B  0086               	movwf	6
  1733  033C  0187               	clrf	7
  1734  033D  0801               	movf	1,w
  1735  033E  0675               	xorwf	??_strncmp,w
  1736  033F  1903               	skipnz
  1737  0340  2B58               	goto	l1230
  1738  0341                     l1226:	
  1739  0341  0871               	movf	strncmp@s2,w
  1740  0342  0084               	movwf	4
  1741  0343  0872               	movf	strncmp@s2+1,w
  1742  0344  0085               	movwf	5
  1743  0345  0800               	movf	0,w	;code access
  1744  0346  00F5               	movwf	??_strncmp
  1745  0347  01F6               	clrf	??_strncmp+1
  1746  0348  09F5               	comf	??_strncmp,f
  1747  0349  09F6               	comf	??_strncmp+1,f
  1748  034A  0AF5               	incf	??_strncmp,f
  1749  034B  1903               	skipnz
  1750  034C  0AF6               	incf	??_strncmp+1,f
  1751  034D  0877               	movf	strncmp@s1,w
  1752  034E  0086               	movwf	6
  1753  034F  0187               	clrf	7
  1754  0350  0801               	movf	1,w
  1755  0351  0775               	addwf	??_strncmp,w
  1756  0352  00F1               	movwf	?_strncmp
  1757  0353  0876               	movf	??_strncmp+1,w
  1758  0354  1803               	skipnc
  1759  0355  0A76               	incf	??_strncmp+1,w
  1760  0356  00F2               	movwf	?_strncmp+1
  1761  0357  0008               	return
  1762  0358                     l1230:	
  1763  0358  3001               	movlw	1
  1764  0359  00F5               	movwf	??_strncmp
  1765  035A  0875               	movf	??_strncmp,w
  1766  035B  07F7               	addwf	strncmp@s1,f
  1767  035C  3001               	movlw	1
  1768  035D  07F1               	addwf	strncmp@s2,f
  1769  035E  3000               	movlw	0
  1770  035F  3DF2               	addwfc	strncmp@s2+1,f
  1771  0360  2B25               	goto	l1234
  1772  0361                     l1236:	
  1773  0361  01F1               	clrf	?_strncmp
  1774  0362  01F2               	clrf	?_strncmp+1
  1775  0363  0008               	return
  1776  0364                     __end_of_strncmp:	
  1777                           
  1778                           	psect	text3
  1779  0364                     __ptext3:	
  1780 ;; *************** function _strcmp *****************
  1781 ;; Defined at:
  1782 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  s1              1    wreg     PTR const unsigned char 
  1785 ;;		 -> waitForCommand@command(32), 
  1786 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1787 ;;		 -> STR_31(10), STR_28(22), STR_26(11), STR_24(10), 
  1788 ;;		 -> STR_22(10), 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1791 ;;		 -> waitForCommand@command(32), 
  1792 ;;  r               1    4[COMMON] char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2    1[COMMON] int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1802 ;;      Params:         2       0       0       0       0       0       0       0
  1803 ;;      Locals:         2       0       0       0       0       0       0       0
  1804 ;;      Temps:          1       0       0       0       0       0       0       0
  1805 ;;      Totals:         5       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        5 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_waitForCommand
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _strcmp
  1818  0364                     _strcmp:	
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  1822                           ;strcmp@s1 stored from wreg
  1823  0364  00F5               	movwf	strcmp@s1
  1824  0365  2B6E               	goto	l1212
  1825  0366                     l1210:	
  1826  0366  3001               	movlw	1
  1827  0367  00F3               	movwf	??_strcmp
  1828  0368  0873               	movf	??_strcmp,w
  1829  0369  07F5               	addwf	strcmp@s1,f
  1830  036A  3001               	movlw	1
  1831  036B  07F1               	addwf	strcmp@s2,f
  1832  036C  3000               	movlw	0
  1833  036D  3DF2               	addwfc	strcmp@s2+1,f
  1834  036E                     l1212:	
  1835  036E  0875               	movf	strcmp@s1,w
  1836  036F  0086               	movwf	6
  1837  0370  0187               	clrf	7
  1838  0371  0871               	movf	strcmp@s2,w
  1839  0372  0084               	movwf	4
  1840  0373  0872               	movf	strcmp@s2+1,w
  1841  0374  0085               	movwf	5
  1842  0375  0800               	movf	0,w	;code access
  1843  0376  3AFF               	xorlw	255
  1844  0377  3E01               	addlw	1
  1845  0378  0701               	addwf	1,w
  1846  0379  00F3               	movwf	??_strcmp
  1847  037A  0873               	movf	??_strcmp,w
  1848  037B  00F4               	movwf	strcmp@r
  1849  037C  0874               	movf	strcmp@r,w
  1850  037D  1D03               	btfss	3,2
  1851  037E  2B85               	goto	l1216
  1852  037F  0875               	movf	strcmp@s1,w
  1853  0380  0086               	movwf	6
  1854  0381  0187               	clrf	7
  1855  0382  0801               	movf	1,w
  1856  0383  1D03               	btfss	3,2
  1857  0384  2B66               	goto	l1210
  1858  0385                     l1216:	
  1859  0385  0874               	movf	strcmp@r,w
  1860  0386  00F1               	movwf	?_strcmp
  1861  0387  01F2               	clrf	?_strcmp+1
  1862  0388  1BF1               	btfsc	?_strcmp,7
  1863  0389  03F2               	decf	?_strcmp+1,f
  1864  038A  0008               	return
  1865  038B                     __end_of_strcmp:	
  1866                           
  1867                           	psect	text4
  1868  056D                     __ptext4:	
  1869 ;; *************** function _serialReadBT *****************
  1870 ;; Defined at:
  1871 ;;		line 239 in file "main.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      unsigned char 
  1878 ;; Registers used:
  1879 ;;		wreg
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1885 ;;      Params:         0       0       0       0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0
  1888 ;;      Totals:         0       0       0       0       0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_waitForCommand
  1896 ;;		_serialFindBT
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _serialReadBT
  1902  056D                     _serialReadBT:	
  1903  056D                     l148:	
  1904                           ;main.c: 240: while (!PIR3bits.RC2IF) {
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _serialReadBT: [wreg]
  1908                           
  1909  056D  014E               	movlb	14	; select bank14
  1910  056E  1F8F               	btfss	15,7	;volatile
  1911  056F  2D6D               	goto	l148
  1912                           
  1913                           ;main.c: 241: }
  1914                           ;main.c: 242: if (1 == RC2STAbits.OERR) {
  1915  0570  0154               	movlb	20	; select bank20
  1916  0571  1C9D               	btfss	29,1	;volatile
  1917  0572  2D75               	goto	l1108
  1918                           
  1919                           ;main.c: 243: RC2STAbits.SPEN = 0;
  1920  0573  139D               	bcf	29,7	;volatile
  1921                           
  1922                           ;main.c: 244: RC2STAbits.SPEN = 1;
  1923  0574  179D               	bsf	29,7	;volatile
  1924  0575                     l1108:	
  1925                           
  1926                           ;main.c: 245: }
  1927                           ;main.c: 246: return RC2REG;
  1928  0575  0819               	movf	25,w	;volatile
  1929  0576  0008               	return
  1930  0577                     __end_of_serialReadBT:	
  1931                           
  1932                           	psect	text5
  1933  0402                     __ptext5:	
  1934 ;; *************** function _sendSigfox *****************
  1935 ;; Defined at:
  1936 ;;		line 377 in file "main.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  hexMessage      2    7[COMMON] PTR unsigned char 
  1939 ;;		 -> waitForCommand@message(30), STR_29(15), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1951 ;;      Params:         2       0       0       0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0
  1954 ;;      Totals:         2       0       0       0       0       0       0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    3
  1958 ;; This function calls:
  1959 ;;		_serialPrintPeripheral
  1960 ;;		_setActivePeripheral
  1961 ;; This function is called by:
  1962 ;;		_waitForCommand
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _sendSigfox
  1968  0402                     _sendSigfox:	
  1969                           
  1970                           ;main.c: 378: setActivePeripheral(sigfox);
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _sendSigfox: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1974  0402  3002               	movlw	2
  1975  0403  3182  222C  3184   	fcall	_setActivePeripheral
  1976                           
  1977                           ;main.c: 379: serialPrintPeripheral("AT$SF=");
  1978  0406  30A2               	movlw	low (STR_16| (0+32768))
  1979  0407  00F2               	movwf	serialPrintPeripheral@s
  1980  0408  3085               	movlw	high (STR_16| (0+32768))
  1981  0409  00F3               	movwf	serialPrintPeripheral@s+1
  1982  040A  3183  23CE  3184   	fcall	_serialPrintPeripheral
  1983                           
  1984                           ;main.c: 380: serialPrintPeripheral(hexMessage);
  1985  040D  0878               	movf	sendSigfox@hexMessage+1,w
  1986  040E  00F3               	movwf	serialPrintPeripheral@s+1
  1987  040F  0877               	movf	sendSigfox@hexMessage,w
  1988  0410  00F2               	movwf	serialPrintPeripheral@s
  1989  0411  3183  23CE  3184   	fcall	_serialPrintPeripheral
  1990                           
  1991                           ;main.c: 381: serialPrintPeripheral("\r\n");
  1992  0414  30B6               	movlw	low ((STR_20+1)| (0+32768))
  1993  0415  00F2               	movwf	serialPrintPeripheral@s
  1994  0416  3085               	movlw	high ((STR_20+1)| (0+32768))
  1995  0417  00F3               	movwf	serialPrintPeripheral@s+1
  1996  0418  3183  23CE         	fcall	_serialPrintPeripheral
  1997  041A  0008               	return
  1998  041B                     __end_of_sendSigfox:	
  1999                           
  2000                           	psect	text6
  2001  01B8                     __ptext6:	
  2002 ;; *************** function _sendSMS *****************
  2003 ;; Defined at:
  2004 ;;		line 384 in file "main.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  number          2    7[COMMON] PTR unsigned char 
  2007 ;;		 -> STR_35(7), 
  2008 ;;  message         2    9[COMMON] PTR unsigned char 
  2009 ;;		 -> STR_36(12), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2021 ;;      Params:         4       0       0       0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0       0
  2023 ;;      Temps:          0       2       0       0       0       0       0       0
  2024 ;;      Totals:         4       2       0       0       0       0       0       0
  2025 ;;Total ram usage:        6 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    3
  2028 ;; This function calls:
  2029 ;;		_serialPrintPeripheral
  2030 ;;		_serialWritePeripheral
  2031 ;;		_setActivePeripheral
  2032 ;; This function is called by:
  2033 ;;		_waitForCommand
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function _sendSMS
  2039  01B8                     _sendSMS:	
  2040                           
  2041                           ;main.c: 386: setActivePeripheral(gsm);
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in _sendSMS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2045  01B8  3003               	movlw	3
  2046  01B9  3182  222C  3181   	fcall	_setActivePeripheral
  2047                           
  2048                           ;main.c: 387: serialPrintPeripheral("AT+CMGF=1\r\n");
  2049  01BC  30BE               	movlw	low (STR_18| (0+32768))
  2050  01BD  00F2               	movwf	serialPrintPeripheral@s
  2051  01BE  3084               	movlw	high (STR_18| (0+32768))
  2052  01BF  00F3               	movwf	serialPrintPeripheral@s+1
  2053  01C0  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2054                           
  2055                           ;main.c: 388: _delay((unsigned long)((2000)*(32000000/4000.0)));
  2056  01C3  3052               	movlw	82
  2057  01C4  0140               	movlb	0	; select bank0
  2058  01C5  00A1               	movwf	??_sendSMS+1
  2059  01C6  302B               	movlw	43
  2060  01C7  00A0               	movwf	??_sendSMS
  2061  01C8  3000               	movlw	0
  2062  01C9                     u1057:	
  2063  01C9  0B89               	decfsz	9,f
  2064  01CA  29C9               	goto	u1057
  2065  01CB  0BA0               	decfsz	??_sendSMS,f
  2066  01CC  29C9               	goto	u1057
  2067  01CD  0BA1               	decfsz	??_sendSMS+1,f
  2068  01CE  29C9               	goto	u1057
  2069  01CF  0000               	nop
  2070                           
  2071                           ;main.c: 389: serialPrintPeripheral("AT+CMGS=\"");
  2072  01D0  3063               	movlw	low (STR_19| (0+32768))
  2073  01D1  00F2               	movwf	serialPrintPeripheral@s
  2074  01D2  3085               	movlw	high (STR_19| (0+32768))
  2075  01D3  00F3               	movwf	serialPrintPeripheral@s+1
  2076  01D4  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2077                           
  2078                           ;main.c: 390: serialPrintPeripheral(number);
  2079  01D7  0878               	movf	sendSMS@number+1,w
  2080  01D8  00F3               	movwf	serialPrintPeripheral@s+1
  2081  01D9  0877               	movf	sendSMS@number,w
  2082  01DA  00F2               	movwf	serialPrintPeripheral@s
  2083  01DB  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2084                           
  2085                           ;main.c: 391: serialPrintPeripheral("\"\r\n");
  2086  01DE  30B5               	movlw	low (STR_20| (0+32768))
  2087  01DF  00F2               	movwf	serialPrintPeripheral@s
  2088  01E0  3085               	movlw	high (STR_20| (0+32768))
  2089  01E1  00F3               	movwf	serialPrintPeripheral@s+1
  2090  01E2  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2091                           
  2092                           ;main.c: 392: _delay((unsigned long)((3000)*(32000000/4000.0)));
  2093  01E5  307A               	movlw	122
  2094  01E6  0140               	movlb	0	; select bank0
  2095  01E7  00A1               	movwf	??_sendSMS+1
  2096  01E8  30C1               	movlw	193
  2097  01E9  00A0               	movwf	??_sendSMS
  2098  01EA  3081               	movlw	129
  2099  01EB                     u1067:	
  2100  01EB  0B89               	decfsz	9,f
  2101  01EC  29EB               	goto	u1067
  2102  01ED  0BA0               	decfsz	??_sendSMS,f
  2103  01EE  29EB               	goto	u1067
  2104  01EF  0BA1               	decfsz	??_sendSMS+1,f
  2105  01F0  29EB               	goto	u1067
  2106  01F1  3200               	nop2
  2107                           
  2108                           ;main.c: 393: serialPrintPeripheral(message);
  2109  01F2  087A               	movf	sendSMS@message+1,w
  2110  01F3  00F3               	movwf	serialPrintPeripheral@s+1
  2111  01F4  0879               	movf	sendSMS@message,w
  2112  01F5  00F2               	movwf	serialPrintPeripheral@s
  2113  01F6  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2114                           
  2115                           ;main.c: 394: _delay((unsigned long)((500)*(32000000/4000.0)));
  2116  01F9  3015               	movlw	21
  2117  01FA  0140               	movlb	0	; select bank0
  2118  01FB  00A1               	movwf	??_sendSMS+1
  2119  01FC  304B               	movlw	75
  2120  01FD  00A0               	movwf	??_sendSMS
  2121  01FE  30BE               	movlw	190
  2122  01FF                     u1077:	
  2123  01FF  0B89               	decfsz	9,f
  2124  0200  29FF               	goto	u1077
  2125  0201  0BA0               	decfsz	??_sendSMS,f
  2126  0202  29FF               	goto	u1077
  2127  0203  0BA1               	decfsz	??_sendSMS+1,f
  2128  0204  29FF               	goto	u1077
  2129  0205  0000               	nop
  2130                           
  2131                           ;main.c: 395: serialWritePeripheral('\x1A');
  2132  0206  301A               	movlw	26
  2133  0207  3185  2592  3181   	fcall	_serialWritePeripheral
  2134                           
  2135                           ;main.c: 396: _delay((unsigned long)((100)*(32000000/4000.0)));
  2136  020A  3005               	movlw	5
  2137  020B  0140               	movlb	0	; select bank0
  2138  020C  00A1               	movwf	??_sendSMS+1
  2139  020D  300F               	movlw	15
  2140  020E  00A0               	movwf	??_sendSMS
  2141  020F  30F1               	movlw	241
  2142  0210                     u1087:	
  2143  0210  0B89               	decfsz	9,f
  2144  0211  2A10               	goto	u1087
  2145  0212  0BA0               	decfsz	??_sendSMS,f
  2146  0213  2A10               	goto	u1087
  2147  0214  0BA1               	decfsz	??_sendSMS+1,f
  2148  0215  2A10               	goto	u1087
  2149                           
  2150                           ;main.c: 397: serialPrintPeripheral("\r\n");
  2151  0216  30B6               	movlw	low ((STR_20+1)| (0+32768))
  2152  0217  00F2               	movwf	serialPrintPeripheral@s
  2153  0218  3085               	movlw	high ((STR_20+1)| (0+32768))
  2154  0219  00F3               	movwf	serialPrintPeripheral@s+1
  2155  021A  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2156                           
  2157                           ;main.c: 398: TRISB7 = 1;
  2158  021D  0140               	movlb	0	; select bank0
  2159  021E  1793               	bsf	19,7	;volatile
  2160                           
  2161                           ;main.c: 399: _delay((unsigned long)((100)*(32000000/4000.0)));
  2162  021F  3005               	movlw	5
  2163  0220  0140               	movlb	0	; select bank0
  2164  0221  00A1               	movwf	??_sendSMS+1
  2165  0222  300F               	movlw	15
  2166  0223  00A0               	movwf	??_sendSMS
  2167  0224  30F1               	movlw	241
  2168  0225                     u1097:	
  2169  0225  0B89               	decfsz	9,f
  2170  0226  2A25               	goto	u1097
  2171  0227  0BA0               	decfsz	??_sendSMS,f
  2172  0228  2A25               	goto	u1097
  2173  0229  0BA1               	decfsz	??_sendSMS+1,f
  2174  022A  2A25               	goto	u1097
  2175  022B  0008               	return
  2176  022C                     __end_of_sendSMS:	
  2177                           
  2178                           	psect	text7
  2179  0285                     __ptext7:	
  2180 ;; *************** function _getWiFiData *****************
  2181 ;; Defined at:
  2182 ;;		line 286 in file "main.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2196 ;;      Params:         0       0       0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0
  2198 ;;      Temps:          2       0       0       0       0       0       0       0
  2199 ;;      Totals:         2       0       0       0       0       0       0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    3
  2203 ;; This function calls:
  2204 ;;		_serialPrintBT
  2205 ;;		_serialPrintPeripheral
  2206 ;;		_serialReadPeripheral
  2207 ;;		_serialWriteBT
  2208 ;;		_setActivePeripheral
  2209 ;;		_startTimer
  2210 ;; This function is called by:
  2211 ;;		_waitForCommand
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _getWiFiData
  2217  0285                     _getWiFiData:	
  2218                           
  2219                           ;main.c: 287: serialPrintBT("WIFI_START\r\n");
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _getWiFiData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2223  0285  30A4               	movlw	low (STR_1| (0+32768))
  2224  0286  00F2               	movwf	serialPrintBT@s
  2225  0287  3084               	movlw	high (STR_1| (0+32768))
  2226  0288  00F3               	movwf	serialPrintBT@s+1
  2227  0289  3183  23E8  3182   	fcall	_serialPrintBT
  2228                           
  2229                           ;main.c: 288: setActivePeripheral(wifi);
  2230  028C  3001               	movlw	1
  2231  028D  3182  222C  3182   	fcall	_setActivePeripheral
  2232                           
  2233                           ;main.c: 289: serialPrintPeripheral("AT+CWLAPOPT=1,12\r\n");
  2234  0290  3047               	movlw	low (STR_2| (0+32768))
  2235  0291  00F2               	movwf	serialPrintPeripheral@s
  2236  0292  3084               	movlw	high (STR_2| (0+32768))
  2237  0293  00F3               	movwf	serialPrintPeripheral@s+1
  2238  0294  3183  23CE  3182   	fcall	_serialPrintPeripheral
  2239                           
  2240                           ;main.c: 290: _delay((unsigned long)((500)*(32000000/4000.0)));
  2241  0297  3015               	movlw	21
  2242  0298  00F8               	movwf	??_getWiFiData+1
  2243  0299  304B               	movlw	75
  2244  029A  00F7               	movwf	??_getWiFiData
  2245  029B  30BE               	movlw	190
  2246  029C                     u1107:	
  2247  029C  0B89               	decfsz	9,f
  2248  029D  2A9C               	goto	u1107
  2249  029E  0BF7               	decfsz	??_getWiFiData,f
  2250  029F  2A9C               	goto	u1107
  2251  02A0  0BF8               	decfsz	??_getWiFiData+1,f
  2252  02A1  2A9C               	goto	u1107
  2253  02A2  3200               	nop2
  2254                           
  2255                           ;main.c: 291: serialPrintPeripheral("AT+CWLAP\r\n");
  2256  02A3  301B               	movlw	low (STR_3| (0+32768))
  2257  02A4  00F2               	movwf	serialPrintPeripheral@s
  2258  02A5  3085               	movlw	high (STR_3| (0+32768))
  2259  02A6  00F3               	movwf	serialPrintPeripheral@s+1
  2260  02A7  3183  23CE  3182   	fcall	_serialPrintPeripheral
  2261                           
  2262                           ;main.c: 292: _delay((unsigned long)((10)*(32000000/4000.0)));
  2263  02AA  3068               	movlw	104
  2264  02AB  00F7               	movwf	??_getWiFiData
  2265  02AC  30E4               	movlw	228
  2266  02AD                     u1117:	
  2267  02AD  0B89               	decfsz	9,f
  2268  02AE  2AAD               	goto	u1117
  2269  02AF  0BF7               	decfsz	??_getWiFiData,f
  2270  02B0  2AAD               	goto	u1117
  2271  02B1  3200               	nop2
  2272                           
  2273                           ;main.c: 294: serialReadPeripheral();
  2274  02B2  3185  2577  3182   	fcall	_serialReadPeripheral
  2275                           
  2276                           ;main.c: 296: startTimer(3);
  2277  02B5  3003               	movlw	3
  2278  02B6  00F1               	movwf	startTimer@seconds
  2279  02B7  3000               	movlw	0
  2280  02B8  00F2               	movwf	startTimer@seconds+1
  2281  02B9  3184  245A  3182   	fcall	_startTimer
  2282  02BC                     l1124:	
  2283                           ;main.c: 297: while (!timerDone) {
  2284                           
  2285  02BC  087C               	movf	_timerDone,w
  2286  02BD  1D03               	btfss	3,2
  2287  02BE  2AC9               	goto	l1126
  2288                           
  2289                           ;main.c: 298: if (PIR3bits.RC1IF) {
  2290  02BF  014E               	movlb	14	; select bank14
  2291  02C0  1E8F               	btfss	15,5	;volatile
  2292  02C1  2ABC               	goto	l1124
  2293                           
  2294                           ;main.c: 299: serialWriteBT(serialReadPeripheral());
  2295  02C2  3185  2577  3182   	fcall	_serialReadPeripheral
  2296  02C5  3185  259A  3182   	fcall	_serialWriteBT
  2297  02C8  2ABC               	goto	l1124
  2298  02C9                     l1126:	
  2299                           
  2300                           ;main.c: 300: }
  2301                           ;main.c: 301: }
  2302                           ;main.c: 302: serialPrintBT("WIFI_END\r\n");
  2303  02C9  3005               	movlw	low (STR_4| (0+32768))
  2304  02CA  00F2               	movwf	serialPrintBT@s
  2305  02CB  3085               	movlw	high (STR_4| (0+32768))
  2306  02CC  00F3               	movwf	serialPrintBT@s+1
  2307  02CD  3183  23E8  3182   	fcall	_serialPrintBT
  2308                           
  2309                           ;main.c: 303: _delay((unsigned long)((10)*(32000000/4000.0)));
  2310  02D0  3068               	movlw	104
  2311  02D1  00F7               	movwf	??_getWiFiData
  2312  02D2  30E4               	movlw	228
  2313  02D3                     u1127:	
  2314  02D3  0B89               	decfsz	9,f
  2315  02D4  2AD3               	goto	u1127
  2316  02D5  0BF7               	decfsz	??_getWiFiData,f
  2317  02D6  2AD3               	goto	u1127
  2318  02D7  3200               	nop2
  2319  02D8  0008               	return
  2320  02D9                     __end_of_getWiFiData:	
  2321                           
  2322                           	psect	text8
  2323  0141                     __ptext8:	
  2324 ;; *************** function _getGSMData *****************
  2325 ;; Defined at:
  2326 ;;		line 306 in file "main.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2340 ;;      Params:         0       0       0       0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0
  2342 ;;      Temps:          2       0       0       0       0       0       0       0
  2343 ;;      Totals:         2       0       0       0       0       0       0       0
  2344 ;;Total ram usage:        2 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    3
  2347 ;; This function calls:
  2348 ;;		_serialPrintBT
  2349 ;;		_serialPrintPeripheral
  2350 ;;		_serialReadPeripheral
  2351 ;;		_serialWriteBT
  2352 ;;		_setActivePeripheral
  2353 ;;		_startTimer
  2354 ;; This function is called by:
  2355 ;;		_waitForCommand
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _getGSMData
  2361  0141                     _getGSMData:	
  2362                           
  2363                           ;main.c: 307: serialPrintBT("GSM_START\r\n");
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _getGSMData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2367  0141  30D6               	movlw	low (STR_5| (0+32768))
  2368  0142  00F2               	movwf	serialPrintBT@s
  2369  0143  3084               	movlw	high (STR_5| (0+32768))
  2370  0144  00F3               	movwf	serialPrintBT@s+1
  2371  0145  3183  23E8  3181   	fcall	_serialPrintBT
  2372                           
  2373                           ;main.c: 309: setActivePeripheral(gsm);
  2374  0148  3003               	movlw	3
  2375  0149  3182  222C  3181   	fcall	_setActivePeripheral
  2376                           
  2377                           ;main.c: 310: serialPrintPeripheral("AT+CREG=2\r\n");
  2378  014C  30CA               	movlw	low (STR_6| (0+32768))
  2379  014D  00F2               	movwf	serialPrintPeripheral@s
  2380  014E  3084               	movlw	high (STR_6| (0+32768))
  2381  014F  00F3               	movwf	serialPrintPeripheral@s+1
  2382  0150  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2383                           
  2384                           ;main.c: 311: _delay((unsigned long)((500)*(32000000/4000.0)));
  2385  0153  3015               	movlw	21
  2386  0154  00F8               	movwf	??_getGSMData+1
  2387  0155  304B               	movlw	75
  2388  0156  00F7               	movwf	??_getGSMData
  2389  0157  30BE               	movlw	190
  2390  0158                     u1137:	
  2391  0158  0B89               	decfsz	9,f
  2392  0159  2958               	goto	u1137
  2393  015A  0BF7               	decfsz	??_getGSMData,f
  2394  015B  2958               	goto	u1137
  2395  015C  0BF8               	decfsz	??_getGSMData+1,f
  2396  015D  2958               	goto	u1137
  2397  015E  3200               	nop2
  2398                           
  2399                           ;main.c: 312: serialPrintPeripheral("AT+CSQ\r\n");
  2400  015F  3081               	movlw	low (STR_7| (0+32768))
  2401  0160  00F2               	movwf	serialPrintPeripheral@s
  2402  0161  3085               	movlw	high (STR_7| (0+32768))
  2403  0162  00F3               	movwf	serialPrintPeripheral@s+1
  2404  0163  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2405                           
  2406                           ;main.c: 313: _delay((unsigned long)((10)*(32000000/4000.0)));
  2407  0166  3068               	movlw	104
  2408  0167  00F7               	movwf	??_getGSMData
  2409  0168  30E4               	movlw	228
  2410  0169                     u1147:	
  2411  0169  0B89               	decfsz	9,f
  2412  016A  2969               	goto	u1147
  2413  016B  0BF7               	decfsz	??_getGSMData,f
  2414  016C  2969               	goto	u1147
  2415  016D  3200               	nop2
  2416                           
  2417                           ;main.c: 314: serialReadPeripheral();
  2418  016E  3185  2577  3181   	fcall	_serialReadPeripheral
  2419                           
  2420                           ;main.c: 316: startTimer(1);
  2421  0171  3001               	movlw	1
  2422  0172  00F1               	movwf	startTimer@seconds
  2423  0173  3000               	movlw	0
  2424  0174  00F2               	movwf	startTimer@seconds+1
  2425  0175  3184  245A  3181   	fcall	_startTimer
  2426  0178                     l1142:	
  2427                           ;main.c: 317: while (!timerDone) {
  2428                           
  2429  0178  087C               	movf	_timerDone,w
  2430  0179  1D03               	btfss	3,2
  2431  017A  2985               	goto	l1144
  2432                           
  2433                           ;main.c: 318: if (PIR3bits.RC1IF) {
  2434  017B  014E               	movlb	14	; select bank14
  2435  017C  1E8F               	btfss	15,5	;volatile
  2436  017D  2978               	goto	l1142
  2437                           
  2438                           ;main.c: 319: serialWriteBT(serialReadPeripheral());
  2439  017E  3185  2577  3181   	fcall	_serialReadPeripheral
  2440  0181  3185  259A  3181   	fcall	_serialWriteBT
  2441  0184  2978               	goto	l1142
  2442  0185                     l1144:	
  2443                           
  2444                           ;main.c: 320: }
  2445                           ;main.c: 321: }
  2446                           ;main.c: 323: serialPrintPeripheral("AT+CREG?\r\n");
  2447  0185  30FA               	movlw	low (STR_8| (0+32768))
  2448  0186  00F2               	movwf	serialPrintPeripheral@s
  2449  0187  3084               	movlw	high (STR_8| (0+32768))
  2450  0188  00F3               	movwf	serialPrintPeripheral@s+1
  2451  0189  3183  23CE  3181   	fcall	_serialPrintPeripheral
  2452                           
  2453                           ;main.c: 324: _delay((unsigned long)((10)*(32000000/4000.0)));
  2454  018C  3068               	movlw	104
  2455  018D  00F7               	movwf	??_getGSMData
  2456  018E  30E4               	movlw	228
  2457  018F                     u1157:	
  2458  018F  0B89               	decfsz	9,f
  2459  0190  298F               	goto	u1157
  2460  0191  0BF7               	decfsz	??_getGSMData,f
  2461  0192  298F               	goto	u1157
  2462  0193  3200               	nop2
  2463                           
  2464                           ;main.c: 326: startTimer(1);
  2465  0194  3001               	movlw	1
  2466  0195  00F1               	movwf	startTimer@seconds
  2467  0196  3000               	movlw	0
  2468  0197  00F2               	movwf	startTimer@seconds+1
  2469  0198  3184  245A  3181   	fcall	_startTimer
  2470  019B                     l1152:	
  2471                           ;main.c: 327: while (!timerDone) {
  2472                           
  2473  019B  087C               	movf	_timerDone,w
  2474  019C  1D03               	btfss	3,2
  2475  019D  29A8               	goto	l1154
  2476                           
  2477                           ;main.c: 328: if (PIR3bits.RC1IF) {
  2478  019E  014E               	movlb	14	; select bank14
  2479  019F  1E8F               	btfss	15,5	;volatile
  2480  01A0  299B               	goto	l1152
  2481                           
  2482                           ;main.c: 329: serialWriteBT(serialReadPeripheral());
  2483  01A1  3185  2577  3181   	fcall	_serialReadPeripheral
  2484  01A4  3185  259A  3181   	fcall	_serialWriteBT
  2485  01A7  299B               	goto	l1152
  2486  01A8                     l1154:	
  2487                           
  2488                           ;main.c: 330: }
  2489                           ;main.c: 331: }
  2490                           ;main.c: 333: serialPrintBT("GSM_END\r\n");
  2491  01A8  3031               	movlw	low (STR_9| (0+32768))
  2492  01A9  00F2               	movwf	serialPrintBT@s
  2493  01AA  3085               	movlw	high (STR_9| (0+32768))
  2494  01AB  00F3               	movwf	serialPrintBT@s+1
  2495  01AC  3183  23E8  3181   	fcall	_serialPrintBT
  2496                           
  2497                           ;main.c: 334: _delay((unsigned long)((10)*(32000000/4000.0)));
  2498  01AF  3068               	movlw	104
  2499  01B0  00F7               	movwf	??_getGSMData
  2500  01B1  30E4               	movlw	228
  2501  01B2                     u1167:	
  2502  01B2  0B89               	decfsz	9,f
  2503  01B3  29B2               	goto	u1167
  2504  01B4  0BF7               	decfsz	??_getGSMData,f
  2505  01B5  29B2               	goto	u1167
  2506  01B6  3200               	nop2
  2507  01B7  0008               	return
  2508  01B8                     __end_of_getGSMData:	
  2509                           
  2510                           	psect	text9
  2511  03CE                     __ptext9:	
  2512 ;; *************** function _serialPrintPeripheral *****************
  2513 ;; Defined at:
  2514 ;;		line 138 in file "main.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  s               2    2[COMMON] PTR unsigned char 
  2517 ;;		 -> STR_36(12), STR_35(7), waitForCommand@message(30), STR_29(15), 
  2518 ;;		 -> STR_21(3), STR_20(4), STR_19(10), STR_18(12), 
  2519 ;;		 -> STR_17(3), STR_16(7), STR_14(5), STR_8(11), 
  2520 ;;		 -> STR_7(9), STR_6(12), STR_3(11), STR_2(19), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  i               2    5[COMMON] int 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2532 ;;      Params:         2       0       0       0       0       0       0       0
  2533 ;;      Locals:         2       0       0       0       0       0       0       0
  2534 ;;      Temps:          1       0       0       0       0       0       0       0
  2535 ;;      Totals:         5       0       0       0       0       0       0       0
  2536 ;;Total ram usage:        5 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    2
  2539 ;; This function calls:
  2540 ;;		_serialWritePeripheral
  2541 ;; This function is called by:
  2542 ;;		_getWiFiData
  2543 ;;		_getGSMData
  2544 ;;		_sendSigfox
  2545 ;;		_sendSMS
  2546 ;;		_getSigfoxData
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function _serialPrintPeripheral
  2552  03CE                     _serialPrintPeripheral:	
  2553                           
  2554                           ;main.c: 139: int i = 0;
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _serialPrintPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2558  03CE  01F5               	clrf	serialPrintPeripheral@i
  2559  03CF  01F6               	clrf	serialPrintPeripheral@i+1
  2560  03D0                     l1068:	
  2561                           ;main.c: 140: while (s[i] != '\0') {
  2562                           
  2563  03D0  0872               	movf	serialPrintPeripheral@s,w
  2564  03D1  0775               	addwf	serialPrintPeripheral@i,w
  2565  03D2  0084               	movwf	4
  2566  03D3  0873               	movf	serialPrintPeripheral@s+1,w
  2567  03D4  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2568  03D5  0085               	movwf	5
  2569  03D6  0012               	moviw fsr0++
  2570  03D7  1903               	btfsc	3,2
  2571  03D8  0008               	return
  2572                           
  2573                           ;main.c: 141: serialWritePeripheral(s[i]);
  2574  03D9  0872               	movf	serialPrintPeripheral@s,w
  2575  03DA  0775               	addwf	serialPrintPeripheral@i,w
  2576  03DB  0084               	movwf	4
  2577  03DC  0873               	movf	serialPrintPeripheral@s+1,w
  2578  03DD  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2579  03DE  0085               	movwf	5
  2580  03DF  0800               	movf	0,w	;code access
  2581  03E0  3185  2592  3183   	fcall	_serialWritePeripheral
  2582                           
  2583                           ;main.c: 142: i++;
  2584  03E3  3001               	movlw	1
  2585  03E4  07F5               	addwf	serialPrintPeripheral@i,f
  2586  03E5  3000               	movlw	0
  2587  03E6  3DF6               	addwfc	serialPrintPeripheral@i+1,f
  2588  03E7  2BD0               	goto	l1068
  2589  03E8                     __end_of_serialPrintPeripheral:	
  2590                           
  2591                           	psect	text10
  2592  0592                     __ptext10:	
  2593 ;; *************** function _serialWritePeripheral *****************
  2594 ;; Defined at:
  2595 ;;		line 132 in file "main.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  c               1    wreg     unsigned char 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  c               1    1[COMMON] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2609 ;;      Params:         0       0       0       0       0       0       0       0
  2610 ;;      Locals:         1       0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0
  2612 ;;      Totals:         1       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        1 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_serialPrintPeripheral
  2620 ;;		_sendSMS
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _serialWritePeripheral
  2626  0592                     _serialWritePeripheral:	
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in _serialWritePeripheral: [wreg]
  2630                           ;serialWritePeripheral@c stored from wreg
  2631  0592  00F1               	movwf	serialWritePeripheral@c
  2632  0593                     l100:	
  2633                           ;main.c: 133: while (!PIR3bits.TX1IF) {
  2634                           
  2635  0593  014E               	movlb	14	; select bank14
  2636  0594  1E0F               	btfss	15,4	;volatile
  2637  0595  2D93               	goto	l100
  2638                           
  2639                           ;main.c: 134: }
  2640                           ;main.c: 135: TX1REG = c;
  2641  0596  0871               	movf	serialWritePeripheral@c,w
  2642  0597  0142               	movlb	2	; select bank2
  2643  0598  009A               	movwf	26	;volatile
  2644  0599  0008               	return
  2645  059A                     __end_of_serialWritePeripheral:	
  2646                           
  2647                           	psect	text11
  2648  02D9                     __ptext11:	
  2649 ;; *************** function _getGPSData *****************
  2650 ;; Defined at:
  2651 ;;		line 337 in file "main.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  c               1    9[COMMON] unsigned char 
  2656 ;;  found           1    8[COMMON] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2666 ;;      Params:         0       0       0       0       0       0       0       0
  2667 ;;      Locals:         2       0       0       0       0       0       0       0
  2668 ;;      Temps:          1       0       0       0       0       0       0       0
  2669 ;;      Totals:         3       0       0       0       0       0       0       0
  2670 ;;Total ram usage:        3 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    3
  2673 ;; This function calls:
  2674 ;;		_serialFindPeripheral
  2675 ;;		_serialPrintBT
  2676 ;;		_serialReadPeripheral
  2677 ;;		_serialWriteBT
  2678 ;;		_setActivePeripheral
  2679 ;;		_startTimer
  2680 ;; This function is called by:
  2681 ;;		_waitForCommand
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _getGPSData
  2687  02D9                     _getGPSData:	
  2688                           
  2689                           ;main.c: 338: setActivePeripheral(gps);
  2690                           
  2691                           ;incstack = 0
  2692                           ; Regs used in _getGPSData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2693  02D9  3000               	movlw	0
  2694  02DA  3182  222C  3182   	fcall	_setActivePeripheral
  2695                           
  2696                           ;main.c: 339: serialPrintBT("GPS_START\r\n");
  2697  02DD  30E2               	movlw	low (STR_10| (0+32768))
  2698  02DE  00F2               	movwf	serialPrintBT@s
  2699  02DF  3084               	movlw	high (STR_10| (0+32768))
  2700  02E0  00F3               	movwf	serialPrintBT@s+1
  2701  02E1  3183  23E8  3182   	fcall	_serialPrintBT
  2702                           
  2703                           ;main.c: 340: char found = 0;
  2704  02E4  01F8               	clrf	getGPSData@found
  2705                           
  2706                           ;main.c: 341: startTimer(3);
  2707  02E5  3003               	movlw	3
  2708  02E6  00F1               	movwf	startTimer@seconds
  2709  02E7  3000               	movlw	0
  2710  02E8  00F2               	movwf	startTimer@seconds+1
  2711  02E9  3184  245A  3182   	fcall	_startTimer
  2712                           
  2713                           ;main.c: 342: while (!timerDone && !found) {
  2714  02EC  2B0F               	goto	l1174
  2715  02ED                     l192:	
  2716                           
  2717                           ;main.c: 343: if (PIR3bits.RC1IF) {
  2718  02ED  014E               	movlb	14	; select bank14
  2719  02EE  1E8F               	btfss	15,5	;volatile
  2720  02EF  2B0F               	goto	l1174
  2721                           
  2722                           ;main.c: 344: if (serialFindPeripheral("$GPGGA,")) {
  2723  02F0  308A               	movlw	low (STR_11| (0+32768))
  2724  02F1  00F1               	movwf	serialFindPeripheral@s
  2725  02F2  3085               	movlw	high (STR_11| (0+32768))
  2726  02F3  00F2               	movwf	serialFindPeripheral@s+1
  2727  02F4  3183  238B  3182   	fcall	_serialFindPeripheral
  2728  02F7  3A00               	xorlw	0
  2729  02F8  1903               	skipnz
  2730  02F9  2B0F               	goto	l1174
  2731                           
  2732                           ;main.c: 345: char c = 'c';
  2733  02FA  3063               	movlw	99
  2734  02FB  00F7               	movwf	??_getGPSData
  2735  02FC  0877               	movf	??_getGPSData,w
  2736  02FD  00F9               	movwf	getGPSData@c
  2737  02FE                     l1172:	
  2738                           ;main.c: 346: while (c != '\n') {
  2739                           
  2740  02FE  300A               	movlw	10
  2741  02FF  0679               	xorwf	getGPSData@c,w
  2742  0300  1903               	btfsc	3,2
  2743  0301  2B0D               	goto	l197
  2744                           
  2745                           ;main.c: 347: c = serialReadPeripheral();
  2746  0302  3185  2577  3182   	fcall	_serialReadPeripheral
  2747  0305  00F7               	movwf	??_getGPSData
  2748  0306  0877               	movf	??_getGPSData,w
  2749  0307  00F9               	movwf	getGPSData@c
  2750                           
  2751                           ;main.c: 348: serialWriteBT(c);
  2752  0308  0879               	movf	getGPSData@c,w
  2753  0309  3185  259A  3182   	fcall	_serialWriteBT
  2754  030C  2AFE               	goto	l1172
  2755  030D                     l197:	
  2756                           
  2757                           ;main.c: 349: }
  2758                           ;main.c: 350: found = 1;
  2759  030D  01F8               	clrf	getGPSData@found
  2760  030E  0AF8               	incf	getGPSData@found,f
  2761  030F                     l1174:	
  2762  030F  087C               	movf	_timerDone,w
  2763  0310  1903               	btfsc	3,2
  2764  0311  0878               	movf	getGPSData@found,w
  2765  0312  1903               	btfsc	3,2
  2766  0313  2AED               	goto	l192
  2767                           
  2768                           ;main.c: 351: }
  2769                           ;main.c: 352: }
  2770                           ;main.c: 353: }
  2771                           ;main.c: 354: serialPrintBT("GPS_END\r\n");
  2772  0314  303B               	movlw	low (STR_12| (0+32768))
  2773  0315  00F2               	movwf	serialPrintBT@s
  2774  0316  3085               	movlw	high (STR_12| (0+32768))
  2775  0317  00F3               	movwf	serialPrintBT@s+1
  2776  0318  3183  23E8  3182   	fcall	_serialPrintBT
  2777                           
  2778                           ;main.c: 355: _delay((unsigned long)((10)*(32000000/4000.0)));
  2779  031B  3068               	movlw	104
  2780  031C  00F7               	movwf	??_getGPSData
  2781  031D  30E4               	movlw	228
  2782  031E                     u1177:	
  2783  031E  0B89               	decfsz	9,f
  2784  031F  2B1E               	goto	u1177
  2785  0320  0BF7               	decfsz	??_getGPSData,f
  2786  0321  2B1E               	goto	u1177
  2787  0322  3200               	nop2
  2788  0323  0008               	return
  2789  0324                     __end_of_getGPSData:	
  2790                           
  2791                           	psect	text12
  2792  045A                     __ptext12:	
  2793 ;; *************** function _startTimer *****************
  2794 ;; Defined at:
  2795 ;;		line 273 in file "main.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  seconds         2    1[COMMON] int 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2809 ;;      Params:         2       0       0       0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0       0
  2812 ;;      Totals:         2       0       0       0       0       0       0       0
  2813 ;;Total ram usage:        2 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_getWiFiData
  2820 ;;		_getGSMData
  2821 ;;		_getGPSData
  2822 ;;		_waitForCommand
  2823 ;;		_getSigfoxData
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _startTimer
  2829  045A                     _startTimer:	
  2830                           
  2831                           ;main.c: 276: timerDone = 0;
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _startTimer: [wreg+status,2]
  2835  045A  01FC               	clrf	_timerDone
  2836                           
  2837                           ;main.c: 277: timerSetpoint = seconds;
  2838  045B  0872               	movf	startTimer@seconds+1,w
  2839  045C  0140               	movlb	0	; select bank0
  2840  045D  00EB               	movwf	_timerSetpoint+1
  2841  045E  0871               	movf	startTimer@seconds,w
  2842  045F  00EA               	movwf	_timerSetpoint
  2843                           
  2844                           ;main.c: 278: timerActual = 0;
  2845  0460  01E8               	clrf	_timerActual
  2846  0461  01E9               	clrf	_timerActual+1
  2847                           
  2848                           ;main.c: 280: PIE0bits.TMR0IE = 1;
  2849  0462  014E               	movlb	14	; select bank14
  2850  0463  1696               	bsf	22,5	;volatile
  2851                           
  2852                           ;main.c: 281: T0CON0 = 0b00010000;
  2853  0464  3010               	movlw	16
  2854  0465  014B               	movlb	11	; select bank11
  2855  0466  009E               	movwf	30	;volatile
  2856                           
  2857                           ;main.c: 282: T0CON1 = 0b01000111;
  2858  0467  3047               	movlw	71
  2859  0468  009F               	movwf	31	;volatile
  2860                           
  2861                           ;main.c: 283: T0CON0bits.T0EN = 1;
  2862  0469  179E               	bsf	30,7	;volatile
  2863  046A  0008               	return
  2864  046B                     __end_of_startTimer:	
  2865                           
  2866                           	psect	text13
  2867  022C                     __ptext13:	
  2868 ;; *************** function _setActivePeripheral *****************
  2869 ;; Defined at:
  2870 ;;		line 168 in file "main.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  peri            1    wreg     enum E8210
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  peri            1    1[COMMON] enum E8210
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2884 ;;      Params:         0       0       0       0       0       0       0       0
  2885 ;;      Locals:         1       0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0
  2887 ;;      Totals:         1       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        1 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;;		_getWiFiData
  2896 ;;		_getGSMData
  2897 ;;		_getGPSData
  2898 ;;		_sendSigfox
  2899 ;;		_sendSMS
  2900 ;;		_getSigfoxData
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _setActivePeripheral
  2906  022C                     _setActivePeripheral:	
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in _setActivePeripheral: [wreg-fsr0h+status,2+status,0]
  2910                           ;setActivePeripheral@peri stored from wreg
  2911  022C  00F1               	movwf	setActivePeripheral@peri
  2912                           
  2913                           ;main.c: 177: RC6PPS = 0x00;
  2914  022D  017E               	movlb	62	; select bank62
  2915  022E  01A6               	clrf	38	;volatile
  2916                           
  2917                           ;main.c: 178: RC1PPS = 0x00;
  2918  022F  01A1               	clrf	33	;volatile
  2919                           
  2920                           ;main.c: 179: RA4PPS = 0x00;
  2921  0230  0194               	clrf	20	;volatile
  2922                           
  2923                           ;main.c: 180: RC4PPS = 0x00;
  2924  0231  01A4               	clrf	36	;volatile
  2925                           
  2926                           ;main.c: 183: switch (peri) {
  2927  0232  2A70               	goto	l1060
  2928  0233                     l1026:	
  2929                           ;main.c: 184: case sigfox:
  2930                           
  2931                           
  2932                           ;main.c: 185: {
  2933                           ;main.c: 186: RC6PPS = 0x0F;
  2934  0233  300F               	movlw	15
  2935  0234  017E               	movlb	62	; select bank62
  2936  0235  00A6               	movwf	38	;volatile
  2937                           
  2938                           ;main.c: 187: SP1BRG = 207;
  2939  0236  3000               	movlw	0
  2940  0237  0142               	movlb	2	; select bank2
  2941  0238  009C               	movwf	28	;volatile
  2942  0239  30CF               	movlw	207
  2943  023A  009B               	movwf	27	;volatile
  2944                           
  2945                           ;main.c: 188: TRISC3 = 1;
  2946  023B  0140               	movlb	0	; select bank0
  2947  023C  1594               	bsf	20,3	;volatile
  2948                           
  2949                           ;main.c: 189: RX1DTPPSbits.RX1DTPPS = 0x13;
  2950  023D  017D               	movlb	61	; select bank61
  2951  023E  084B               	movf	75,w	;volatile
  2952  023F  39C0               	andlw	-64
  2953  0240  3813               	iorlw	19
  2954  0241  2A6E               	goto	L3
  2955  0242                     l1034:	
  2956                           ;main.c: 191: }
  2957                           ;main.c: 192: case gsm:
  2958                           
  2959                           ;main.c: 190: break;
  2960                           
  2961                           
  2962                           ;main.c: 193: {
  2963                           ;main.c: 194: RC1PPS = 0x0F;
  2964  0242  300F               	movlw	15
  2965  0243  017E               	movlb	62	; select bank62
  2966  0244  00A1               	movwf	33	;volatile
  2967                           
  2968                           ;main.c: 195: SP1BRG = 16;
  2969  0245  3000               	movlw	0
  2970  0246  0142               	movlb	2	; select bank2
  2971  0247  009C               	movwf	28	;volatile
  2972  0248  3010               	movlw	16
  2973  0249  009B               	movwf	27	;volatile
  2974                           
  2975                           ;main.c: 196: TRISC0 = 1;
  2976  024A  0140               	movlb	0	; select bank0
  2977  024B  1414               	bsf	20,0	;volatile
  2978                           
  2979                           ;main.c: 197: RX1DTPPSbits.RX1DTPPS = 0x10;
  2980  024C  017D               	movlb	61	; select bank61
  2981  024D  084B               	movf	75,w	;volatile
  2982  024E  39C0               	andlw	-64
  2983  024F  3810               	iorlw	16
  2984  0250  2A6E               	goto	L3
  2985  0251                     l1042:	
  2986                           ;main.c: 199: }
  2987                           ;main.c: 200: case wifi:
  2988                           
  2989                           ;main.c: 198: break;
  2990                           
  2991                           
  2992                           ;main.c: 201: {
  2993                           ;main.c: 202: RA4PPS = 0x0F;
  2994  0251  300F               	movlw	15
  2995  0252  017E               	movlb	62	; select bank62
  2996  0253  0094               	movwf	20	;volatile
  2997                           
  2998                           ;main.c: 203: SP1BRG = 16;
  2999  0254  3000               	movlw	0
  3000  0255  0142               	movlb	2	; select bank2
  3001  0256  009C               	movwf	28	;volatile
  3002  0257  3010               	movlw	16
  3003  0258  009B               	movwf	27	;volatile
  3004                           
  3005                           ;main.c: 204: TRISA5 = 1;
  3006  0259  0140               	movlb	0	; select bank0
  3007  025A  1692               	bsf	18,5	;volatile
  3008                           
  3009                           ;main.c: 205: RX1DTPPSbits.RX1DTPPS = 0x05;
  3010  025B  017D               	movlb	61	; select bank61
  3011  025C  084B               	movf	75,w	;volatile
  3012  025D  39C0               	andlw	-64
  3013  025E  3805               	iorlw	5
  3014  025F  2A6E               	goto	L3
  3015  0260                     l1050:	
  3016                           ;main.c: 207: }
  3017                           ;main.c: 208: case gps:
  3018                           
  3019                           ;main.c: 206: break;
  3020                           
  3021                           
  3022                           ;main.c: 209: {
  3023                           ;main.c: 210: RC4PPS = 0x0F;
  3024  0260  300F               	movlw	15
  3025  0261  017E               	movlb	62	; select bank62
  3026  0262  00A4               	movwf	36	;volatile
  3027                           
  3028                           ;main.c: 211: SP1BRG = 207;
  3029  0263  3000               	movlw	0
  3030  0264  0142               	movlb	2	; select bank2
  3031  0265  009C               	movwf	28	;volatile
  3032  0266  30CF               	movlw	207
  3033  0267  009B               	movwf	27	;volatile
  3034                           
  3035                           ;main.c: 212: TRISC5 = 1;
  3036  0268  0140               	movlb	0	; select bank0
  3037  0269  1694               	bsf	20,5	;volatile
  3038                           
  3039                           ;main.c: 213: RX1DTPPSbits.RX1DTPPS = 0x15;
  3040  026A  017D               	movlb	61	; select bank61
  3041  026B  084B               	movf	75,w	;volatile
  3042  026C  39C0               	andlw	-64
  3043  026D  3815               	iorlw	21
  3044  026E                     L3:	
  3045  026E  00CB               	movwf	75	;volatile
  3046                           
  3047                           ;main.c: 215: }
  3048                           ;main.c: 216: }
  3049                           
  3050                           ;main.c: 214: break;
  3051  026F  2A7E               	goto	l129
  3052  0270                     l1060:	
  3053  0270  0871               	movf	setActivePeripheral@peri,w
  3054                           
  3055                           ; Switch size 1, requested type "space"
  3056                           ; Number of cases is 4, Range of values is 0 to 3
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte           13     7 (average)
  3060                           ; direct_byte           14     6 (fixed)
  3061                           ; jumptable            260     6 (fixed)
  3062                           ;	Chosen strategy is simple_byte
  3063  0271  3A00               	xorlw	0	; case 0
  3064  0272  1903               	skipnz
  3065  0273  2A60               	goto	l1050
  3066  0274  3A01               	xorlw	1	; case 1
  3067  0275  1903               	skipnz
  3068  0276  2A51               	goto	l1042
  3069  0277  3A03               	xorlw	3	; case 2
  3070  0278  1903               	skipnz
  3071  0279  2A33               	goto	l1026
  3072  027A  3A01               	xorlw	1	; case 3
  3073  027B  1903               	skipnz
  3074  027C  2A42               	goto	l1034
  3075  027D  2A7E               	goto	l129
  3076  027E                     l129:	
  3077                           
  3078                           ;main.c: 218: TX1STAbits.BRGH = 1;
  3079  027E  0142               	movlb	2	; select bank2
  3080  027F  151E               	bsf	30,2	;volatile
  3081                           
  3082                           ;main.c: 219: TX1STAbits.SYNC = 0;
  3083  0280  121E               	bcf	30,4	;volatile
  3084                           
  3085                           ;main.c: 220: RC1STAbits.SPEN = 1;
  3086  0281  179D               	bsf	29,7	;volatile
  3087                           
  3088                           ;main.c: 221: TX1STAbits.TXEN = 1;
  3089  0282  169E               	bsf	30,5	;volatile
  3090                           
  3091                           ;main.c: 222: RC1STAbits.CREN = 1;
  3092  0283  161D               	bsf	29,4	;volatile
  3093  0284  0008               	return
  3094  0285                     __end_of_setActivePeripheral:	
  3095                           
  3096                           	psect	text14
  3097  03E8                     __ptext14:	
  3098 ;; *************** function _serialPrintBT *****************
  3099 ;; Defined at:
  3100 ;;		line 231 in file "main.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  s               2    2[COMMON] PTR unsigned char 
  3103 ;;		 -> STR_32(14), STR_30(14), STR_27(14), STR_25(14), 
  3104 ;;		 -> STR_23(14), STR_15(13), STR_13(15), STR_12(10), 
  3105 ;;		 -> STR_10(12), STR_9(10), STR_5(12), STR_4(11), 
  3106 ;;		 -> STR_1(13), 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  i               2    5[COMMON] int 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3118 ;;      Params:         2       0       0       0       0       0       0       0
  3119 ;;      Locals:         2       0       0       0       0       0       0       0
  3120 ;;      Temps:          1       0       0       0       0       0       0       0
  3121 ;;      Totals:         5       0       0       0       0       0       0       0
  3122 ;;Total ram usage:        5 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    2
  3125 ;; This function calls:
  3126 ;;		_serialWriteBT
  3127 ;; This function is called by:
  3128 ;;		_getWiFiData
  3129 ;;		_getGSMData
  3130 ;;		_getGPSData
  3131 ;;		_waitForCommand
  3132 ;;		_getSigfoxData
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _serialPrintBT
  3138  03E8                     _serialPrintBT:	
  3139                           
  3140                           ;main.c: 232: int i = 0;
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in _serialPrintBT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3144  03E8  01F5               	clrf	serialPrintBT@i
  3145  03E9  01F6               	clrf	serialPrintBT@i+1
  3146  03EA                     l1092:	
  3147                           ;main.c: 233: while (s[i] != '\0') {
  3148                           
  3149  03EA  0872               	movf	serialPrintBT@s,w
  3150  03EB  0775               	addwf	serialPrintBT@i,w
  3151  03EC  0084               	movwf	4
  3152  03ED  0873               	movf	serialPrintBT@s+1,w
  3153  03EE  3D76               	addwfc	serialPrintBT@i+1,w
  3154  03EF  0085               	movwf	5
  3155  03F0  0012               	moviw fsr0++
  3156  03F1  1903               	btfsc	3,2
  3157  03F2  0008               	return
  3158                           
  3159                           ;main.c: 234: serialWriteBT(s[i]);
  3160  03F3  0872               	movf	serialPrintBT@s,w
  3161  03F4  0775               	addwf	serialPrintBT@i,w
  3162  03F5  0084               	movwf	4
  3163  03F6  0873               	movf	serialPrintBT@s+1,w
  3164  03F7  3D76               	addwfc	serialPrintBT@i+1,w
  3165  03F8  0085               	movwf	5
  3166  03F9  0800               	movf	0,w	;code access
  3167  03FA  3185  259A  3183   	fcall	_serialWriteBT
  3168                           
  3169                           ;main.c: 235: i++;
  3170  03FD  3001               	movlw	1
  3171  03FE  07F5               	addwf	serialPrintBT@i,f
  3172  03FF  3000               	movlw	0
  3173  0400  3DF6               	addwfc	serialPrintBT@i+1,f
  3174  0401  2BEA               	goto	l1092
  3175  0402                     __end_of_serialPrintBT:	
  3176                           
  3177                           	psect	text15
  3178  059A                     __ptext15:	
  3179 ;; *************** function _serialWriteBT *****************
  3180 ;; Defined at:
  3181 ;;		line 225 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  c               1    wreg     unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  c               1    1[COMMON] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3195 ;;      Params:         0       0       0       0       0       0       0       0
  3196 ;;      Locals:         1       0       0       0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0
  3198 ;;      Totals:         1       0       0       0       0       0       0       0
  3199 ;;Total ram usage:        1 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_serialPrintBT
  3206 ;;		_getWiFiData
  3207 ;;		_getGSMData
  3208 ;;		_getGPSData
  3209 ;;		_waitForCommand
  3210 ;;		_getSigfoxData
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           
  3215                           ;psect for function _serialWriteBT
  3216  059A                     _serialWriteBT:	
  3217                           
  3218                           ;incstack = 0
  3219                           ; Regs used in _serialWriteBT: [wreg]
  3220                           ;serialWriteBT@c stored from wreg
  3221  059A  00F1               	movwf	serialWriteBT@c
  3222  059B                     l136:	
  3223                           ;main.c: 226: while (!PIR3bits.TX2IF) {
  3224                           
  3225  059B  014E               	movlb	14	; select bank14
  3226  059C  1F0F               	btfss	15,6	;volatile
  3227  059D  2D9B               	goto	l136
  3228                           
  3229                           ;main.c: 227: }
  3230                           ;main.c: 228: TX2REG = c;
  3231  059E  0871               	movf	serialWriteBT@c,w
  3232  059F  0154               	movlb	20	; select bank20
  3233  05A0  009A               	movwf	26	;volatile
  3234  05A1  0008               	return
  3235  05A2                     __end_of_serialWriteBT:	
  3236                           
  3237                           	psect	text16
  3238  038B                     __ptext16:	
  3239 ;; *************** function _serialFindPeripheral *****************
  3240 ;; Defined at:
  3241 ;;		line 156 in file "main.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  s               2    1[COMMON] PTR unsigned char 
  3244 ;;		 -> STR_11(8), 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  i               2    4[COMMON] int 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      unsigned char 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3256 ;;      Params:         2       0       0       0       0       0       0       0
  3257 ;;      Locals:         2       0       0       0       0       0       0       0
  3258 ;;      Temps:          1       0       0       0       0       0       0       0
  3259 ;;      Totals:         5       0       0       0       0       0       0       0
  3260 ;;Total ram usage:        5 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    2
  3263 ;; This function calls:
  3264 ;;		_serialReadPeripheral
  3265 ;; This function is called by:
  3266 ;;		_getGPSData
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function _serialFindPeripheral
  3272  038B                     _serialFindPeripheral:	
  3273                           
  3274                           ;main.c: 157: int i = 0;
  3275                           
  3276                           ;incstack = 0
  3277                           ; Regs used in _serialFindPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3278  038B  01F4               	clrf	serialFindPeripheral@i
  3279  038C  01F5               	clrf	serialFindPeripheral@i+1
  3280  038D                     l1080:	
  3281                           ;main.c: 158: while (s[i] != '\0') {
  3282                           
  3283  038D  0871               	movf	serialFindPeripheral@s,w
  3284  038E  0774               	addwf	serialFindPeripheral@i,w
  3285  038F  0084               	movwf	4
  3286  0390  0872               	movf	serialFindPeripheral@s+1,w
  3287  0391  3D75               	addwfc	serialFindPeripheral@i+1,w
  3288  0392  0085               	movwf	5
  3289  0393  0012               	moviw fsr0++
  3290  0394  1903               	btfsc	3,2
  3291  0395  2BAB               	goto	l1082
  3292                           
  3293                           ;main.c: 159: if (serialReadPeripheral() == s[i]) {
  3294  0396  0871               	movf	serialFindPeripheral@s,w
  3295  0397  0774               	addwf	serialFindPeripheral@i,w
  3296  0398  0084               	movwf	4
  3297  0399  0872               	movf	serialFindPeripheral@s+1,w
  3298  039A  3D75               	addwfc	serialFindPeripheral@i+1,w
  3299  039B  0085               	movwf	5
  3300  039C  0800               	movf	0,w	;code access
  3301  039D  00F3               	movwf	??_serialFindPeripheral
  3302  039E  3185  2577  3183   	fcall	_serialReadPeripheral
  3303  03A1  0673               	xorwf	??_serialFindPeripheral,w
  3304  03A2  1D03               	skipz
  3305  03A3  2BA9               	goto	l1076
  3306                           
  3307                           ;main.c: 160: i++;
  3308  03A4  3001               	movlw	1
  3309  03A5  07F4               	addwf	serialFindPeripheral@i,f
  3310  03A6  3000               	movlw	0
  3311  03A7  3DF5               	addwfc	serialFindPeripheral@i+1,f
  3312                           
  3313                           ;main.c: 161: } else {
  3314  03A8  2B8D               	goto	l1080
  3315  03A9                     l1076:	
  3316                           
  3317                           ;main.c: 162: return 0;
  3318  03A9  3000               	movlw	0
  3319  03AA  0008               	return
  3320  03AB                     l1082:	
  3321                           
  3322                           ;main.c: 163: }
  3323                           ;main.c: 164: }
  3324                           ;main.c: 165: return 1;
  3325  03AB  3001               	movlw	1
  3326  03AC  0008               	return
  3327  03AD                     __end_of_serialFindPeripheral:	
  3328                           
  3329                           	psect	text17
  3330  0577                     __ptext17:	
  3331 ;; *************** function _serialReadPeripheral *****************
  3332 ;; Defined at:
  3333 ;;		line 146 in file "main.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      unsigned char 
  3340 ;; Registers used:
  3341 ;;		wreg
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3347 ;;      Params:         0       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_serialFindPeripheral
  3358 ;;		_getWiFiData
  3359 ;;		_getGSMData
  3360 ;;		_getGPSData
  3361 ;;		_waitForCommand
  3362 ;;		_getSigfoxData
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _serialReadPeripheral
  3368  0577                     _serialReadPeripheral:	
  3369  0577                     l112:	
  3370                           ;main.c: 147: while (!PIR3bits.RC1IF) {
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _serialReadPeripheral: [wreg]
  3374                           
  3375  0577  014E               	movlb	14	; select bank14
  3376  0578  1E8F               	btfss	15,5	;volatile
  3377  0579  2D77               	goto	l112
  3378                           
  3379                           ;main.c: 148: }
  3380                           ;main.c: 149: if (1 == RC1STAbits.OERR) {
  3381  057A  0142               	movlb	2	; select bank2
  3382  057B  1C9D               	btfss	29,1	;volatile
  3383  057C  2D7F               	goto	l1016
  3384                           
  3385                           ;main.c: 150: RC1STAbits.SPEN = 0;
  3386  057D  139D               	bcf	29,7	;volatile
  3387                           
  3388                           ;main.c: 151: RC1STAbits.SPEN = 1;
  3389  057E  179D               	bsf	29,7	;volatile
  3390  057F                     l1016:	
  3391                           
  3392                           ;main.c: 152: }
  3393                           ;main.c: 153: return RC1REG;
  3394  057F  0819               	movf	25,w	;volatile
  3395  0580  0008               	return
  3396  0581                     __end_of_serialReadPeripheral:	
  3397                           
  3398                           	psect	text18
  3399  0431                     __ptext18:	
  3400 ;; *************** function _initBTSerial *****************
  3401 ;; Defined at:
  3402 ;;		line 114 in file "main.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, status,2, status,0
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3416 ;;      Params:         0       0       0       0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0
  3419 ;;      Totals:         0       0       0       0       0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function _initBTSerial
  3432  0431                     _initBTSerial:	
  3433                           
  3434                           ;main.c: 119: RB6PPS = 0x11;
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _initBTSerial: [wreg+status,2+status,0]
  3438  0431  3011               	movlw	17
  3439  0432  017E               	movlb	62	; select bank62
  3440  0433  009E               	movwf	30	;volatile
  3441                           
  3442                           ;main.c: 120: TX2STAbits.BRGH = 1;
  3443  0434  0154               	movlb	20	; select bank20
  3444  0435  151E               	bsf	30,2	;volatile
  3445                           
  3446                           ;main.c: 121: SP2BRG = 16;
  3447  0436  3000               	movlw	0
  3448  0437  009C               	movwf	28	;volatile
  3449  0438  3010               	movlw	16
  3450  0439  009B               	movwf	27	;volatile
  3451                           
  3452                           ;main.c: 122: TX2STAbits.SYNC = 0;
  3453  043A  121E               	bcf	30,4	;volatile
  3454                           
  3455                           ;main.c: 123: RC2STAbits.SPEN = 1;
  3456  043B  179D               	bsf	29,7	;volatile
  3457                           
  3458                           ;main.c: 124: TX2STAbits.TXEN = 1;
  3459  043C  169E               	bsf	30,5	;volatile
  3460                           
  3461                           ;main.c: 127: TRISB5 = 1;
  3462  043D  0140               	movlb	0	; select bank0
  3463  043E  1693               	bsf	19,5	;volatile
  3464                           
  3465                           ;main.c: 128: RX2DTPPSbits.RX2DTPPS = 0x0D;
  3466  043F  017D               	movlb	61	; select bank61
  3467  0440  084D               	movf	77,w	;volatile
  3468  0441  39C0               	andlw	-64
  3469  0442  380D               	iorlw	13
  3470  0443  00CD               	movwf	77	;volatile
  3471                           
  3472                           ;main.c: 129: RC2STAbits.CREN = 1;
  3473  0444  0154               	movlb	20	; select bank20
  3474  0445  161D               	bsf	29,4	;volatile
  3475  0446  0008               	return
  3476  0447                     __end_of_initBTSerial:	
  3477                           
  3478                           	psect	intentry
  3479  0004                     __pintentry:	
  3480 ;; *************** function _timerCount *****************
  3481 ;; Defined at:
  3482 ;;		line 261 in file "main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3496 ;;      Params:         0       0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0
  3498 ;;      Temps:          1       0       0       0       0       0       0       0
  3499 ;;      Totals:         1       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		Interrupt level 1
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509  0004                     _timerCount:	
  3510                           
  3511                           ;incstack = 0
  3512  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3513                           
  3514                           ; Regs used in _timerCount: [wreg]
  3515  0005  3180               	pagesel	$
  3516  0006  0140               	movlb	0	; select bank0
  3517  0007  087F               	movf	127,w
  3518  0008  00F0               	movwf	??_timerCount
  3519                           
  3520                           ;main.c: 263: if (PIR0bits.TMR0IF) {
  3521  0009  014E               	movlb	14	; select bank14
  3522  000A  1E8C               	btfss	12,5	;volatile
  3523  000B  2813               	goto	i1l165
  3524                           
  3525                           ;main.c: 264: timerActual++;
  3526  000C  3001               	movlw	1
  3527  000D  0140               	movlb	0	; select bank0
  3528  000E  07E8               	addwf	_timerActual,f
  3529  000F  3000               	movlw	0
  3530  0010  3DE9               	addwfc	_timerActual+1,f
  3531                           
  3532                           ;main.c: 265: PIR0bits.TMR0IF = 0;
  3533  0011  014E               	movlb	14	; select bank14
  3534  0012  128C               	bcf	12,5	;volatile
  3535  0013                     i1l165:	
  3536                           
  3537                           ;main.c: 266: }
  3538                           ;main.c: 267: if (timerActual == timerSetpoint) {
  3539  0013  0140               	movlb	0	; select bank0
  3540  0014  086B               	movf	_timerSetpoint+1,w
  3541  0015  0669               	xorwf	_timerActual+1,w
  3542  0016  1D03               	skipz
  3543  0017  281A               	goto	u88_25
  3544  0018  086A               	movf	_timerSetpoint,w
  3545  0019  0668               	xorwf	_timerActual,w
  3546  001A                     u88_25:	
  3547  001A  1D03               	skipz
  3548  001B  2820               	goto	i1l167
  3549                           
  3550                           ;main.c: 268: timerDone = 1;
  3551  001C  01FC               	clrf	_timerDone
  3552  001D  0AFC               	incf	_timerDone,f
  3553                           
  3554                           ;main.c: 269: T0CON0bits.T0EN = 0;
  3555  001E  014B               	movlb	11	; select bank11
  3556  001F  139E               	bcf	30,7	;volatile
  3557  0020                     i1l167:	
  3558  0020  0870               	movf	??_timerCount,w
  3559  0021  0140               	movlb	0	; select bank0
  3560  0022  00FF               	movwf	127
  3561  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3562  0024  0009               	retfie
  3563  0025                     __end_of_timerCount:	
  3564  007E                     btemp	set	126	;btemp
  3565  007E                     int$flags	set	126
  3566  007E                     wtemp0	set	126


Data Sizes:
    Strings     339
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     72      76
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_33(CODE[13]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_31(CODE[10]), STR_28(CODE[22]), STR_26(CODE[11]), STR_24(CODE[10]), 
		 -> STR_22(CODE[10]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    waitForCommand@p	PTR unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    sendSMS@message	PTR unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    sendSMS@number	PTR unsigned char  size(2) Largest target is 7
		 -> STR_35(CODE[7]), 

    sendSigfox@hexMessage	PTR unsigned char  size(2) Largest target is 30
		 -> waitForCommand@message(BANK0[30]), STR_29(CODE[15]), 

    serialPrintBT@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_32(CODE[14]), STR_30(CODE[14]), STR_27(CODE[14]), STR_25(CODE[14]), 
		 -> STR_23(CODE[14]), STR_15(CODE[13]), STR_13(CODE[15]), STR_12(CODE[10]), 
		 -> STR_10(CODE[12]), STR_9(CODE[10]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_1(CODE[13]), 

    serialFindPeripheral@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[8]), 

    serialPrintPeripheral@s	PTR unsigned char  size(2) Largest target is 30
		 -> STR_36(CODE[12]), STR_35(CODE[7]), waitForCommand@message(BANK0[30]), STR_29(CODE[15]), 
		 -> STR_21(CODE[3]), STR_20(CODE[4]), STR_19(CODE[10]), STR_18(CODE[12]), 
		 -> STR_17(CODE[3]), STR_16(CODE[7]), STR_14(CODE[5]), STR_8(CODE[11]), 
		 -> STR_7(CODE[9]), STR_6(CODE[12]), STR_3(CODE[11]), STR_2(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_waitForCommand
    _waitForCommand->_sendSMS
    _sendSigfox->_serialPrintPeripheral
    _sendSMS->_serialPrintPeripheral
    _getWiFiData->_serialPrintBT
    _getWiFiData->_serialPrintPeripheral
    _getGSMData->_serialPrintBT
    _getGSMData->_serialPrintPeripheral
    _serialPrintPeripheral->_serialWritePeripheral
    _getGPSData->_serialPrintBT
    _serialPrintBT->_serialWriteBT

Critical Paths under _timerCount in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_waitForCommand
    _waitForCommand->_sendSMS

Critical Paths under _timerCount in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timerCount in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timerCount in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timerCount in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timerCount in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timerCount in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timerCount in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10629
                                             70 BANK0      2     2      0
                       _initBTSerial
                _setActivePeripheral
                     _waitForCommand
 ---------------------------------------------------------------------------------
 (1) _waitForCommand                                      69    69      0   10607
                                             11 COMMON     1     1      0
                                              2 BANK0     68    68      0
                         _getGPSData
                         _getGSMData
                        _getWiFiData
                            _sendSMS
                         _sendSigfox
                      _serialPrintBT
                       _serialReadBT
               _serialReadPeripheral
                      _serialWriteBT
                         _startTimer
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     267
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     491
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _serialReadBT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sendSigfox                                           2     0      2    1057
                                              7 COMMON     2     0      2
              _serialPrintPeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _sendSMS                                              6     2      4    1143
                                              7 COMMON     4     0      4
                                              0 BANK0      2     2      0
              _serialPrintPeripheral
              _serialWritePeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _getWiFiData                                          2     2      0    2145
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _getGSMData                                           2     2      0    2145
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (3) _serialPrintPeripheral                                5     3      2     907
                                              2 COMMON     5     3      2
              _serialWritePeripheral
 ---------------------------------------------------------------------------------
 (4) _serialWritePeripheral                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getGPSData                                           3     3      0    1451
                                              7 COMMON     3     3      0
               _serialFindPeripheral
                      _serialPrintBT
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           2     0      2     393
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _setActivePeripheral                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialPrintBT                                        5     3      2     801
                                              2 COMMON     5     3      2
                      _serialWriteBT
 ---------------------------------------------------------------------------------
 (2) _serialWriteBT                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serialFindPeripheral                                 5     3      2     143
                                              1 COMMON     5     3      2
               _serialReadPeripheral
 ---------------------------------------------------------------------------------
 (2) _serialReadPeripheral                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBTSerial                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timerCount                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initBTSerial
   _setActivePeripheral
   _waitForCommand
     _getGPSData
       _serialFindPeripheral
         _serialReadPeripheral
       _serialPrintBT
         _serialWriteBT
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getGSMData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getWiFiData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _sendSMS
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialWritePeripheral
       _setActivePeripheral
     _sendSigfox
       _serialPrintPeripheral
         _serialWritePeripheral
       _setActivePeripheral
     _serialPrintBT
       _serialWriteBT
     _serialReadBT
     _serialReadPeripheral
     _serialWriteBT
     _startTimer
     _strcmp
     _strncmp

 _timerCount (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      59       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     48      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      59      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed May 02 17:36:31 2018

                   __CFG_CP$OFF 0000                     __CFG_LVP$ON 0000                             l100 0593  
                           l112 0577                             l136 059B                             l129 027E  
                           l217 0031                             l148 056D                             l192 02ED  
                           l197 030D           serialFindPeripheral@i 0074           serialFindPeripheral@s 0071  
          sendSigfox@hexMessage 0077                    __CFG_BORV$LO 0000                             wreg 0009  
                 __CFG_BBEN$OFF 0000                    __CFG_ZCD$OFF 0000                            l1016 057F  
                          l1050 0260                            l1042 0251                            l1034 0242  
                          l1026 0233                            l1210 0366                            l1060 0270  
                          l1124 02BC                            l1108 0575                            l1212 036E  
                          l1142 0178                            l1126 02C9                            l1230 0358  
                          l1080 038D                            l1152 019B                            l1144 0185  
                          l1216 0385                            l1082 03AB                            l1154 01A8  
                          l1226 0341                            l1234 0325                            l1410 00BF  
                          l1402 0086                            l1076 03A9                            l1092 03EA  
                          l1172 02FE                            l1068 03D0                            l1236 0361  
                          l1174 030F                            l1414 00DB                            l1406 009C  
                          l1432 0119                            l1426 00F2                            l1444 012B  
                          l1428 010D                            l1390 003E                            l1462 03CA  
                          l1392 0054                            l1398 0070                            STR_1 04A4  
                          STR_2 0447                            STR_3 051B                            STR_4 0505  
                          STR_5 04D6                            STR_6 04CA                            STR_7 0581  
                          STR_8 04FA                            STR_9 0531                            u1107 029C  
                          u1117 02AD                            u1127 02D3                            u1047 03BC  
                          u1137 0158                            u1057 01C9                            u1147 0169  
                          u1067 01EB                            u1157 018F                            u1077 01FF  
                          u1167 01B2                            u1087 0210                            u1177 031E  
                          u1097 0225                   __CFG_FCMEN$ON 0000    __end_of_serialFindPeripheral 03AD  
                          _main 03AD                            fsr0h 0005                            fsr1h 0007  
                          indf0 0000                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            btemp 007E                   __CFG_BOREN$ON 0000  
                          start 0025                   __CFG_CSWEN$ON 0000                   __CFG_MCLRE$ON 0000  
                         ?_main 0070                           STR_10 04E2                           STR_11 058A  
                         STR_20 05B5                           STR_12 053B                           STR_21 05B6  
                         STR_13 047A                           STR_30 0489                           STR_14 05B0  
                         STR_22 0559                           STR_31 0545                           STR_15 0497  
                         STR_23 0489                           STR_32 0489                           STR_16 05A2  
                         STR_24 054F                           STR_17 05B6                           STR_25 0489  
                         STR_33 04B1                   __CFG_WDTE$OFF 0000                           STR_34 0526  
                         STR_26 0510                           STR_18 04BE                           STR_27 0489  
                         STR_35 05A9                           STR_19 0563                           STR_36 04EE  
                         STR_28 041B                           STR_29 046B                   ?_initBTSerial 0070  
                         _LATB7 00CF                           i1l165 0013                           i1l167 0020  
                         u88_25 001A    __size_of_setActivePeripheral 0059                   __CFG_WRTB$OFF 0000  
                 __CFG_WRTC$OFF 0000                 __end_of_sendSMS 022C                           status 0003  
                         wtemp0 007E                 __end_of_strncmp 0364                 __initialization 0027  
          _serialReadPeripheral 0577                    __end_of_main 03CE                  __CFG_SAFEN$OFF 0000  
       ??_serialPrintPeripheral 0074                  ??_initBTSerial 0071                          ??_main 0066  
          __size_of_getWiFiData 0054                          _ANSELA 1F38                          _ANSELB 1F43  
                        _ANSELC 1F4E                          _T0CON0 059E                          _T0CON1 059F  
                        _RC1REG 0119                          _RC2REG 0A19                          _RA4PPS 1F14  
                        _RC1PPS 1F21                          _RB6PPS 1F1E                          _RC4PPS 1F24  
                        _RC6PPS 1F26                  __CFG_WDTCCS$SC 0000                          _SP1BRG 011B  
                        _SP2BRG 0A1B         setActivePeripheral@peri 0071                          _TX1REG 011A  
                        _TX2REG 0A1A                          _TRISC0 00A0                          _TRISA5 0095  
                        _TRISB5 009D                          _TRISC3 00A3                          _TRISB7 009F  
                        _TRISC5 00A5                  __CFG_PWRTE$OFF 0000             waitForCommand@i_448 0063  
         ?_serialReadPeripheral 0070                 getGPSData@found 0078                  __CFG_STVREN$ON 0000  
                 sendSMS@number 0077                          _strcmp 0364            _serialFindPeripheral 038B  
       __size_of_waitForCommand 0110                       ??_sendSMS 0020                       ??_strncmp 0075  
       __end_of__initialization 002D           __end_of_serialPrintBT 0402  __size_of_serialWritePeripheral 0008  
         __end_of_serialWriteBT 05A2   __end_of_serialWritePeripheral 059A                  __pcstackCOMMON 0070  
         ?_serialFindPeripheral 0071                      __pbssBANK0 0068                      _getGSMData 0141  
                    _getGPSData 02D9            __end_of_initBTSerial 0447          ??_serialReadPeripheral 0071  
           _setActivePeripheral 022C          serialPrintPeripheral@i 0075          serialPrintPeripheral@s 0072  
                    __pmaintext 03AD                 __CFG_PPS1WAY$ON 0000                      __pintentry 0004  
           __CFG_RSTOSC$HFINT32 0000                         ?_strcmp 0071            ?_setActivePeripheral 0070  
                 ?_serialReadBT 0070          ??_serialFindPeripheral 0073                         __ptext1 0031  
                       __ptext2 0324                         __ptext3 0364                         __ptext4 056D  
                       __ptext5 0402                         __ptext6 01B8                         __ptext7 0285  
                       __ptext8 0141                         __ptext9 03CE  __size_of_serialPrintPeripheral 001A  
 __end_of_serialPrintPeripheral 03E8                  _waitForCommand 0031                 __CFG_WRTAPP$OFF 0000  
               __size_of_strcmp 0027           ??_setActivePeripheral 0071                  sendSMS@message 0079  
                       _sendSMS 01B8                 __CFG_WRTSAF$OFF 0000                         _strncmp 0324  
          end_of_initialization 002D                      _sendSigfox 0402                     ?_getGPSData 0070  
                   ?_getGSMData 0070                  ??_serialReadBT 0071                  serialPrintBT@i 0075  
                serialPrintBT@s 0072                      _timerCount 0004          __end_of_waitForCommand 0141  
                       strcmp@r 0074           __CFG_WDTCPS$WDTCPS_31 0000                  serialWriteBT@c 0071  
                 ??_getWiFiData 0077           __size_of_initBTSerial 0016                __CFG_FEXTOSC$OFF 0000  
                    _startTimer 045A                 ?_waitForCommand 0070             __size_of_getGPSData 004B  
           __size_of_getGSMData 0077                    _initBTSerial 0431                  __end_of_strcmp 038B  
           start_initialization 0027             __end_of_getWiFiData 02D9                     ?_sendSigfox 0077  
              __CFG_LPBOREN$OFF 0000           _serialWritePeripheral 0592                     ?_timerCount 0070  
                      ??_strcmp 0073            __end_of_serialReadBT 0577                     __pbssCOMMON 007C  
        __size_of_serialPrintBT 001A                       ___latbits 0001                   __pcstackBANK0 0020  
        __size_of_serialWriteBT 0008                     ?_startTimer 0071   __size_of_serialReadPeripheral 000A  
           __size_of_sendSigfox 0019                     _getWiFiData 0285                        ?_sendSMS 0077  
                      ?_strncmp 0071          serialWritePeripheral@c 0071                    ??_getGPSData 0077  
                  ??_getGSMData 0077             __size_of_timerCount 0021                        _PIE0bits 0716  
                 _serialPrintBT 03E8                        _PIR0bits 070C                        _PIR3bits 070F  
                 _serialWriteBT 059A          ?_serialWritePeripheral 0070               __CFG_BBSIZE$BB512 0000  
                     _timerDone 007C     __end_of_setActivePeripheral 0285             __size_of_startTimer 0011  
                  _RX1DTPPSbits 1ECB   __size_of_serialFindPeripheral 0022              __end_of_getGPSData 0324  
            __end_of_getGSMData 01B8               startTimer@seconds 0071                 waitForCommand@c 0060  
               waitForCommand@i 0061                 waitForCommand@p 0065           _serialPrintPeripheral 03CE  
                  _RX2DTPPSbits 1ECD                  ?_serialPrintBT 0072                  ?_serialWriteBT 0070  
              ??_waitForCommand 007B           __size_of_serialReadBT 000A           waitForCommand@command 0040  
                   getGPSData@c 0079           waitForCommand@message 0022                      _T0CON0bits 059E  
              __size_of_sendSMS 0074                        __ptext10 0592                        __ptext11 02D9  
                      __ptext12 045A                        __ptext13 022C                        __ptext14 03E8  
                      __ptext15 059A                        __ptext16 038B                        __ptext17 0577  
                      __ptext18 0431                    ??_sendSigfox 0079                __size_of_strncmp 0040  
                 __size_of_main 0021                      strncmp@len 0073                   _timerSetpoint 006A  
                  _serialReadBT 056D            __CFG_WDTCWS$WDTCWS_7 0000                      _RC1STAbits 011D  
                    _RC2STAbits 0A1D                        int$flags 007E                    ??_timerCount 0070  
            __end_of_sendSigfox 041B          ?_serialPrintPeripheral 0072                      _INTCONbits 000B  
                __pstringtext10 04CA                  __pstringtext11 04D6                  __pstringtext20 053B  
                __pstringtext12 04E2                  __pstringtext21 0545                  __pstringtext13 04EE  
                __pstringtext30 05B5                  __pstringtext22 054F                  __pstringtext14 04FA  
                __pstringtext31 0000                  __pstringtext23 0559                  __pstringtext15 0505  
                __pstringtext24 0563                  __pstringtext16 0510                  __pstringtext25 0581  
                __pstringtext17 051B                  __pstringtext26 058A                  __pstringtext18 0526  
                __pstringtext27 05A2                  __pstringtext19 0531                  __pstringtext28 05A9  
                __pstringtext29 05B0                    ??_startTimer 0073                        intlevel1 0000  
               ??_serialPrintBT 0074              __end_of_timerCount 0025               __CFG_CLKOUTEN$OFF 0000  
               ??_serialWriteBT 0071                       strncmp@s1 0077                       strncmp@s2 0071  
            __end_of_startTimer 046B                   __pstringtext1 041B                   __pstringtext2 0447  
                 __pstringtext3 046B                   __pstringtext4 047A                   __pstringtext5 0489  
                 __pstringtext6 0497                   __pstringtext7 04A4                   __pstringtext8 04B1  
                 __pstringtext9 04BE                    ?_getWiFiData 0070                     _timerActual 0068  
                      strcmp@s1 0075                        strcmp@s2 0071    __end_of_serialReadPeripheral 0581  
                    _TX1STAbits 011E                      _TX2STAbits 0A1E         ??_serialWritePeripheral 0071  
