

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue May 08 18:59:44 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F15344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	stringtext15,global,class=STRCODE,delta=2
    19                           	psect	stringtext16,global,class=STRCODE,delta=2
    20                           	psect	stringtext17,global,class=STRCODE,delta=2
    21                           	psect	stringtext18,global,class=STRCODE,delta=2
    22                           	psect	stringtext19,global,class=STRCODE,delta=2
    23                           	psect	stringtext20,global,class=STRCODE,delta=2
    24                           	psect	stringtext21,global,class=STRCODE,delta=2
    25                           	psect	stringtext22,global,class=STRCODE,delta=2
    26                           	psect	stringtext23,global,class=STRCODE,delta=2
    27                           	psect	stringtext24,global,class=STRCODE,delta=2
    28                           	psect	stringtext25,global,class=STRCODE,delta=2
    29                           	psect	stringtext26,global,class=STRCODE,delta=2
    30                           	psect	stringtext27,global,class=STRCODE,delta=2
    31                           	psect	stringtext28,global,class=STRCODE,delta=2
    32                           	psect	stringtext29,global,class=STRCODE,delta=2
    33                           	psect	stringtext30,global,class=STRCODE,delta=2
    34                           	psect	stringtext31,global,class=STRCODE,delta=2
    35                           	psect	stringtext32,global,class=STRCODE,delta=2
    36                           	psect	stringtext33,global,class=STRCODE,delta=2
    37                           	psect	stringtext34,global,class=STRCODE,delta=2
    38                           	psect	cinit,global,class=CODE,merge=1,delta=2
    39                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    40                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    41                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    43                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    44                           	psect	text1,local,class=CODE,merge=1,delta=2
    45                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text4,local,class=CODE,merge=1,delta=2
    48                           	psect	text5,local,class=CODE,merge=1,delta=2
    49                           	psect	text6,local,class=CODE,merge=1,delta=2
    50                           	psect	text7,local,class=CODE,merge=1,delta=2
    51                           	psect	text8,local,class=CODE,merge=1,delta=2
    52                           	psect	text9,local,class=CODE,merge=1,delta=2
    53                           	psect	text10,local,class=CODE,merge=1,delta=2
    54                           	psect	text11,local,class=CODE,merge=1,delta=2
    55                           	psect	text12,local,class=CODE,merge=1,delta=2
    56                           	psect	text13,local,class=CODE,merge=1,delta=2
    57                           	psect	text14,local,class=CODE,merge=1,delta=2
    58                           	psect	text15,local,class=CODE,merge=1,delta=2
    59                           	psect	text16,local,class=CODE,merge=1,delta=2
    60                           	psect	text17,local,class=CODE,merge=1,delta=2
    61                           	psect	text18,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 1.44
    66                           ; Generated 14/09/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F15344 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  020C                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  020F                     	;# 
   163  020F                     	;# 
   164  0210                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  028C                     	;# 
   169  028C                     	;# 
   170  028D                     	;# 
   171  028D                     	;# 
   172  028E                     	;# 
   173  028F                     	;# 
   174  0290                     	;# 
   175  0291                     	;# 
   176  030C                     	;# 
   177  030C                     	;# 
   178  030D                     	;# 
   179  030E                     	;# 
   180  030F                     	;# 
   181  0310                     	;# 
   182  0310                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0314                     	;# 
   187  0315                     	;# 
   188  0316                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  038C                     	;# 
   196  038D                     	;# 
   197  038E                     	;# 
   198  058C                     	;# 
   199  058C                     	;# 
   200  058D                     	;# 
   201  058E                     	;# 
   202  058F                     	;# 
   203  058F                     	;# 
   204  0590                     	;# 
   205  0591                     	;# 
   206  0592                     	;# 
   207  0593                     	;# 
   208  059C                     	;# 
   209  059C                     	;# 
   210  059D                     	;# 
   211  059D                     	;# 
   212  059E                     	;# 
   213  059F                     	;# 
   214  060C                     	;# 
   215  060D                     	;# 
   216  060E                     	;# 
   217  060F                     	;# 
   218  0610                     	;# 
   219  0611                     	;# 
   220  0612                     	;# 
   221  0613                     	;# 
   222  0614                     	;# 
   223  070C                     	;# 
   224  070D                     	;# 
   225  070E                     	;# 
   226  070F                     	;# 
   227  0710                     	;# 
   228  0711                     	;# 
   229  0712                     	;# 
   230  0713                     	;# 
   231  0716                     	;# 
   232  0717                     	;# 
   233  0718                     	;# 
   234  0719                     	;# 
   235  071A                     	;# 
   236  071B                     	;# 
   237  071C                     	;# 
   238  071D                     	;# 
   239  0796                     	;# 
   240  0797                     	;# 
   241  0798                     	;# 
   242  0799                     	;# 
   243  079A                     	;# 
   244  079B                     	;# 
   245  080C                     	;# 
   246  080D                     	;# 
   247  080E                     	;# 
   248  080F                     	;# 
   249  0810                     	;# 
   250  0811                     	;# 
   251  0812                     	;# 
   252  0813                     	;# 
   253  0814                     	;# 
   254  081A                     	;# 
   255  081A                     	;# 
   256  081B                     	;# 
   257  081C                     	;# 
   258  081C                     	;# 
   259  081D                     	;# 
   260  081E                     	;# 
   261  081F                     	;# 
   262  088C                     	;# 
   263  088D                     	;# 
   264  088E                     	;# 
   265  088F                     	;# 
   266  0890                     	;# 
   267  0891                     	;# 
   268  0892                     	;# 
   269  0893                     	;# 
   270  0895                     	;# 
   271  0896                     	;# 
   272  090C                     	;# 
   273  090E                     	;# 
   274  090F                     	;# 
   275  091F                     	;# 
   276  098F                     	;# 
   277  098F                     	;# 
   278  0990                     	;# 
   279  0991                     	;# 
   280  0992                     	;# 
   281  0993                     	;# 
   282  0994                     	;# 
   283  0995                     	;# 
   284  0996                     	;# 
   285  0997                     	;# 
   286  0A19                     	;# 
   287  0A19                     	;# 
   288  0A1A                     	;# 
   289  0A1A                     	;# 
   290  0A1B                     	;# 
   291  0A1B                     	;# 
   292  0A1B                     	;# 
   293  0A1C                     	;# 
   294  0A1C                     	;# 
   295  0A1D                     	;# 
   296  0A1D                     	;# 
   297  0A1E                     	;# 
   298  0A1E                     	;# 
   299  0A1F                     	;# 
   300  0A1F                     	;# 
   301  0A1F                     	;# 
   302  1E0F                     	;# 
   303  1E10                     	;# 
   304  1E11                     	;# 
   305  1E12                     	;# 
   306  1E13                     	;# 
   307  1E14                     	;# 
   308  1E15                     	;# 
   309  1E16                     	;# 
   310  1E17                     	;# 
   311  1E18                     	;# 
   312  1E19                     	;# 
   313  1E1A                     	;# 
   314  1E1B                     	;# 
   315  1E1C                     	;# 
   316  1E1D                     	;# 
   317  1E1E                     	;# 
   318  1E1F                     	;# 
   319  1E20                     	;# 
   320  1E21                     	;# 
   321  1E22                     	;# 
   322  1E23                     	;# 
   323  1E24                     	;# 
   324  1E25                     	;# 
   325  1E26                     	;# 
   326  1E27                     	;# 
   327  1E28                     	;# 
   328  1E29                     	;# 
   329  1E2A                     	;# 
   330  1E2B                     	;# 
   331  1E2C                     	;# 
   332  1E2D                     	;# 
   333  1E2E                     	;# 
   334  1E2F                     	;# 
   335  1E30                     	;# 
   336  1E31                     	;# 
   337  1E32                     	;# 
   338  1E33                     	;# 
   339  1E34                     	;# 
   340  1E35                     	;# 
   341  1E36                     	;# 
   342  1E37                     	;# 
   343  1E8F                     	;# 
   344  1E90                     	;# 
   345  1E91                     	;# 
   346  1E92                     	;# 
   347  1E93                     	;# 
   348  1E9C                     	;# 
   349  1EA1                     	;# 
   350  1EA2                     	;# 
   351  1EB1                     	;# 
   352  1EBB                     	;# 
   353  1EBC                     	;# 
   354  1EBD                     	;# 
   355  1EBE                     	;# 
   356  1EC3                     	;# 
   357  1EC5                     	;# 
   358  1EC6                     	;# 
   359  1EC7                     	;# 
   360  1ECB                     	;# 
   361  1ECC                     	;# 
   362  1ECD                     	;# 
   363  1ECE                     	;# 
   364  1F10                     	;# 
   365  1F11                     	;# 
   366  1F12                     	;# 
   367  1F13                     	;# 
   368  1F14                     	;# 
   369  1F15                     	;# 
   370  1F1C                     	;# 
   371  1F1D                     	;# 
   372  1F1E                     	;# 
   373  1F1F                     	;# 
   374  1F20                     	;# 
   375  1F21                     	;# 
   376  1F22                     	;# 
   377  1F23                     	;# 
   378  1F24                     	;# 
   379  1F25                     	;# 
   380  1F26                     	;# 
   381  1F27                     	;# 
   382  1F38                     	;# 
   383  1F39                     	;# 
   384  1F3A                     	;# 
   385  1F3B                     	;# 
   386  1F3C                     	;# 
   387  1F3D                     	;# 
   388  1F3E                     	;# 
   389  1F3F                     	;# 
   390  1F43                     	;# 
   391  1F44                     	;# 
   392  1F45                     	;# 
   393  1F46                     	;# 
   394  1F47                     	;# 
   395  1F48                     	;# 
   396  1F49                     	;# 
   397  1F4A                     	;# 
   398  1F4E                     	;# 
   399  1F4F                     	;# 
   400  1F50                     	;# 
   401  1F51                     	;# 
   402  1F52                     	;# 
   403  1F53                     	;# 
   404  1F54                     	;# 
   405  1F55                     	;# 
   406  1FE4                     	;# 
   407  1FE5                     	;# 
   408  1FE6                     	;# 
   409  1FE7                     	;# 
   410  1FE8                     	;# 
   411  1FE8                     	;# 
   412  1FE9                     	;# 
   413  1FEA                     	;# 
   414  1FEA                     	;# 
   415  1FEB                     	;# 
   416  1FED                     	;# 
   417  1FEE                     	;# 
   418  1FEF                     	;# 
   419  000B                     _INTCONbits	set	11
   420  00A5                     _TRISC5	set	165
   421  0095                     _TRISA5	set	149
   422  00A0                     _TRISC0	set	160
   423  00A3                     _TRISC3	set	163
   424  009D                     _TRISB5	set	157
   425  00D7                     _LATC7	set	215
   426  00A7                     _TRISC7	set	167
   427  011B                     _SP1BRG	set	283
   428  011E                     _TX1STAbits	set	286
   429  0119                     _RC1REG	set	281
   430  011D                     _RC1STAbits	set	285
   431  011A                     _TX1REG	set	282
   432  059F                     _T0CON1	set	1439
   433  059E                     _T0CON0	set	1438
   434  059E                     _T0CON0bits	set	1438
   435  0716                     _PIE0bits	set	1814
   436  070C                     _PIR0bits	set	1804
   437  070F                     _PIR3bits	set	1807
   438  0A1B                     _SP2BRG	set	2587
   439  0A19                     _RC2REG	set	2585
   440  0A1A                     _TX2REG	set	2586
   441  0A1D                     _RC2STAbits	set	2589
   442  0A1E                     _TX2STAbits	set	2590
   443  1ECB                     _RX1DTPPSbits	set	7883
   444  1ECD                     _RX2DTPPSbits	set	7885
   445  1F24                     _RC4PPS	set	7972
   446  1F14                     _RA4PPS	set	7956
   447  1F21                     _RC1PPS	set	7969
   448  1F26                     _RC6PPS	set	7974
   449  1F1E                     _RB6PPS	set	7966
   450  1F27                     _RC7PPS	set	7975
   451  1F4E                     _ANSELC	set	8014
   452  1F43                     _ANSELB	set	8003
   453  1F38                     _ANSELA	set	7992
   454                           
   455                           	psect	stringtext1
   456  0484                     __pstringtext1:	
   457  0484                     STR_38:	
   458  0484  3434               	retlw	52	;'4'
   459  0485  3438               	retlw	56	;'8'
   460  0486  3436               	retlw	54	;'6'
   461  0487  3435               	retlw	53	;'5'
   462  0488  3436               	retlw	54	;'6'
   463  0489  3463               	retlw	99	;'c'
   464  048A  3436               	retlw	54	;'6'
   465  048B  3463               	retlw	99	;'c'
   466  048C  3436               	retlw	54	;'6'
   467  048D  3466               	retlw	102	;'f'
   468  048E  3432               	retlw	50	;'2'
   469  048F  3430               	retlw	48	;'0'
   470  0490  3435               	retlw	53	;'5'
   471  0491  3437               	retlw	55	;'7'
   472  0492  3436               	retlw	54	;'6'
   473  0493  3466               	retlw	102	;'f'
   474  0494  3437               	retlw	55	;'7'
   475  0495  3432               	retlw	50	;'2'
   476  0496  3436               	retlw	54	;'6'
   477  0497  3463               	retlw	99	;'c'
   478  0498  3436               	retlw	54	;'6'
   479  0499  3434               	retlw	52	;'4'
   480  049A  3400               	retlw	0
   481                           
   482                           	psect	stringtext2
   483  049B                     __pstringtext2:	
   484  049B                     STR_28:	
   485  049B  3447               	retlw	71	;'G'
   486  049C  3445               	retlw	69	;'E'
   487  049D  3454               	retlw	84	;'T'
   488  049E  345F               	retlw	95	;'_'
   489  049F  3441               	retlw	65	;'A'
   490  04A0  344C               	retlw	76	;'L'
   491  04A1  344C               	retlw	76	;'L'
   492  04A2  345F               	retlw	95	;'_'
   493  04A3  3453               	retlw	83	;'S'
   494  04A4  3445               	retlw	69	;'E'
   495  04A5  344E               	retlw	78	;'N'
   496  04A6  3444               	retlw	68	;'D'
   497  04A7  345F               	retlw	95	;'_'
   498  04A8  3453               	retlw	83	;'S'
   499  04A9  3449               	retlw	73	;'I'
   500  04AA  3447               	retlw	71	;'G'
   501  04AB  3446               	retlw	70	;'F'
   502  04AC  344F               	retlw	79	;'O'
   503  04AD  3458               	retlw	88	;'X'
   504  04AE  340D               	retlw	13
   505  04AF  340A               	retlw	10
   506  04B0  3400               	retlw	0
   507                           
   508                           	psect	stringtext3
   509  04C7                     __pstringtext3:	
   510  04C7                     STR_2:	
   511  04C7  3441               	retlw	65	;'A'
   512  04C8  3454               	retlw	84	;'T'
   513  04C9  342B               	retlw	43	;'+'
   514  04CA  3443               	retlw	67	;'C'
   515  04CB  3457               	retlw	87	;'W'
   516  04CC  344C               	retlw	76	;'L'
   517  04CD  3441               	retlw	65	;'A'
   518  04CE  3450               	retlw	80	;'P'
   519  04CF  344F               	retlw	79	;'O'
   520  04D0  3450               	retlw	80	;'P'
   521  04D1  3454               	retlw	84	;'T'
   522  04D2  343D               	retlw	61	;'='
   523  04D3  3431               	retlw	49	;'1'
   524  04D4  342C               	retlw	44	;','
   525  04D5  3431               	retlw	49	;'1'
   526  04D6  3432               	retlw	50	;'2'
   527  04D7  340D               	retlw	13
   528  04D8  340A               	retlw	10
   529  04D9  3400               	retlw	0
   530                           
   531                           	psect	stringtext4
   532  04EB                     __pstringtext4:	
   533  04EB                     STR_29:	
   534  04EB  3430               	retlw	48	;'0'
   535  04EC  3430               	retlw	48	;'0'
   536  04ED  3430               	retlw	48	;'0'
   537  04EE  3430               	retlw	48	;'0'
   538  04EF  3430               	retlw	48	;'0'
   539  04F0  3430               	retlw	48	;'0'
   540  04F1  3430               	retlw	48	;'0'
   541  04F2  3430               	retlw	48	;'0'
   542  04F3  3430               	retlw	48	;'0'
   543  04F4  3430               	retlw	48	;'0'
   544  04F5  3430               	retlw	48	;'0'
   545  04F6  3430               	retlw	48	;'0'
   546  04F7  340D               	retlw	13
   547  04F8  340A               	retlw	10
   548  04F9  3400               	retlw	0
   549                           
   550                           	psect	stringtext5
   551  04FA                     __pstringtext5:	
   552  04FA                     STR_13:	
   553  04FA  3453               	retlw	83	;'S'
   554  04FB  3449               	retlw	73	;'I'
   555  04FC  3447               	retlw	71	;'G'
   556  04FD  3446               	retlw	70	;'F'
   557  04FE  344F               	retlw	79	;'O'
   558  04FF  3458               	retlw	88	;'X'
   559  0500  345F               	retlw	95	;'_'
   560  0501  3453               	retlw	83	;'S'
   561  0502  3454               	retlw	84	;'T'
   562  0503  3441               	retlw	65	;'A'
   563  0504  3452               	retlw	82	;'R'
   564  0505  3454               	retlw	84	;'T'
   565  0506  340D               	retlw	13
   566  0507  340A               	retlw	10
   567  0508  3400               	retlw	0
   568                           
   569                           	psect	stringtext6
   570  0509                     __pstringtext6:	
   571  0509                     STR_23:	
   572  0509  344D               	retlw	77	;'M'
   573  050A  3445               	retlw	69	;'E'
   574  050B  3453               	retlw	83	;'S'
   575  050C  3453               	retlw	83	;'S'
   576  050D  3441               	retlw	65	;'A'
   577  050E  3447               	retlw	71	;'G'
   578  050F  3445               	retlw	69	;'E'
   579  0510  345F               	retlw	95	;'_'
   580  0511  3445               	retlw	69	;'E'
   581  0512  344E               	retlw	78	;'N'
   582  0513  3444               	retlw	68	;'D'
   583  0514  340D               	retlw	13
   584  0515  340A               	retlw	10
   585  0516  3400               	retlw	0
   586                           
   587                           	psect	stringtext7
   588  0517                     __pstringtext7:	
   589  0517                     STR_15:	
   590  0517  3453               	retlw	83	;'S'
   591  0518  3449               	retlw	73	;'I'
   592  0519  3447               	retlw	71	;'G'
   593  051A  3446               	retlw	70	;'F'
   594  051B  344F               	retlw	79	;'O'
   595  051C  3458               	retlw	88	;'X'
   596  051D  345F               	retlw	95	;'_'
   597  051E  3445               	retlw	69	;'E'
   598  051F  344E               	retlw	78	;'N'
   599  0520  3444               	retlw	68	;'D'
   600  0521  340D               	retlw	13
   601  0522  340A               	retlw	10
   602  0523  3400               	retlw	0
   603                           
   604                           	psect	stringtext8
   605  0524                     __pstringtext8:	
   606  0524                     STR_1:	
   607  0524  3457               	retlw	87	;'W'
   608  0525  3449               	retlw	73	;'I'
   609  0526  3446               	retlw	70	;'F'
   610  0527  3449               	retlw	73	;'I'
   611  0528  345F               	retlw	95	;'_'
   612  0529  3453               	retlw	83	;'S'
   613  052A  3454               	retlw	84	;'T'
   614  052B  3441               	retlw	65	;'A'
   615  052C  3452               	retlw	82	;'R'
   616  052D  3454               	retlw	84	;'T'
   617  052E  340D               	retlw	13
   618  052F  340A               	retlw	10
   619  0530  3400               	retlw	0
   620                           
   621                           	psect	stringtext9
   622  0531                     __pstringtext9:	
   623  0531                     STR_33:	
   624  0531  3453               	retlw	83	;'S'
   625  0532  3445               	retlw	69	;'E'
   626  0533  344E               	retlw	78	;'N'
   627  0534  3444               	retlw	68	;'D'
   628  0535  345F               	retlw	95	;'_'
   629  0536  3453               	retlw	83	;'S'
   630  0537  3449               	retlw	73	;'I'
   631  0538  3447               	retlw	71	;'G'
   632  0539  3446               	retlw	70	;'F'
   633  053A  344F               	retlw	79	;'O'
   634  053B  3458               	retlw	88	;'X'
   635  053C  343A               	retlw	58	;':'
   636  053D  3400               	retlw	0
   637                           
   638                           	psect	stringtext10
   639  053E                     __pstringtext10:	
   640  053E                     STR_18:	
   641  053E  3441               	retlw	65	;'A'
   642  053F  3454               	retlw	84	;'T'
   643  0540  342B               	retlw	43	;'+'
   644  0541  3443               	retlw	67	;'C'
   645  0542  344D               	retlw	77	;'M'
   646  0543  3447               	retlw	71	;'G'
   647  0544  3446               	retlw	70	;'F'
   648  0545  343D               	retlw	61	;'='
   649  0546  3431               	retlw	49	;'1'
   650  0547  340D               	retlw	13
   651  0548  340A               	retlw	10
   652  0549  3400               	retlw	0
   653                           
   654                           	psect	stringtext11
   655  054A                     __pstringtext11:	
   656  054A                     STR_6:	
   657  054A  3441               	retlw	65	;'A'
   658  054B  3454               	retlw	84	;'T'
   659  054C  342B               	retlw	43	;'+'
   660  054D  3443               	retlw	67	;'C'
   661  054E  3452               	retlw	82	;'R'
   662  054F  3445               	retlw	69	;'E'
   663  0550  3447               	retlw	71	;'G'
   664  0551  343D               	retlw	61	;'='
   665  0552  3432               	retlw	50	;'2'
   666  0553  340D               	retlw	13
   667  0554  340A               	retlw	10
   668  0555  3400               	retlw	0
   669                           
   670                           	psect	stringtext12
   671  0556                     __pstringtext12:	
   672  0556                     STR_5:	
   673  0556  3447               	retlw	71	;'G'
   674  0557  3453               	retlw	83	;'S'
   675  0558  344D               	retlw	77	;'M'
   676  0559  345F               	retlw	95	;'_'
   677  055A  3453               	retlw	83	;'S'
   678  055B  3454               	retlw	84	;'T'
   679  055C  3441               	retlw	65	;'A'
   680  055D  3452               	retlw	82	;'R'
   681  055E  3454               	retlw	84	;'T'
   682  055F  340D               	retlw	13
   683  0560  340A               	retlw	10
   684  0561  3400               	retlw	0
   685                           
   686                           	psect	stringtext13
   687  0562                     __pstringtext13:	
   688  0562                     STR_10:	
   689  0562  3447               	retlw	71	;'G'
   690  0563  3450               	retlw	80	;'P'
   691  0564  3453               	retlw	83	;'S'
   692  0565  345F               	retlw	95	;'_'
   693  0566  3453               	retlw	83	;'S'
   694  0567  3454               	retlw	84	;'T'
   695  0568  3441               	retlw	65	;'A'
   696  0569  3452               	retlw	82	;'R'
   697  056A  3454               	retlw	84	;'T'
   698  056B  340D               	retlw	13
   699  056C  340A               	retlw	10
   700  056D  3400               	retlw	0
   701                           
   702                           	psect	stringtext14
   703  056E                     __pstringtext14:	
   704  056E                     STR_36:	
   705  056E  3448               	retlw	72	;'H'
   706  056F  3465               	retlw	101	;'e'
   707  0570  346C               	retlw	108	;'l'
   708  0571  346C               	retlw	108	;'l'
   709  0572  346F               	retlw	111	;'o'
   710  0573  3420               	retlw	32	;' '
   711  0574  3457               	retlw	87	;'W'
   712  0575  346F               	retlw	111	;'o'
   713  0576  3472               	retlw	114	;'r'
   714  0577  346C               	retlw	108	;'l'
   715  0578  3464               	retlw	100	;'d'
   716  0579  3400               	retlw	0
   717                           
   718                           	psect	stringtext15
   719  057A                     __pstringtext15:	
   720  057A                     STR_8:	
   721  057A  3441               	retlw	65	;'A'
   722  057B  3454               	retlw	84	;'T'
   723  057C  342B               	retlw	43	;'+'
   724  057D  3443               	retlw	67	;'C'
   725  057E  3452               	retlw	82	;'R'
   726  057F  3445               	retlw	69	;'E'
   727  0580  3447               	retlw	71	;'G'
   728  0581  343F               	retlw	63	;'?'
   729  0582  340D               	retlw	13
   730  0583  340A               	retlw	10
   731  0584  3400               	retlw	0
   732                           
   733                           	psect	stringtext16
   734  0585                     __pstringtext16:	
   735  0585                     STR_4:	
   736  0585  3457               	retlw	87	;'W'
   737  0586  3449               	retlw	73	;'I'
   738  0587  3446               	retlw	70	;'F'
   739  0588  3449               	retlw	73	;'I'
   740  0589  345F               	retlw	95	;'_'
   741  058A  3445               	retlw	69	;'E'
   742  058B  344E               	retlw	78	;'N'
   743  058C  3444               	retlw	68	;'D'
   744  058D  340D               	retlw	13
   745  058E  340A               	retlw	10
   746  058F  3400               	retlw	0
   747                           
   748                           	psect	stringtext17
   749  0590                     __pstringtext17:	
   750  0590                     STR_26:	
   751  0590  3447               	retlw	71	;'G'
   752  0591  3445               	retlw	69	;'E'
   753  0592  3454               	retlw	84	;'T'
   754  0593  345F               	retlw	95	;'_'
   755  0594  3457               	retlw	87	;'W'
   756  0595  3449               	retlw	73	;'I'
   757  0596  3446               	retlw	70	;'F'
   758  0597  3449               	retlw	73	;'I'
   759  0598  340D               	retlw	13
   760  0599  340A               	retlw	10
   761  059A  3400               	retlw	0
   762                           
   763                           	psect	stringtext18
   764  059B                     __pstringtext18:	
   765  059B                     STR_3:	
   766  059B  3441               	retlw	65	;'A'
   767  059C  3454               	retlw	84	;'T'
   768  059D  342B               	retlw	43	;'+'
   769  059E  3443               	retlw	67	;'C'
   770  059F  3457               	retlw	87	;'W'
   771  05A0  344C               	retlw	76	;'L'
   772  05A1  3441               	retlw	65	;'A'
   773  05A2  3450               	retlw	80	;'P'
   774  05A3  340D               	retlw	13
   775  05A4  340A               	retlw	10
   776  05A5  3400               	retlw	0
   777                           
   778                           	psect	stringtext19
   779  05A6                     __pstringtext19:	
   780  05A6                     STR_34:	
   781  05A6  3453               	retlw	83	;'S'
   782  05A7  3445               	retlw	69	;'E'
   783  05A8  344E               	retlw	78	;'N'
   784  05A9  3444               	retlw	68	;'D'
   785  05AA  345F               	retlw	95	;'_'
   786  05AB  3453               	retlw	83	;'S'
   787  05AC  344D               	retlw	77	;'M'
   788  05AD  3453               	retlw	83	;'S'
   789  05AE  340D               	retlw	13
   790  05AF  340A               	retlw	10
   791  05B0  3400               	retlw	0
   792                           
   793                           	psect	stringtext20
   794  05B1                     __pstringtext20:	
   795  05B1                     STR_9:	
   796  05B1  3447               	retlw	71	;'G'
   797  05B2  3453               	retlw	83	;'S'
   798  05B3  344D               	retlw	77	;'M'
   799  05B4  345F               	retlw	95	;'_'
   800  05B5  3445               	retlw	69	;'E'
   801  05B6  344E               	retlw	78	;'N'
   802  05B7  3444               	retlw	68	;'D'
   803  05B8  340D               	retlw	13
   804  05B9  340A               	retlw	10
   805  05BA  3400               	retlw	0
   806                           
   807                           	psect	stringtext21
   808  05BB                     __pstringtext21:	
   809  05BB                     STR_12:	
   810  05BB  3447               	retlw	71	;'G'
   811  05BC  3450               	retlw	80	;'P'
   812  05BD  3453               	retlw	83	;'S'
   813  05BE  345F               	retlw	95	;'_'
   814  05BF  3445               	retlw	69	;'E'
   815  05C0  344E               	retlw	78	;'N'
   816  05C1  3444               	retlw	68	;'D'
   817  05C2  340D               	retlw	13
   818  05C3  340A               	retlw	10
   819  05C4  3400               	retlw	0
   820                           
   821                           	psect	stringtext22
   822  05C5                     __pstringtext22:	
   823  05C5                     STR_40:	
   824  05C5  3454               	retlw	84	;'T'
   825  05C6  3452               	retlw	82	;'R'
   826  05C7  3449               	retlw	73	;'I'
   827  05C8  3447               	retlw	71	;'G'
   828  05C9  344F               	retlw	79	;'O'
   829  05CA  3446               	retlw	70	;'F'
   830  05CB  3446               	retlw	70	;'F'
   831  05CC  340D               	retlw	13
   832  05CD  340A               	retlw	10
   833  05CE  3400               	retlw	0
   834                           
   835                           	psect	stringtext23
   836  05CF                     __pstringtext23:	
   837  05CF                     STR_31:	
   838  05CF  3447               	retlw	71	;'G'
   839  05D0  3445               	retlw	69	;'E'
   840  05D1  3454               	retlw	84	;'T'
   841  05D2  345F               	retlw	95	;'_'
   842  05D3  3441               	retlw	65	;'A'
   843  05D4  344C               	retlw	76	;'L'
   844  05D5  344C               	retlw	76	;'L'
   845  05D6  340D               	retlw	13
   846  05D7  340A               	retlw	10
   847  05D8  3400               	retlw	0
   848                           
   849                           	psect	stringtext24
   850  05D9                     __pstringtext24:	
   851  05D9                     STR_24:	
   852  05D9  3447               	retlw	71	;'G'
   853  05DA  3445               	retlw	69	;'E'
   854  05DB  3454               	retlw	84	;'T'
   855  05DC  345F               	retlw	95	;'_'
   856  05DD  3447               	retlw	71	;'G'
   857  05DE  3453               	retlw	83	;'S'
   858  05DF  344D               	retlw	77	;'M'
   859  05E0  340D               	retlw	13
   860  05E1  340A               	retlw	10
   861  05E2  3400               	retlw	0
   862                           
   863                           	psect	stringtext25
   864  05E3                     __pstringtext25:	
   865  05E3                     STR_22:	
   866  05E3  3447               	retlw	71	;'G'
   867  05E4  3445               	retlw	69	;'E'
   868  05E5  3454               	retlw	84	;'T'
   869  05E6  345F               	retlw	95	;'_'
   870  05E7  3447               	retlw	71	;'G'
   871  05E8  3450               	retlw	80	;'P'
   872  05E9  3453               	retlw	83	;'S'
   873  05EA  340D               	retlw	13
   874  05EB  340A               	retlw	10
   875  05EC  3400               	retlw	0
   876                           
   877                           	psect	stringtext26
   878  05ED                     __pstringtext26:	
   879  05ED                     STR_19:	
   880  05ED  3441               	retlw	65	;'A'
   881  05EE  3454               	retlw	84	;'T'
   882  05EF  342B               	retlw	43	;'+'
   883  05F0  3443               	retlw	67	;'C'
   884  05F1  344D               	retlw	77	;'M'
   885  05F2  3447               	retlw	71	;'G'
   886  05F3  3453               	retlw	83	;'S'
   887  05F4  343D               	retlw	61	;'='
   888  05F5  3422               	retlw	34	;'"'
   889  05F6  3400               	retlw	0
   890                           
   891                           	psect	stringtext27
   892  060B                     __pstringtext27:	
   893  060B                     STR_39:	
   894  060B  3454               	retlw	84	;'T'
   895  060C  3452               	retlw	82	;'R'
   896  060D  3449               	retlw	73	;'I'
   897  060E  3447               	retlw	71	;'G'
   898  060F  344F               	retlw	79	;'O'
   899  0610  344E               	retlw	78	;'N'
   900  0611  340D               	retlw	13
   901  0612  340A               	retlw	10
   902  0613  3400               	retlw	0
   903                           
   904                           	psect	stringtext28
   905  0614                     __pstringtext28:	
   906  0614                     STR_7:	
   907  0614  3441               	retlw	65	;'A'
   908  0615  3454               	retlw	84	;'T'
   909  0616  342B               	retlw	43	;'+'
   910  0617  3443               	retlw	67	;'C'
   911  0618  3453               	retlw	83	;'S'
   912  0619  3451               	retlw	81	;'Q'
   913  061A  340D               	retlw	13
   914  061B  340A               	retlw	10
   915  061C  3400               	retlw	0
   916                           
   917                           	psect	stringtext29
   918  061D                     __pstringtext29:	
   919  061D                     STR_11:	
   920  061D  3424               	retlw	36	;'$'
   921  061E  3447               	retlw	71	;'G'
   922  061F  3450               	retlw	80	;'P'
   923  0620  3447               	retlw	71	;'G'
   924  0621  3447               	retlw	71	;'G'
   925  0622  3441               	retlw	65	;'A'
   926  0623  342C               	retlw	44	;','
   927  0624  3400               	retlw	0
   928                           
   929                           	psect	stringtext30
   930  0635                     __pstringtext30:	
   931  0635                     STR_16:	
   932  0635  3441               	retlw	65	;'A'
   933  0636  3454               	retlw	84	;'T'
   934  0637  3424               	retlw	36	;'$'
   935  0638  3453               	retlw	83	;'S'
   936  0639  3446               	retlw	70	;'F'
   937  063A  343D               	retlw	61	;'='
   938  063B  3400               	retlw	0
   939                           
   940                           	psect	stringtext31
   941  063C                     __pstringtext31:	
   942  063C                     STR_35:	
   943  063C  346E               	retlw	110	;'n'
   944  063D  3475               	retlw	117	;'u'
   945  063E  346D               	retlw	109	;'m'
   946  063F  346D               	retlw	109	;'m'
   947  0640  3465               	retlw	101	;'e'
   948  0641  3472               	retlw	114	;'r'
   949  0642  3400               	retlw	0
   950                           
   951                           	psect	stringtext32
   952  0643                     __pstringtext32:	
   953  0643                     STR_14:	
   954  0643  3441               	retlw	65	;'A'
   955  0644  3454               	retlw	84	;'T'
   956  0645  340D               	retlw	13
   957  0646  340A               	retlw	10
   958  0647  3400               	retlw	0
   959                           
   960                           	psect	stringtext33
   961  0648                     __pstringtext33:	
   962  0648                     STR_20:	
   963  0648  3422               	retlw	34	;'"'
   964  0649  340D               	retlw	13
   965  064A  340A               	retlw	10
   966  064B  3400               	retlw	0
   967                           
   968                           	psect	stringtext34
   969  0000                     __pstringtext34:	
   970  0649                     
   971                           ; #config settings
   972  0000                     
   973                           	psect	cinit
   974  0027                     start_initialization:	
   975  0027                     __initialization:	
   976                           
   977                           ; Clear objects allocated to COMMON
   978  0027  01FC               	clrf	__pbssCOMMON& (0+127)
   979                           
   980                           ; Clear objects allocated to BANK0
   981  0028  0140               	movlb	0	; select bank0
   982  0029  01E9               	clrf	__pbssBANK0& (0+127)
   983  002A  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   984  002B  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   985  002C  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   986  002D                     end_of_initialization:	
   987                           ;End of C runtime variable initialization code
   988                           
   989  002D                     __end_of__initialization:	
   990  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   991  002E  0140               	movlb	0
   992  002F  3183  2BF3         	ljmp	_main	;jump to C main() function
   993                           
   994                           	psect	bssCOMMON
   995  007C                     __pbssCOMMON:	
   996  007C                     _timerDone:	
   997  007C                     	ds	1
   998                           
   999                           	psect	bssBANK0
  1000  0069                     __pbssBANK0:	
  1001  0069                     _timerActual:	
  1002  0069                     	ds	2
  1003  006B                     _timerSetpoint:	
  1004  006B                     	ds	2
  1005                           
  1006                           	psect	cstackCOMMON
  1007  0070                     __pcstackCOMMON:	
  1008  0070                     ?_initBTSerial:	
  1009  0070                     ?_setActivePeripheral:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_waitForCommand:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_main:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?_serialWritePeripheral:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_serialReadPeripheral:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_serialWriteBT:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_serialReadBT:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?_timerCount:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0070                     ??_timerCount:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     ?_getWiFiData:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ?_getGSMData:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     ?_getGPSData:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x0
  1047  0070                     	ds	1
  1048  0071                     ??_initBTSerial:	
  1049  0071                     ??_setActivePeripheral:	
  1050                           ; 1 bytes @ 0x1
  1051                           
  1052  0071                     ??_serialWritePeripheral:	
  1053                           ; 1 bytes @ 0x1
  1054                           
  1055  0071                     ??_serialReadPeripheral:	
  1056                           ; 1 bytes @ 0x1
  1057                           
  1058  0071                     ?_serialFindPeripheral:	
  1059                           ; 1 bytes @ 0x1
  1060                           
  1061  0071                     ??_serialWriteBT:	
  1062                           ; 1 bytes @ 0x1
  1063                           
  1064  0071                     ??_serialReadBT:	
  1065                           ; 1 bytes @ 0x1
  1066                           
  1067  0071                     ?_startTimer:	
  1068                           ; 1 bytes @ 0x1
  1069                           
  1070  0071                     ?_strcmp:	
  1071                           ; 1 bytes @ 0x1
  1072                           
  1073  0071                     ?_strncmp:	
  1074                           ; 2 bytes @ 0x1
  1075                           
  1076  0071                     serialWritePeripheral@c:	
  1077                           ; 2 bytes @ 0x1
  1078                           
  1079  0071                     setActivePeripheral@peri:	
  1080                           ; 1 bytes @ 0x1
  1081                           
  1082  0071                     serialWriteBT@c:	
  1083                           ; 1 bytes @ 0x1
  1084                           
  1085  0071                     serialFindPeripheral@s:	
  1086                           ; 1 bytes @ 0x1
  1087                           
  1088  0071                     startTimer@seconds:	
  1089                           ; 2 bytes @ 0x1
  1090                           
  1091  0071                     strcmp@s2:	
  1092                           ; 2 bytes @ 0x1
  1093                           
  1094  0071                     strncmp@s2:	
  1095                           ; 2 bytes @ 0x1
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x1
  1099  0071                     	ds	1
  1100  0072                     ?_serialPrintPeripheral:	
  1101  0072                     ?_serialPrintBT:	
  1102                           ; 1 bytes @ 0x2
  1103                           
  1104  0072                     serialPrintPeripheral@s:	
  1105                           ; 1 bytes @ 0x2
  1106                           
  1107  0072                     serialPrintBT@s:	
  1108                           ; 2 bytes @ 0x2
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x2
  1112  0072                     	ds	1
  1113  0073                     ??_strcmp:	
  1114  0073                     ??_serialFindPeripheral:	
  1115                           ; 1 bytes @ 0x3
  1116                           
  1117  0073                     ??_startTimer:	
  1118                           ; 1 bytes @ 0x3
  1119                           
  1120  0073                     strncmp@len:	
  1121                           ; 1 bytes @ 0x3
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0x3
  1125  0073                     	ds	1
  1126  0074                     ??_serialPrintPeripheral:	
  1127  0074                     ??_serialPrintBT:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  0074                     strcmp@r:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133  0074                     serialFindPeripheral@i:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136                           
  1137                           ; 2 bytes @ 0x4
  1138  0074                     	ds	1
  1139  0075                     ??_strncmp:	
  1140  0075                     strcmp@s1:	
  1141                           ; 1 bytes @ 0x5
  1142                           
  1143  0075                     serialPrintPeripheral@i:	
  1144                           ; 1 bytes @ 0x5
  1145                           
  1146  0075                     serialPrintBT@i:	
  1147                           ; 2 bytes @ 0x5
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x5
  1151  0075                     	ds	2
  1152  0077                     ??_getWiFiData:	
  1153  0077                     ??_getGSMData:	
  1154                           ; 1 bytes @ 0x7
  1155                           
  1156  0077                     ??_getGPSData:	
  1157                           ; 1 bytes @ 0x7
  1158                           
  1159  0077                     ?_sendSigfox:	
  1160                           ; 1 bytes @ 0x7
  1161                           
  1162  0077                     ?_sendSMS:	
  1163                           ; 1 bytes @ 0x7
  1164                           
  1165  0077                     strncmp@s1:	
  1166                           ; 1 bytes @ 0x7
  1167                           
  1168  0077                     sendSigfox@hexMessage:	
  1169                           ; 1 bytes @ 0x7
  1170                           
  1171  0077                     sendSMS@number:	
  1172                           ; 2 bytes @ 0x7
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x7
  1176  0077                     	ds	1
  1177  0078                     getGPSData@found:	
  1178                           
  1179                           ; 1 bytes @ 0x8
  1180  0078                     	ds	1
  1181  0079                     ??_sendSigfox:	
  1182  0079                     getWiFiData@c:	
  1183                           ; 1 bytes @ 0x9
  1184                           
  1185  0079                     getGPSData@c:	
  1186                           ; 1 bytes @ 0x9
  1187                           
  1188  0079                     sendSMS@message:	
  1189                           ; 1 bytes @ 0x9
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x9
  1193  0079                     	ds	2
  1194  007B                     ??_waitForCommand:	
  1195                           
  1196                           ; 1 bytes @ 0xB
  1197  007B                     	ds	1
  1198                           
  1199                           	psect	cstackBANK0
  1200  0020                     __pcstackBANK0:	
  1201  0020                     ??_sendSMS:	
  1202                           
  1203                           ; 1 bytes @ 0x0
  1204  0020                     	ds	2
  1205  0022                     waitForCommand@message:	
  1206                           
  1207                           ; 30 bytes @ 0x2
  1208  0022                     	ds	30
  1209  0040                     waitForCommand@command:	
  1210                           
  1211                           ; 32 bytes @ 0x20
  1212  0040                     	ds	32
  1213  0060                     waitForCommand@c:	
  1214                           
  1215                           ; 1 bytes @ 0x40
  1216  0060                     	ds	1
  1217  0061                     waitForCommand@c_458:	
  1218                           
  1219                           ; 1 bytes @ 0x41
  1220  0061                     	ds	1
  1221  0062                     waitForCommand@i:	
  1222                           
  1223                           ; 2 bytes @ 0x42
  1224  0062                     	ds	2
  1225  0064                     waitForCommand@i_450:	
  1226                           
  1227                           ; 2 bytes @ 0x44
  1228  0064                     	ds	2
  1229  0066                     waitForCommand@p:	
  1230                           
  1231                           ; 1 bytes @ 0x46
  1232  0066                     	ds	1
  1233  0067                     ??_main:	
  1234                           
  1235                           ; 1 bytes @ 0x47
  1236  0067                     	ds	2
  1237                           
  1238                           	psect	maintext
  1239  03F3                     __pmaintext:	
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 88 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : B3F/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1259 ;;      Params:         0       0       0       0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0
  1261 ;;      Temps:          0       2       0       0       0       0       0       0
  1262 ;;      Totals:         0       2       0       0       0       0       0       0
  1263 ;;Total ram usage:        2 bytes
  1264 ;; Hardware stack levels required when called:    5
  1265 ;; This function calls:
  1266 ;;		_initBTSerial
  1267 ;;		_setActivePeripheral
  1268 ;;		_waitForCommand
  1269 ;; This function is called by:
  1270 ;;		Startup code after reset
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           
  1275                           ;psect for function _main
  1276  03F3                     _main:	
  1277                           
  1278                           ;main.c: 90: ANSELA = 0;
  1279                           
  1280                           ;incstack = 0
  1281                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1282  03F3  017E               	movlb	62	; select bank62
  1283  03F4  01B8               	clrf	56	;volatile
  1284                           
  1285                           ;main.c: 91: ANSELB = 0;
  1286  03F5  01C3               	clrf	67	;volatile
  1287                           
  1288                           ;main.c: 92: ANSELC = 0;
  1289  03F6  01CE               	clrf	78	;volatile
  1290                           
  1291                           ;main.c: 95: RC7PPS = 0;
  1292  03F7  01A7               	clrf	39	;volatile
  1293                           
  1294                           ;main.c: 96: TRISC7 = 0;
  1295  03F8  0140               	movlb	0	; select bank0
  1296  03F9  1394               	bcf	20,7	;volatile
  1297                           
  1298                           ;main.c: 97: LATC7 = 0;
  1299  03FA  139A               	bcf	26,7	;volatile
  1300                           
  1301                           ;main.c: 100: INTCONbits.GIE = 1;
  1302  03FB  178B               	bsf	11,7	;volatile
  1303                           
  1304                           ;main.c: 101: INTCONbits.PEIE = 1;
  1305  03FC  170B               	bsf	11,6	;volatile
  1306                           
  1307                           ;main.c: 104: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1308  03FD  30CB               	movlw	203
  1309  03FE  0140               	movlb	0	; select bank0
  1310  03FF  00E8               	movwf	??_main+1
  1311  0400  30EC               	movlw	236
  1312  0401  00E7               	movwf	??_main
  1313  0402  3084               	movlw	132
  1314  0403                     u1277:	
  1315  0403  0B89               	decfsz	9,f
  1316  0404  2C03               	goto	u1277
  1317  0405  0BE7               	decfsz	??_main,f
  1318  0406  2C03               	goto	u1277
  1319  0407  0BE8               	decfsz	??_main+1,f
  1320  0408  2C03               	goto	u1277
  1321  0409  0000               	nop
  1322                           
  1323                           ;main.c: 105: initBTSerial();
  1324  040A  3184  24B1  3183   	fcall	_initBTSerial
  1325                           
  1326                           ;main.c: 106: setActivePeripheral(sigfox);
  1327  040D  3002               	movlw	2
  1328  040E  3182  22E8  3183   	fcall	_setActivePeripheral
  1329  0411                     l1576:	
  1330                           ;main.c: 108: while (1) {
  1331                           
  1332                           
  1333                           ;main.c: 109: waitForCommand();
  1334  0411  3180  2031  3183   	fcall	_waitForCommand
  1335  0414  2C11               	goto	l1576
  1336  0415                     __end_of_main:	
  1337                           ;main.c: 111: }
  1338                           ;main.c: 112: return;
  1339                           
  1340                           
  1341                           	psect	text1
  1342  0031                     __ptext1:	
  1343 ;; *************** function _waitForCommand *****************
  1344 ;; Defined at:
  1345 ;;		line 408 in file "main.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  c               1   65[BANK0 ] unsigned char 
  1350 ;;  c               1   64[BANK0 ] unsigned char 
  1351 ;;  message        30    2[BANK0 ] unsigned char [30]
  1352 ;;  i               2   68[BANK0 ] int 
  1353 ;;  p               1   70[BANK0 ] PTR unsigned char 
  1354 ;;		 -> waitForCommand@command(32), 
  1355 ;;  command        32   32[BANK0 ] unsigned char [32]
  1356 ;;  i               2   66[BANK0 ] int 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1366 ;;      Params:         0       0       0       0       0       0       0       0
  1367 ;;      Locals:         0      69       0       0       0       0       0       0
  1368 ;;      Temps:          1       0       0       0       0       0       0       0
  1369 ;;      Totals:         1      69       0       0       0       0       0       0
  1370 ;;Total ram usage:       70 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    4
  1373 ;; This function calls:
  1374 ;;		_getGPSData
  1375 ;;		_getGSMData
  1376 ;;		_getWiFiData
  1377 ;;		_sendSMS
  1378 ;;		_sendSigfox
  1379 ;;		_serialPrintBT
  1380 ;;		_serialReadBT
  1381 ;;		_serialReadPeripheral
  1382 ;;		_serialWriteBT
  1383 ;;		_startTimer
  1384 ;;		_strcmp
  1385 ;;		_strncmp
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _waitForCommand
  1393  0031                     _waitForCommand:	
  1394  0031                     l220:	
  1395                           ;main.c: 409: char command[32];
  1396                           ;main.c: 411: while (!PIR3bits.RC2IF) {
  1397                           
  1398                           ;incstack = 0
  1399                           ; Regs used in _waitForCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1400                           
  1401  0031  014E               	movlb	14	; select bank14
  1402  0032  1F8F               	btfss	15,7	;volatile
  1403  0033  2831               	goto	l220
  1404                           
  1405                           ;main.c: 412: }
  1406                           ;main.c: 414: startTimer(2);
  1407  0034  3002               	movlw	2
  1408  0035  00F1               	movwf	startTimer@seconds
  1409  0036  3000               	movlw	0
  1410  0037  00F2               	movwf	startTimer@seconds+1
  1411  0038  3184  24DA  3180   	fcall	_startTimer
  1412                           
  1413                           ;main.c: 415: int i = 0;
  1414  003B  0140               	movlb	0	; select bank0
  1415  003C  01E2               	clrf	waitForCommand@i
  1416  003D  01E3               	clrf	waitForCommand@i+1
  1417  003E                     l1476:	
  1418                           ;main.c: 416: while (!timerDone) {
  1419                           
  1420  003E  087C               	movf	_timerDone,w
  1421  003F  1D03               	btfss	3,2
  1422  0040  2854               	goto	l1478
  1423                           
  1424                           ;main.c: 417: if (PIR3bits.RC2IF) {
  1425  0041  014E               	movlb	14	; select bank14
  1426  0042  1F8F               	btfss	15,7	;volatile
  1427  0043  283E               	goto	l1476
  1428                           
  1429                           ;main.c: 418: command[i] = serialReadBT();
  1430  0044  3185  25F7  3180   	fcall	_serialReadBT
  1431  0047  00FB               	movwf	??_waitForCommand
  1432  0048  0140               	movlb	0	; select bank0
  1433  0049  0862               	movf	waitForCommand@i,w
  1434  004A  3E40               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1435  004B  0086               	movwf	6
  1436  004C  0187               	clrf	7
  1437  004D  087B               	movf	??_waitForCommand,w
  1438  004E  0081               	movwf	1
  1439                           
  1440                           ;main.c: 419: i++;
  1441  004F  3001               	movlw	1
  1442  0050  07E2               	addwf	waitForCommand@i,f
  1443  0051  3000               	movlw	0
  1444  0052  3DE3               	addwfc	waitForCommand@i+1,f
  1445  0053  283E               	goto	l1476
  1446  0054                     l1478:	
  1447                           
  1448                           ;main.c: 420: }
  1449                           ;main.c: 421: }
  1450                           ;main.c: 422: command[i] = '\0';
  1451  0054  0140               	movlb	0	; select bank0
  1452  0055  0862               	movf	waitForCommand@i,w
  1453  0056  3E40               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1454  0057  0086               	movwf	6
  1455  0058  0187               	clrf	7
  1456  0059  0181               	clrf	1
  1457                           
  1458                           ;main.c: 425: if (strcmp(command, "GET_GPS\r\n") == 0) {
  1459  005A  30E3               	movlw	low (STR_22| (0+32768))
  1460  005B  00F1               	movwf	strcmp@s2
  1461  005C  3085               	movlw	high (STR_22| (0+32768))
  1462  005D  00F2               	movwf	strcmp@s2+1
  1463  005E  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1464  005F  3183  23CC  3180   	fcall	_strcmp
  1465  0062  0871               	movf	?_strcmp,w
  1466  0063  0472               	iorwf	?_strcmp+1,w
  1467  0064  1D03               	btfss	3,2
  1468  0065  2870               	goto	l1484
  1469                           
  1470                           ;main.c: 426: getGPSData();
  1471  0066  3183  2341  3180   	fcall	_getGPSData
  1472                           
  1473                           ;main.c: 427: serialPrintBT("MESSAGE_END\r\n");
  1474  0069  3009               	movlw	low (STR_23| (0+32768))
  1475  006A  00F2               	movwf	serialPrintBT@s
  1476  006B  3085               	movlw	high (STR_23| (0+32768))
  1477  006C  00F3               	movwf	serialPrintBT@s+1
  1478  006D  3184  2451         	fcall	_serialPrintBT
  1479                           
  1480                           ;main.c: 428: } else if (strcmp(command, "GET_GSM\r\n") == 0) {
  1481  006F  0008               	return
  1482  0070                     l1484:	
  1483  0070  30D9               	movlw	low (STR_24| (0+32768))
  1484  0071  00F1               	movwf	strcmp@s2
  1485  0072  3085               	movlw	high (STR_24| (0+32768))
  1486  0073  00F2               	movwf	strcmp@s2+1
  1487  0074  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1488  0075  3183  23CC  3180   	fcall	_strcmp
  1489  0078  0871               	movf	?_strcmp,w
  1490  0079  0472               	iorwf	?_strcmp+1,w
  1491  007A  1D03               	btfss	3,2
  1492  007B  2886               	goto	l1488
  1493                           
  1494                           ;main.c: 429: getGSMData();
  1495  007C  3181  219D  3180   	fcall	_getGSMData
  1496                           
  1497                           ;main.c: 430: serialPrintBT("MESSAGE_END\r\n");
  1498  007F  3009               	movlw	low (STR_23| (0+32768))
  1499  0080  00F2               	movwf	serialPrintBT@s
  1500  0081  3085               	movlw	high (STR_23| (0+32768))
  1501  0082  00F3               	movwf	serialPrintBT@s+1
  1502  0083  3184  2451         	fcall	_serialPrintBT
  1503                           
  1504                           ;main.c: 431: } else if (strcmp(command, "GET_WIFI\r\n") == 0) {
  1505  0085  0008               	return
  1506  0086                     l1488:	
  1507  0086  3090               	movlw	low (STR_26| (0+32768))
  1508  0087  00F1               	movwf	strcmp@s2
  1509  0088  3085               	movlw	high (STR_26| (0+32768))
  1510  0089  00F2               	movwf	strcmp@s2+1
  1511  008A  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1512  008B  3183  23CC  3180   	fcall	_strcmp
  1513  008E  0871               	movf	?_strcmp,w
  1514  008F  0472               	iorwf	?_strcmp+1,w
  1515  0090  1D03               	btfss	3,2
  1516  0091  289C               	goto	l1492
  1517                           
  1518                           ;main.c: 432: getWiFiData();
  1519  0092  3182  2288  3180   	fcall	_getWiFiData
  1520                           
  1521                           ;main.c: 433: serialPrintBT("MESSAGE_END\r\n");
  1522  0095  3009               	movlw	low (STR_23| (0+32768))
  1523  0096  00F2               	movwf	serialPrintBT@s
  1524  0097  3085               	movlw	high (STR_23| (0+32768))
  1525  0098  00F3               	movwf	serialPrintBT@s+1
  1526  0099  3184  2451         	fcall	_serialPrintBT
  1527                           
  1528                           ;main.c: 434: } else if (strcmp(command, "GET_ALL_SEND_SIGFOX\r\n") == 0) {
  1529  009B  0008               	return
  1530  009C                     l1492:	
  1531  009C  309B               	movlw	low (STR_28| (0+32768))
  1532  009D  00F1               	movwf	strcmp@s2
  1533  009E  3084               	movlw	high (STR_28| (0+32768))
  1534  009F  00F2               	movwf	strcmp@s2+1
  1535  00A0  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1536  00A1  3183  23CC  3180   	fcall	_strcmp
  1537  00A4  0871               	movf	?_strcmp,w
  1538  00A5  0472               	iorwf	?_strcmp+1,w
  1539  00A6  1D03               	btfss	3,2
  1540  00A7  28BF               	goto	l1496
  1541                           
  1542                           ;main.c: 435: sendSigfox("000000000000\r\n");
  1543  00A8  30EB               	movlw	low (STR_29| (0+32768))
  1544  00A9  00F7               	movwf	sendSigfox@hexMessage
  1545  00AA  3084               	movlw	high (STR_29| (0+32768))
  1546  00AB  00F8               	movwf	sendSigfox@hexMessage+1
  1547  00AC  3184  246B  3180   	fcall	_sendSigfox
  1548                           
  1549                           ;main.c: 436: getGPSData();
  1550  00AF  3183  2341  3180   	fcall	_getGPSData
  1551                           
  1552                           ;main.c: 437: getGSMData();
  1553  00B2  3181  219D  3180   	fcall	_getGSMData
  1554                           
  1555                           ;main.c: 438: getWiFiData();
  1556  00B5  3182  2288  3180   	fcall	_getWiFiData
  1557                           
  1558                           ;main.c: 439: serialPrintBT("MESSAGE_END\r\n");
  1559  00B8  3009               	movlw	low (STR_23| (0+32768))
  1560  00B9  00F2               	movwf	serialPrintBT@s
  1561  00BA  3085               	movlw	high (STR_23| (0+32768))
  1562  00BB  00F3               	movwf	serialPrintBT@s+1
  1563  00BC  3184  2451         	fcall	_serialPrintBT
  1564                           
  1565                           ;main.c: 440: } else if (strcmp(command, "GET_ALL\r\n") == 0) {
  1566  00BE  0008               	return
  1567  00BF                     l1496:	
  1568  00BF  30CF               	movlw	low (STR_31| (0+32768))
  1569  00C0  00F1               	movwf	strcmp@s2
  1570  00C1  3085               	movlw	high (STR_31| (0+32768))
  1571  00C2  00F2               	movwf	strcmp@s2+1
  1572  00C3  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1573  00C4  3183  23CC  3180   	fcall	_strcmp
  1574  00C7  0871               	movf	?_strcmp,w
  1575  00C8  0472               	iorwf	?_strcmp+1,w
  1576  00C9  1D03               	btfss	3,2
  1577  00CA  28DB               	goto	l1500
  1578                           
  1579                           ;main.c: 441: getGPSData();
  1580  00CB  3183  2341  3180   	fcall	_getGPSData
  1581                           
  1582                           ;main.c: 442: getGSMData();
  1583  00CE  3181  219D  3180   	fcall	_getGSMData
  1584                           
  1585                           ;main.c: 443: getWiFiData();
  1586  00D1  3182  2288  3180   	fcall	_getWiFiData
  1587                           
  1588                           ;main.c: 444: serialPrintBT("MESSAGE_END\r\n");
  1589  00D4  3009               	movlw	low (STR_23| (0+32768))
  1590  00D5  00F2               	movwf	serialPrintBT@s
  1591  00D6  3085               	movlw	high (STR_23| (0+32768))
  1592  00D7  00F3               	movwf	serialPrintBT@s+1
  1593  00D8  3184  2451         	fcall	_serialPrintBT
  1594                           
  1595                           ;main.c: 445: } else if (strncmp(command, "SEND_SIGFOX:", 12) == 0) {
  1596  00DA  0008               	return
  1597  00DB                     l1500:	
  1598  00DB  3031               	movlw	low (STR_33| (0+32768))
  1599  00DC  00F1               	movwf	strncmp@s2
  1600  00DD  3085               	movlw	high (STR_33| (0+32768))
  1601  00DE  00F2               	movwf	strncmp@s2+1
  1602  00DF  300C               	movlw	12
  1603  00E0  00F3               	movwf	strncmp@len
  1604  00E1  3000               	movlw	0
  1605  00E2  00F4               	movwf	strncmp@len+1
  1606  00E3  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1607  00E4  3183  238C  3180   	fcall	_strncmp
  1608  00E7  0871               	movf	?_strncmp,w
  1609  00E8  0472               	iorwf	?_strncmp+1,w
  1610  00E9  1D03               	btfss	3,2
  1611  00EA  2919               	goto	l1518
  1612                           
  1613                           ;main.c: 446: char * p;
  1614                           ;main.c: 447: p = command + 12;
  1615  00EB  304C               	movlw	(low ((waitForCommand@command| 0+12)))& (0+255)
  1616  00EC  00FB               	movwf	??_waitForCommand
  1617  00ED  087B               	movf	??_waitForCommand,w
  1618  00EE  0140               	movlb	0	; select bank0
  1619  00EF  00E6               	movwf	waitForCommand@p
  1620                           
  1621                           ;main.c: 448: char message[30];
  1622                           ;main.c: 449: int i = 0;
  1623  00F0  01E4               	clrf	waitForCommand@i_450
  1624  00F1  01E5               	clrf	waitForCommand@i_450+1
  1625  00F2                     l1512:	
  1626                           ;main.c: 451: while (*p != '\r') {
  1627                           
  1628  00F2  0866               	movf	waitForCommand@p,w
  1629  00F3  0086               	movwf	6
  1630  00F4  0187               	clrf	7
  1631  00F5  300D               	movlw	13
  1632  00F6  0601               	xorwf	1,w
  1633  00F7  1903               	btfsc	3,2
  1634  00F8  290D               	goto	l1514
  1635                           
  1636                           ;main.c: 452: message[i] = *p;
  1637  00F9  0866               	movf	waitForCommand@p,w
  1638  00FA  0086               	movwf	6
  1639  00FB  0187               	clrf	7
  1640  00FC  0801               	movf	1,w
  1641  00FD  00FB               	movwf	??_waitForCommand
  1642  00FE  0864               	movf	waitForCommand@i_450,w
  1643  00FF  3E22               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1644  0100  0086               	movwf	6
  1645  0101  0187               	clrf	7
  1646  0102  087B               	movf	??_waitForCommand,w
  1647  0103  0081               	movwf	1
  1648                           
  1649                           ;main.c: 453: p++;
  1650  0104  3001               	movlw	1
  1651  0105  00FB               	movwf	??_waitForCommand
  1652  0106  087B               	movf	??_waitForCommand,w
  1653  0107  07E6               	addwf	waitForCommand@p,f
  1654                           
  1655                           ;main.c: 454: i++;
  1656  0108  3001               	movlw	1
  1657  0109  07E4               	addwf	waitForCommand@i_450,f
  1658  010A  3000               	movlw	0
  1659  010B  3DE5               	addwfc	waitForCommand@i_450+1,f
  1660  010C  28F2               	goto	l1512
  1661  010D                     l1514:	
  1662                           
  1663                           ;main.c: 455: }
  1664                           ;main.c: 456: message[i] = '\0';
  1665  010D  0864               	movf	waitForCommand@i_450,w
  1666  010E  3E22               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1667  010F  0086               	movwf	6
  1668  0110  0187               	clrf	7
  1669  0111  0181               	clrf	1
  1670                           
  1671                           ;main.c: 458: sendSigfox(message);
  1672  0112  3022               	movlw	low waitForCommand@message
  1673  0113  00F7               	movwf	sendSigfox@hexMessage
  1674  0114  3000               	movlw	high waitForCommand@message
  1675  0115  00F8               	movwf	sendSigfox@hexMessage+1
  1676  0116  3184  246B         	fcall	_sendSigfox
  1677                           
  1678                           ;main.c: 459: } else if (strcmp(command, "SEND_SMS\r\n") == 0) {
  1679  0118  0008               	return
  1680  0119                     l1518:	
  1681  0119  30A6               	movlw	low (STR_34| (0+32768))
  1682  011A  00F1               	movwf	strcmp@s2
  1683  011B  3085               	movlw	high (STR_34| (0+32768))
  1684  011C  00F2               	movwf	strcmp@s2+1
  1685  011D  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1686  011E  3183  23CC  3180   	fcall	_strcmp
  1687  0121  0871               	movf	?_strcmp,w
  1688  0122  0472               	iorwf	?_strcmp+1,w
  1689  0123  1D03               	btfss	3,2
  1690  0124  294D               	goto	l1534
  1691                           
  1692                           ;main.c: 460: sendSMS("nummer", "Hello World");
  1693  0125  303C               	movlw	low (STR_35| (0+32768))
  1694  0126  00F7               	movwf	sendSMS@number
  1695  0127  3086               	movlw	high (STR_35| (0+32768))
  1696  0128  00F8               	movwf	sendSMS@number+1
  1697  0129  306E               	movlw	low (STR_36| (0+32768))
  1698  012A  00F9               	movwf	sendSMS@message
  1699  012B  3085               	movlw	high (STR_36| (0+32768))
  1700  012C  00FA               	movwf	sendSMS@message+1
  1701  012D  3182  2214  3180   	fcall	_sendSMS
  1702                           
  1703                           ;main.c: 462: startTimer(4);
  1704  0130  3004               	movlw	4
  1705  0131  00F1               	movwf	startTimer@seconds
  1706  0132  3000               	movlw	0
  1707  0133  00F2               	movwf	startTimer@seconds+1
  1708  0134  3184  24DA  3180   	fcall	_startTimer
  1709  0137                     l1532:	
  1710                           ;main.c: 463: while (!timerDone) {
  1711                           
  1712  0137  087C               	movf	_timerDone,w
  1713  0138  1D03               	btfss	3,2
  1714  0139  0008               	return
  1715                           
  1716                           ;main.c: 464: if (PIR3bits.RC1IF) {
  1717  013A  014E               	movlb	14	; select bank14
  1718  013B  1E8F               	btfss	15,5	;volatile
  1719  013C  2937               	goto	l1532
  1720                           
  1721                           ;main.c: 465: char c = serialReadPeripheral();
  1722  013D  3186  2601  3180   	fcall	_serialReadPeripheral
  1723  0140  00FB               	movwf	??_waitForCommand
  1724  0141  087B               	movf	??_waitForCommand,w
  1725  0142  0140               	movlb	0	; select bank0
  1726  0143  00E0               	movwf	waitForCommand@c
  1727                           
  1728                           ;main.c: 466: if (c == 'O') {
  1729  0144  304F               	movlw	79
  1730  0145  0660               	xorwf	waitForCommand@c,w
  1731  0146  1903               	btfsc	3,2
  1732                           
  1733                           ;main.c: 467: LATC7 = 0;
  1734  0147  139A               	bcf	26,7	;volatile
  1735                           
  1736                           ;main.c: 468: }
  1737                           ;main.c: 469: serialWriteBT(c);
  1738  0148  0860               	movf	waitForCommand@c,w
  1739  0149  3186  262D  3180   	fcall	_serialWriteBT
  1740  014C  2937               	goto	l1532
  1741  014D                     l1534:	
  1742                           ;main.c: 470: }
  1743                           ;main.c: 471: }
  1744                           ;main.c: 472: } else if (strcmp(command, "SEND_SIGFOX\r\n") == 0) {
  1745                           
  1746  014D  30A3               	movlw	low ((STR_28+8)| (0+32768))
  1747  014E  00F1               	movwf	strcmp@s2
  1748  014F  3084               	movlw	high ((STR_28+8)| (0+32768))
  1749  0150  00F2               	movwf	strcmp@s2+1
  1750  0151  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1751  0152  3183  23CC  3180   	fcall	_strcmp
  1752  0155  0871               	movf	?_strcmp,w
  1753  0156  0472               	iorwf	?_strcmp+1,w
  1754  0157  1D03               	btfss	3,2
  1755  0158  297F               	goto	l1552
  1756                           
  1757                           ;main.c: 473: sendSigfox("48656c6c6f20576f726c64");
  1758  0159  3084               	movlw	low (STR_38| (0+32768))
  1759  015A  00F7               	movwf	sendSigfox@hexMessage
  1760  015B  3084               	movlw	high (STR_38| (0+32768))
  1761  015C  00F8               	movwf	sendSigfox@hexMessage+1
  1762  015D  3184  246B  3180   	fcall	_sendSigfox
  1763                           
  1764                           ;main.c: 474: LATC7 = 1;
  1765  0160  0140               	movlb	0	; select bank0
  1766  0161  179A               	bsf	26,7	;volatile
  1767                           
  1768                           ;main.c: 475: startTimer(10);
  1769  0162  300A               	movlw	10
  1770  0163  00F1               	movwf	startTimer@seconds
  1771  0164  3000               	movlw	0
  1772  0165  00F2               	movwf	startTimer@seconds+1
  1773  0166  3184  24DA  3180   	fcall	_startTimer
  1774  0169                     l1550:	
  1775                           ;main.c: 476: while (!timerDone) {
  1776                           
  1777  0169  087C               	movf	_timerDone,w
  1778  016A  1D03               	btfss	3,2
  1779  016B  0008               	return
  1780                           
  1781                           ;main.c: 477: if (PIR3bits.RC1IF) {
  1782  016C  014E               	movlb	14	; select bank14
  1783  016D  1E8F               	btfss	15,5	;volatile
  1784  016E  2969               	goto	l1550
  1785                           
  1786                           ;main.c: 478: char c = serialReadPeripheral();
  1787  016F  3186  2601  3180   	fcall	_serialReadPeripheral
  1788  0172  00FB               	movwf	??_waitForCommand
  1789  0173  087B               	movf	??_waitForCommand,w
  1790  0174  0140               	movlb	0	; select bank0
  1791  0175  00E1               	movwf	waitForCommand@c_458
  1792                           
  1793                           ;main.c: 479: if (c == 'O') {
  1794  0176  304F               	movlw	79
  1795  0177  0661               	xorwf	waitForCommand@c_458,w
  1796  0178  1903               	btfsc	3,2
  1797                           
  1798                           ;main.c: 480: LATC7 = 0;
  1799  0179  139A               	bcf	26,7	;volatile
  1800                           
  1801                           ;main.c: 481: }
  1802                           ;main.c: 482: serialWriteBT(c);
  1803  017A  0861               	movf	waitForCommand@c_458,w
  1804  017B  3186  262D  3180   	fcall	_serialWriteBT
  1805  017E  2969               	goto	l1550
  1806  017F                     l1552:	
  1807                           ;main.c: 483: }
  1808                           ;main.c: 484: }
  1809                           ;main.c: 485: } else if(strcmp(command, "TRIGON\r\n") == 0) {
  1810                           
  1811  017F  300B               	movlw	low (STR_39| (0+32768))
  1812  0180  00F1               	movwf	strcmp@s2
  1813  0181  3086               	movlw	high (STR_39| (0+32768))
  1814  0182  00F2               	movwf	strcmp@s2+1
  1815  0183  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1816  0184  3183  23CC  3180   	fcall	_strcmp
  1817  0187  0871               	movf	?_strcmp,w
  1818  0188  0472               	iorwf	?_strcmp+1,w
  1819  0189  1D03               	btfss	3,2
  1820  018A  298E               	goto	l1556
  1821                           
  1822                           ;main.c: 486: LATC7 = 1;
  1823  018B  0140               	movlb	0	; select bank0
  1824  018C  179A               	bsf	26,7	;volatile
  1825                           
  1826                           ;main.c: 487: } else if(strcmp(command, "TRIGOFF\r\n") == 0) {
  1827  018D  0008               	return
  1828  018E                     l1556:	
  1829  018E  30C5               	movlw	low (STR_40| (0+32768))
  1830  018F  00F1               	movwf	strcmp@s2
  1831  0190  3085               	movlw	high (STR_40| (0+32768))
  1832  0191  00F2               	movwf	strcmp@s2+1
  1833  0192  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1834  0193  3183  23CC  3180   	fcall	_strcmp
  1835  0196  0871               	movf	?_strcmp,w
  1836  0197  0472               	iorwf	?_strcmp+1,w
  1837  0198  1D03               	btfss	3,2
  1838  0199  0008               	return
  1839                           
  1840                           ;main.c: 488: LATC7 = 0;
  1841  019A  0140               	movlb	0	; select bank0
  1842  019B  139A               	bcf	26,7	;volatile
  1843  019C  0008               	return
  1844  019D                     __end_of_waitForCommand:	
  1845                           
  1846                           	psect	text2
  1847  038C                     __ptext2:	
  1848 ;; *************** function _strncmp *****************
  1849 ;; Defined at:
  1850 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  s1              1    wreg     PTR const unsigned char 
  1853 ;;		 -> waitForCommand@command(32), 
  1854 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1855 ;;		 -> STR_33(13), 
  1856 ;;  len             2    3[COMMON] unsigned int 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  s1              1    7[COMMON] PTR const unsigned char 
  1859 ;;		 -> waitForCommand@command(32), 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2    1[COMMON] int 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1869 ;;      Params:         4       0       0       0       0       0       0       0
  1870 ;;      Locals:         1       0       0       0       0       0       0       0
  1871 ;;      Temps:          2       0       0       0       0       0       0       0
  1872 ;;      Totals:         7       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        7 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_waitForCommand
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _strncmp
  1885  038C                     _strncmp:	
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  1889                           ;strncmp@s1 stored from wreg
  1890  038C  00F7               	movwf	strncmp@s1
  1891  038D                     l1292:	
  1892  038D  3001               	movlw	1
  1893  038E  02F3               	subwf	strncmp@len,f
  1894  038F  3000               	movlw	0
  1895  0390  3BF4               	subwfb	strncmp@len+1,f
  1896  0391  0A73               	incf	strncmp@len,w
  1897  0392  1903               	btfsc	3,2
  1898  0393  0A74               	incf	strncmp@len+1,w
  1899  0394  1903               	btfsc	3,2
  1900  0395  2BC9               	goto	l1294
  1901  0396  0877               	movf	strncmp@s1,w
  1902  0397  0086               	movwf	6
  1903  0398  0187               	clrf	7
  1904  0399  0801               	movf	1,w
  1905  039A  1903               	btfsc	3,2
  1906  039B  2BA9               	goto	l1284
  1907  039C  0871               	movf	strncmp@s2,w
  1908  039D  0084               	movwf	4
  1909  039E  0872               	movf	strncmp@s2+1,w
  1910  039F  0085               	movwf	5
  1911  03A0  0800               	movf	0,w	;code access
  1912  03A1  00F5               	movwf	??_strncmp
  1913  03A2  0877               	movf	strncmp@s1,w
  1914  03A3  0086               	movwf	6
  1915  03A4  0187               	clrf	7
  1916  03A5  0801               	movf	1,w
  1917  03A6  0675               	xorwf	??_strncmp,w
  1918  03A7  1903               	skipnz
  1919  03A8  2BC0               	goto	l1288
  1920  03A9                     l1284:	
  1921  03A9  0871               	movf	strncmp@s2,w
  1922  03AA  0084               	movwf	4
  1923  03AB  0872               	movf	strncmp@s2+1,w
  1924  03AC  0085               	movwf	5
  1925  03AD  0800               	movf	0,w	;code access
  1926  03AE  00F5               	movwf	??_strncmp
  1927  03AF  01F6               	clrf	??_strncmp+1
  1928  03B0  09F5               	comf	??_strncmp,f
  1929  03B1  09F6               	comf	??_strncmp+1,f
  1930  03B2  0AF5               	incf	??_strncmp,f
  1931  03B3  1903               	skipnz
  1932  03B4  0AF6               	incf	??_strncmp+1,f
  1933  03B5  0877               	movf	strncmp@s1,w
  1934  03B6  0086               	movwf	6
  1935  03B7  0187               	clrf	7
  1936  03B8  0801               	movf	1,w
  1937  03B9  0775               	addwf	??_strncmp,w
  1938  03BA  00F1               	movwf	?_strncmp
  1939  03BB  0876               	movf	??_strncmp+1,w
  1940  03BC  1803               	skipnc
  1941  03BD  0A76               	incf	??_strncmp+1,w
  1942  03BE  00F2               	movwf	?_strncmp+1
  1943  03BF  0008               	return
  1944  03C0                     l1288:	
  1945  03C0  3001               	movlw	1
  1946  03C1  00F5               	movwf	??_strncmp
  1947  03C2  0875               	movf	??_strncmp,w
  1948  03C3  07F7               	addwf	strncmp@s1,f
  1949  03C4  3001               	movlw	1
  1950  03C5  07F1               	addwf	strncmp@s2,f
  1951  03C6  3000               	movlw	0
  1952  03C7  3DF2               	addwfc	strncmp@s2+1,f
  1953  03C8  2B8D               	goto	l1292
  1954  03C9                     l1294:	
  1955  03C9  01F1               	clrf	?_strncmp
  1956  03CA  01F2               	clrf	?_strncmp+1
  1957  03CB  0008               	return
  1958  03CC                     __end_of_strncmp:	
  1959                           
  1960                           	psect	text3
  1961  03CC                     __ptext3:	
  1962 ;; *************** function _strcmp *****************
  1963 ;; Defined at:
  1964 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  s1              1    wreg     PTR const unsigned char 
  1967 ;;		 -> waitForCommand@command(32), 
  1968 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1969 ;;		 -> STR_40(10), STR_39(9), STR_37(14), STR_34(11), 
  1970 ;;		 -> STR_31(10), STR_28(22), STR_26(11), STR_24(10), 
  1971 ;;		 -> STR_22(10), 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1974 ;;		 -> waitForCommand@command(32), 
  1975 ;;  r               1    4[COMMON] char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  2    1[COMMON] int 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1985 ;;      Params:         2       0       0       0       0       0       0       0
  1986 ;;      Locals:         2       0       0       0       0       0       0       0
  1987 ;;      Temps:          1       0       0       0       0       0       0       0
  1988 ;;      Totals:         5       0       0       0       0       0       0       0
  1989 ;;Total ram usage:        5 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_waitForCommand
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _strcmp
  2001  03CC                     _strcmp:	
  2002                           
  2003                           ;incstack = 0
  2004                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  2005                           ;strcmp@s1 stored from wreg
  2006  03CC  00F5               	movwf	strcmp@s1
  2007  03CD  2BD6               	goto	l1270
  2008  03CE                     l1268:	
  2009  03CE  3001               	movlw	1
  2010  03CF  00F3               	movwf	??_strcmp
  2011  03D0  0873               	movf	??_strcmp,w
  2012  03D1  07F5               	addwf	strcmp@s1,f
  2013  03D2  3001               	movlw	1
  2014  03D3  07F1               	addwf	strcmp@s2,f
  2015  03D4  3000               	movlw	0
  2016  03D5  3DF2               	addwfc	strcmp@s2+1,f
  2017  03D6                     l1270:	
  2018  03D6  0875               	movf	strcmp@s1,w
  2019  03D7  0086               	movwf	6
  2020  03D8  0187               	clrf	7
  2021  03D9  0871               	movf	strcmp@s2,w
  2022  03DA  0084               	movwf	4
  2023  03DB  0872               	movf	strcmp@s2+1,w
  2024  03DC  0085               	movwf	5
  2025  03DD  0800               	movf	0,w	;code access
  2026  03DE  3AFF               	xorlw	255
  2027  03DF  3E01               	addlw	1
  2028  03E0  0701               	addwf	1,w
  2029  03E1  00F3               	movwf	??_strcmp
  2030  03E2  0873               	movf	??_strcmp,w
  2031  03E3  00F4               	movwf	strcmp@r
  2032  03E4  0874               	movf	strcmp@r,w
  2033  03E5  1D03               	btfss	3,2
  2034  03E6  2BED               	goto	l1274
  2035  03E7  0875               	movf	strcmp@s1,w
  2036  03E8  0086               	movwf	6
  2037  03E9  0187               	clrf	7
  2038  03EA  0801               	movf	1,w
  2039  03EB  1D03               	btfss	3,2
  2040  03EC  2BCE               	goto	l1268
  2041  03ED                     l1274:	
  2042  03ED  0874               	movf	strcmp@r,w
  2043  03EE  00F1               	movwf	?_strcmp
  2044  03EF  01F2               	clrf	?_strcmp+1
  2045  03F0  1BF1               	btfsc	?_strcmp,7
  2046  03F1  03F2               	decf	?_strcmp+1,f
  2047  03F2  0008               	return
  2048  03F3                     __end_of_strcmp:	
  2049                           
  2050                           	psect	text4
  2051  05F7                     __ptext4:	
  2052 ;; *************** function _serialReadBT *****************
  2053 ;; Defined at:
  2054 ;;		line 240 in file "main.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      unsigned char 
  2061 ;; Registers used:
  2062 ;;		wreg
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2068 ;;      Params:         0       0       0       0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0
  2071 ;;      Totals:         0       0       0       0       0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_waitForCommand
  2079 ;;		_serialFindBT
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           
  2084                           ;psect for function _serialReadBT
  2085  05F7                     _serialReadBT:	
  2086  05F7                     l150:	
  2087                           ;main.c: 241: while (!PIR3bits.RC2IF) {
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _serialReadBT: [wreg]
  2091                           
  2092  05F7  014E               	movlb	14	; select bank14
  2093  05F8  1F8F               	btfss	15,7	;volatile
  2094  05F9  2DF7               	goto	l150
  2095                           
  2096                           ;main.c: 242: }
  2097                           ;main.c: 243: if (1 == RC2STAbits.OERR) {
  2098  05FA  0154               	movlb	20	; select bank20
  2099  05FB  1C9D               	btfss	29,1	;volatile
  2100  05FC  2DFF               	goto	l1158
  2101                           
  2102                           ;main.c: 244: RC2STAbits.SPEN = 0;
  2103  05FD  139D               	bcf	29,7	;volatile
  2104                           
  2105                           ;main.c: 245: RC2STAbits.SPEN = 1;
  2106  05FE  179D               	bsf	29,7	;volatile
  2107  05FF                     l1158:	
  2108                           
  2109                           ;main.c: 246: }
  2110                           ;main.c: 247: return RC2REG;
  2111  05FF  0819               	movf	25,w	;volatile
  2112  0600  0008               	return
  2113  0601                     __end_of_serialReadBT:	
  2114                           
  2115                           	psect	text5
  2116  046B                     __ptext5:	
  2117 ;; *************** function _sendSigfox *****************
  2118 ;; Defined at:
  2119 ;;		line 383 in file "main.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  hexMessage      2    7[COMMON] PTR unsigned char 
  2122 ;;		 -> STR_38(23), waitForCommand@message(30), STR_29(15), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2134 ;;      Params:         2       0       0       0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0
  2137 ;;      Totals:         2       0       0       0       0       0       0       0
  2138 ;;Total ram usage:        2 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    3
  2141 ;; This function calls:
  2142 ;;		_serialPrintPeripheral
  2143 ;;		_setActivePeripheral
  2144 ;; This function is called by:
  2145 ;;		_waitForCommand
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _sendSigfox
  2151  046B                     _sendSigfox:	
  2152                           
  2153                           ;main.c: 384: setActivePeripheral(sigfox);
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _sendSigfox: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2157  046B  3002               	movlw	2
  2158  046C  3182  22E8  3184   	fcall	_setActivePeripheral
  2159                           
  2160                           ;main.c: 385: serialPrintPeripheral("AT$SF=");
  2161  046F  3035               	movlw	low (STR_16| (0+32768))
  2162  0470  00F2               	movwf	serialPrintPeripheral@s
  2163  0471  3086               	movlw	high (STR_16| (0+32768))
  2164  0472  00F3               	movwf	serialPrintPeripheral@s+1
  2165  0473  3184  2437  3184   	fcall	_serialPrintPeripheral
  2166                           
  2167                           ;main.c: 386: serialPrintPeripheral(hexMessage);
  2168  0476  0878               	movf	sendSigfox@hexMessage+1,w
  2169  0477  00F3               	movwf	serialPrintPeripheral@s+1
  2170  0478  0877               	movf	sendSigfox@hexMessage,w
  2171  0479  00F2               	movwf	serialPrintPeripheral@s
  2172  047A  3184  2437  3184   	fcall	_serialPrintPeripheral
  2173                           
  2174                           ;main.c: 387: serialPrintPeripheral("\r\n");
  2175  047D  3049               	movlw	low ((STR_20+1)| (0+32768))
  2176  047E  00F2               	movwf	serialPrintPeripheral@s
  2177  047F  3086               	movlw	high ((STR_20+1)| (0+32768))
  2178  0480  00F3               	movwf	serialPrintPeripheral@s+1
  2179  0481  3184  2437         	fcall	_serialPrintPeripheral
  2180  0483  0008               	return
  2181  0484                     __end_of_sendSigfox:	
  2182                           
  2183                           	psect	text6
  2184  0214                     __ptext6:	
  2185 ;; *************** function _sendSMS *****************
  2186 ;; Defined at:
  2187 ;;		line 390 in file "main.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  number          2    7[COMMON] PTR unsigned char 
  2190 ;;		 -> STR_35(7), 
  2191 ;;  message         2    9[COMMON] PTR unsigned char 
  2192 ;;		 -> STR_36(12), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2204 ;;      Params:         4       0       0       0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0
  2206 ;;      Temps:          0       2       0       0       0       0       0       0
  2207 ;;      Totals:         4       2       0       0       0       0       0       0
  2208 ;;Total ram usage:        6 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    3
  2211 ;; This function calls:
  2212 ;;		_serialPrintPeripheral
  2213 ;;		_serialWritePeripheral
  2214 ;;		_setActivePeripheral
  2215 ;; This function is called by:
  2216 ;;		_waitForCommand
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _sendSMS
  2222  0214                     _sendSMS:	
  2223                           
  2224                           ;main.c: 392: setActivePeripheral(gsm);
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _sendSMS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2228  0214  3003               	movlw	3
  2229  0215  3182  22E8  3182   	fcall	_setActivePeripheral
  2230                           
  2231                           ;main.c: 393: serialPrintPeripheral("AT+CMGF=1\r\n");
  2232  0218  303E               	movlw	low (STR_18| (0+32768))
  2233  0219  00F2               	movwf	serialPrintPeripheral@s
  2234  021A  3085               	movlw	high (STR_18| (0+32768))
  2235  021B  00F3               	movwf	serialPrintPeripheral@s+1
  2236  021C  3184  2437  3182   	fcall	_serialPrintPeripheral
  2237                           
  2238                           ;main.c: 394: _delay((unsigned long)((2000)*(32000000/4000.0)));
  2239  021F  3052               	movlw	82
  2240  0220  0140               	movlb	0	; select bank0
  2241  0221  00A1               	movwf	??_sendSMS+1
  2242  0222  302B               	movlw	43
  2243  0223  00A0               	movwf	??_sendSMS
  2244  0224  3000               	movlw	0
  2245  0225                     u1287:	
  2246  0225  0B89               	decfsz	9,f
  2247  0226  2A25               	goto	u1287
  2248  0227  0BA0               	decfsz	??_sendSMS,f
  2249  0228  2A25               	goto	u1287
  2250  0229  0BA1               	decfsz	??_sendSMS+1,f
  2251  022A  2A25               	goto	u1287
  2252  022B  0000               	nop
  2253                           
  2254                           ;main.c: 395: serialPrintPeripheral("AT+CMGS=\"");
  2255  022C  30ED               	movlw	low (STR_19| (0+32768))
  2256  022D  00F2               	movwf	serialPrintPeripheral@s
  2257  022E  3085               	movlw	high (STR_19| (0+32768))
  2258  022F  00F3               	movwf	serialPrintPeripheral@s+1
  2259  0230  3184  2437  3182   	fcall	_serialPrintPeripheral
  2260                           
  2261                           ;main.c: 396: serialPrintPeripheral(number);
  2262  0233  0878               	movf	sendSMS@number+1,w
  2263  0234  00F3               	movwf	serialPrintPeripheral@s+1
  2264  0235  0877               	movf	sendSMS@number,w
  2265  0236  00F2               	movwf	serialPrintPeripheral@s
  2266  0237  3184  2437  3182   	fcall	_serialPrintPeripheral
  2267                           
  2268                           ;main.c: 397: serialPrintPeripheral("\"\r\n");
  2269  023A  3048               	movlw	low (STR_20| (0+32768))
  2270  023B  00F2               	movwf	serialPrintPeripheral@s
  2271  023C  3086               	movlw	high (STR_20| (0+32768))
  2272  023D  00F3               	movwf	serialPrintPeripheral@s+1
  2273  023E  3184  2437  3182   	fcall	_serialPrintPeripheral
  2274                           
  2275                           ;main.c: 398: _delay((unsigned long)((3000)*(32000000/4000.0)));
  2276  0241  307A               	movlw	122
  2277  0242  0140               	movlb	0	; select bank0
  2278  0243  00A1               	movwf	??_sendSMS+1
  2279  0244  30C1               	movlw	193
  2280  0245  00A0               	movwf	??_sendSMS
  2281  0246  3081               	movlw	129
  2282  0247                     u1297:	
  2283  0247  0B89               	decfsz	9,f
  2284  0248  2A47               	goto	u1297
  2285  0249  0BA0               	decfsz	??_sendSMS,f
  2286  024A  2A47               	goto	u1297
  2287  024B  0BA1               	decfsz	??_sendSMS+1,f
  2288  024C  2A47               	goto	u1297
  2289  024D  3200               	nop2
  2290                           
  2291                           ;main.c: 399: serialPrintPeripheral(message);
  2292  024E  087A               	movf	sendSMS@message+1,w
  2293  024F  00F3               	movwf	serialPrintPeripheral@s+1
  2294  0250  0879               	movf	sendSMS@message,w
  2295  0251  00F2               	movwf	serialPrintPeripheral@s
  2296  0252  3184  2437  3182   	fcall	_serialPrintPeripheral
  2297                           
  2298                           ;main.c: 400: _delay((unsigned long)((500)*(32000000/4000.0)));
  2299  0255  3015               	movlw	21
  2300  0256  0140               	movlb	0	; select bank0
  2301  0257  00A1               	movwf	??_sendSMS+1
  2302  0258  304B               	movlw	75
  2303  0259  00A0               	movwf	??_sendSMS
  2304  025A  30BE               	movlw	190
  2305  025B                     u1307:	
  2306  025B  0B89               	decfsz	9,f
  2307  025C  2A5B               	goto	u1307
  2308  025D  0BA0               	decfsz	??_sendSMS,f
  2309  025E  2A5B               	goto	u1307
  2310  025F  0BA1               	decfsz	??_sendSMS+1,f
  2311  0260  2A5B               	goto	u1307
  2312  0261  0000               	nop
  2313                           
  2314                           ;main.c: 401: serialWritePeripheral('\x1A');
  2315  0262  301A               	movlw	26
  2316  0263  3186  2625  3182   	fcall	_serialWritePeripheral
  2317                           
  2318                           ;main.c: 402: _delay((unsigned long)((100)*(32000000/4000.0)));
  2319  0266  3005               	movlw	5
  2320  0267  0140               	movlb	0	; select bank0
  2321  0268  00A1               	movwf	??_sendSMS+1
  2322  0269  300F               	movlw	15
  2323  026A  00A0               	movwf	??_sendSMS
  2324  026B  30F1               	movlw	241
  2325  026C                     u1317:	
  2326  026C  0B89               	decfsz	9,f
  2327  026D  2A6C               	goto	u1317
  2328  026E  0BA0               	decfsz	??_sendSMS,f
  2329  026F  2A6C               	goto	u1317
  2330  0270  0BA1               	decfsz	??_sendSMS+1,f
  2331  0271  2A6C               	goto	u1317
  2332                           
  2333                           ;main.c: 403: serialPrintPeripheral("\r\n");
  2334  0272  3049               	movlw	low ((STR_20+1)| (0+32768))
  2335  0273  00F2               	movwf	serialPrintPeripheral@s
  2336  0274  3086               	movlw	high ((STR_20+1)| (0+32768))
  2337  0275  00F3               	movwf	serialPrintPeripheral@s+1
  2338  0276  3184  2437  3182   	fcall	_serialPrintPeripheral
  2339                           
  2340                           ;main.c: 404: LATC7 = 1;
  2341  0279  0140               	movlb	0	; select bank0
  2342  027A  179A               	bsf	26,7	;volatile
  2343                           
  2344                           ;main.c: 405: _delay((unsigned long)((100)*(32000000/4000.0)));
  2345  027B  3005               	movlw	5
  2346  027C  0140               	movlb	0	; select bank0
  2347  027D  00A1               	movwf	??_sendSMS+1
  2348  027E  300F               	movlw	15
  2349  027F  00A0               	movwf	??_sendSMS
  2350  0280  30F1               	movlw	241
  2351  0281                     u1327:	
  2352  0281  0B89               	decfsz	9,f
  2353  0282  2A81               	goto	u1327
  2354  0283  0BA0               	decfsz	??_sendSMS,f
  2355  0284  2A81               	goto	u1327
  2356  0285  0BA1               	decfsz	??_sendSMS+1,f
  2357  0286  2A81               	goto	u1327
  2358  0287  0008               	return
  2359  0288                     __end_of_sendSMS:	
  2360                           
  2361                           	psect	text7
  2362  0288                     __ptext7:	
  2363 ;; *************** function _getWiFiData *****************
  2364 ;; Defined at:
  2365 ;;		line 287 in file "main.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  c               1    9[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2379 ;;      Params:         0       0       0       0       0       0       0       0
  2380 ;;      Locals:         1       0       0       0       0       0       0       0
  2381 ;;      Temps:          2       0       0       0       0       0       0       0
  2382 ;;      Totals:         3       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        3 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    3
  2386 ;; This function calls:
  2387 ;;		_serialPrintBT
  2388 ;;		_serialPrintPeripheral
  2389 ;;		_serialReadPeripheral
  2390 ;;		_serialWriteBT
  2391 ;;		_setActivePeripheral
  2392 ;;		_startTimer
  2393 ;; This function is called by:
  2394 ;;		_waitForCommand
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _getWiFiData
  2400  0288                     _getWiFiData:	
  2401                           
  2402                           ;main.c: 288: serialPrintBT("WIFI_START\r\n");
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _getWiFiData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2406  0288  3024               	movlw	low (STR_1| (0+32768))
  2407  0289  00F2               	movwf	serialPrintBT@s
  2408  028A  3085               	movlw	high (STR_1| (0+32768))
  2409  028B  00F3               	movwf	serialPrintBT@s+1
  2410  028C  3184  2451  3182   	fcall	_serialPrintBT
  2411                           
  2412                           ;main.c: 289: setActivePeripheral(wifi);
  2413  028F  3001               	movlw	1
  2414  0290  3182  22E8  3182   	fcall	_setActivePeripheral
  2415                           
  2416                           ;main.c: 290: serialPrintPeripheral("AT+CWLAPOPT=1,12\r\n");
  2417  0293  30C7               	movlw	low (STR_2| (0+32768))
  2418  0294  00F2               	movwf	serialPrintPeripheral@s
  2419  0295  3084               	movlw	high (STR_2| (0+32768))
  2420  0296  00F3               	movwf	serialPrintPeripheral@s+1
  2421  0297  3184  2437  3182   	fcall	_serialPrintPeripheral
  2422                           
  2423                           ;main.c: 291: _delay((unsigned long)((500)*(32000000/4000.0)));
  2424  029A  3015               	movlw	21
  2425  029B  00F8               	movwf	??_getWiFiData+1
  2426  029C  304B               	movlw	75
  2427  029D  00F7               	movwf	??_getWiFiData
  2428  029E  30BE               	movlw	190
  2429  029F                     u1337:	
  2430  029F  0B89               	decfsz	9,f
  2431  02A0  2A9F               	goto	u1337
  2432  02A1  0BF7               	decfsz	??_getWiFiData,f
  2433  02A2  2A9F               	goto	u1337
  2434  02A3  0BF8               	decfsz	??_getWiFiData+1,f
  2435  02A4  2A9F               	goto	u1337
  2436  02A5  3200               	nop2
  2437                           
  2438                           ;main.c: 292: serialPrintPeripheral("AT+CWLAP\r\n");
  2439  02A6  309B               	movlw	low (STR_3| (0+32768))
  2440  02A7  00F2               	movwf	serialPrintPeripheral@s
  2441  02A8  3085               	movlw	high (STR_3| (0+32768))
  2442  02A9  00F3               	movwf	serialPrintPeripheral@s+1
  2443  02AA  3184  2437  3182   	fcall	_serialPrintPeripheral
  2444                           
  2445                           ;main.c: 293: LATC7 = 1;
  2446  02AD  0140               	movlb	0	; select bank0
  2447  02AE  179A               	bsf	26,7	;volatile
  2448                           
  2449                           ;main.c: 294: _delay((unsigned long)((10)*(32000000/4000.0)));
  2450  02AF  3068               	movlw	104
  2451  02B0  00F7               	movwf	??_getWiFiData
  2452  02B1  30E4               	movlw	228
  2453  02B2                     u1347:	
  2454  02B2  0B89               	decfsz	9,f
  2455  02B3  2AB2               	goto	u1347
  2456  02B4  0BF7               	decfsz	??_getWiFiData,f
  2457  02B5  2AB2               	goto	u1347
  2458  02B6  3200               	nop2
  2459                           
  2460                           ;main.c: 296: serialReadPeripheral();
  2461  02B7  3186  2601  3182   	fcall	_serialReadPeripheral
  2462                           
  2463                           ;main.c: 298: startTimer(3);
  2464  02BA  3003               	movlw	3
  2465  02BB  00F1               	movwf	startTimer@seconds
  2466  02BC  3000               	movlw	0
  2467  02BD  00F2               	movwf	startTimer@seconds+1
  2468  02BE  3184  24DA  3182   	fcall	_startTimer
  2469  02C1                     l1182:	
  2470                           ;main.c: 299: while (!timerDone) {
  2471                           
  2472  02C1  087C               	movf	_timerDone,w
  2473  02C2  1D03               	btfss	3,2
  2474  02C3  2AD8               	goto	l1184
  2475                           
  2476                           ;main.c: 300: if (PIR3bits.RC1IF) {
  2477  02C4  014E               	movlb	14	; select bank14
  2478  02C5  1E8F               	btfss	15,5	;volatile
  2479  02C6  2AC1               	goto	l1182
  2480                           
  2481                           ;main.c: 301: char c = serialReadPeripheral();
  2482  02C7  3186  2601  3182   	fcall	_serialReadPeripheral
  2483  02CA  00F7               	movwf	??_getWiFiData
  2484  02CB  0877               	movf	??_getWiFiData,w
  2485  02CC  00F9               	movwf	getWiFiData@c
  2486                           
  2487                           ;main.c: 302: if (c == 'O') {
  2488  02CD  304F               	movlw	79
  2489  02CE  0679               	xorwf	getWiFiData@c,w
  2490  02CF  1D03               	btfss	3,2
  2491  02D0  2AD3               	goto	l1180
  2492                           
  2493                           ;main.c: 303: LATC7 = 0;
  2494  02D1  0140               	movlb	0	; select bank0
  2495  02D2  139A               	bcf	26,7	;volatile
  2496  02D3                     l1180:	
  2497                           
  2498                           ;main.c: 304: }
  2499                           ;main.c: 305: serialWriteBT(c);
  2500  02D3  0879               	movf	getWiFiData@c,w
  2501  02D4  3186  262D  3182   	fcall	_serialWriteBT
  2502  02D7  2AC1               	goto	l1182
  2503  02D8                     l1184:	
  2504                           
  2505                           ;main.c: 306: }
  2506                           ;main.c: 307: }
  2507                           ;main.c: 308: serialPrintBT("WIFI_END\r\n");
  2508  02D8  3085               	movlw	low (STR_4| (0+32768))
  2509  02D9  00F2               	movwf	serialPrintBT@s
  2510  02DA  3085               	movlw	high (STR_4| (0+32768))
  2511  02DB  00F3               	movwf	serialPrintBT@s+1
  2512  02DC  3184  2451  3182   	fcall	_serialPrintBT
  2513                           
  2514                           ;main.c: 309: _delay((unsigned long)((10)*(32000000/4000.0)));
  2515  02DF  3068               	movlw	104
  2516  02E0  00F7               	movwf	??_getWiFiData
  2517  02E1  30E4               	movlw	228
  2518  02E2                     u1357:	
  2519  02E2  0B89               	decfsz	9,f
  2520  02E3  2AE2               	goto	u1357
  2521  02E4  0BF7               	decfsz	??_getWiFiData,f
  2522  02E5  2AE2               	goto	u1357
  2523  02E6  3200               	nop2
  2524  02E7  0008               	return
  2525  02E8                     __end_of_getWiFiData:	
  2526                           
  2527                           	psect	text8
  2528  019D                     __ptext8:	
  2529 ;; *************** function _getGSMData *****************
  2530 ;; Defined at:
  2531 ;;		line 312 in file "main.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2545 ;;      Params:         0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0
  2547 ;;      Temps:          2       0       0       0       0       0       0       0
  2548 ;;      Totals:         2       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    3
  2552 ;; This function calls:
  2553 ;;		_serialPrintBT
  2554 ;;		_serialPrintPeripheral
  2555 ;;		_serialReadPeripheral
  2556 ;;		_serialWriteBT
  2557 ;;		_setActivePeripheral
  2558 ;;		_startTimer
  2559 ;; This function is called by:
  2560 ;;		_waitForCommand
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _getGSMData
  2566  019D                     _getGSMData:	
  2567                           
  2568                           ;main.c: 313: serialPrintBT("GSM_START\r\n");
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _getGSMData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2572  019D  3056               	movlw	low (STR_5| (0+32768))
  2573  019E  00F2               	movwf	serialPrintBT@s
  2574  019F  3085               	movlw	high (STR_5| (0+32768))
  2575  01A0  00F3               	movwf	serialPrintBT@s+1
  2576  01A1  3184  2451  3181   	fcall	_serialPrintBT
  2577                           
  2578                           ;main.c: 315: setActivePeripheral(gsm);
  2579  01A4  3003               	movlw	3
  2580  01A5  3182  22E8  3181   	fcall	_setActivePeripheral
  2581                           
  2582                           ;main.c: 316: serialPrintPeripheral("AT+CREG=2\r\n");
  2583  01A8  304A               	movlw	low (STR_6| (0+32768))
  2584  01A9  00F2               	movwf	serialPrintPeripheral@s
  2585  01AA  3085               	movlw	high (STR_6| (0+32768))
  2586  01AB  00F3               	movwf	serialPrintPeripheral@s+1
  2587  01AC  3184  2437  3181   	fcall	_serialPrintPeripheral
  2588                           
  2589                           ;main.c: 317: _delay((unsigned long)((500)*(32000000/4000.0)));
  2590  01AF  3015               	movlw	21
  2591  01B0  00F8               	movwf	??_getGSMData+1
  2592  01B1  304B               	movlw	75
  2593  01B2  00F7               	movwf	??_getGSMData
  2594  01B3  30BE               	movlw	190
  2595  01B4                     u1367:	
  2596  01B4  0B89               	decfsz	9,f
  2597  01B5  29B4               	goto	u1367
  2598  01B6  0BF7               	decfsz	??_getGSMData,f
  2599  01B7  29B4               	goto	u1367
  2600  01B8  0BF8               	decfsz	??_getGSMData+1,f
  2601  01B9  29B4               	goto	u1367
  2602  01BA  3200               	nop2
  2603                           
  2604                           ;main.c: 318: serialPrintPeripheral("AT+CSQ\r\n");
  2605  01BB  3014               	movlw	low (STR_7| (0+32768))
  2606  01BC  00F2               	movwf	serialPrintPeripheral@s
  2607  01BD  3086               	movlw	high (STR_7| (0+32768))
  2608  01BE  00F3               	movwf	serialPrintPeripheral@s+1
  2609  01BF  3184  2437  3181   	fcall	_serialPrintPeripheral
  2610                           
  2611                           ;main.c: 319: _delay((unsigned long)((10)*(32000000/4000.0)));
  2612  01C2  3068               	movlw	104
  2613  01C3  00F7               	movwf	??_getGSMData
  2614  01C4  30E4               	movlw	228
  2615  01C5                     u1377:	
  2616  01C5  0B89               	decfsz	9,f
  2617  01C6  29C5               	goto	u1377
  2618  01C7  0BF7               	decfsz	??_getGSMData,f
  2619  01C8  29C5               	goto	u1377
  2620  01C9  3200               	nop2
  2621                           
  2622                           ;main.c: 320: serialReadPeripheral();
  2623  01CA  3186  2601  3181   	fcall	_serialReadPeripheral
  2624                           
  2625                           ;main.c: 322: startTimer(1);
  2626  01CD  3001               	movlw	1
  2627  01CE  00F1               	movwf	startTimer@seconds
  2628  01CF  3000               	movlw	0
  2629  01D0  00F2               	movwf	startTimer@seconds+1
  2630  01D1  3184  24DA  3181   	fcall	_startTimer
  2631  01D4                     l1200:	
  2632                           ;main.c: 323: while (!timerDone) {
  2633                           
  2634  01D4  087C               	movf	_timerDone,w
  2635  01D5  1D03               	btfss	3,2
  2636  01D6  29E1               	goto	l1202
  2637                           
  2638                           ;main.c: 324: if (PIR3bits.RC1IF) {
  2639  01D7  014E               	movlb	14	; select bank14
  2640  01D8  1E8F               	btfss	15,5	;volatile
  2641  01D9  29D4               	goto	l1200
  2642                           
  2643                           ;main.c: 325: serialWriteBT(serialReadPeripheral());
  2644  01DA  3186  2601  3181   	fcall	_serialReadPeripheral
  2645  01DD  3186  262D  3181   	fcall	_serialWriteBT
  2646  01E0  29D4               	goto	l1200
  2647  01E1                     l1202:	
  2648                           
  2649                           ;main.c: 326: }
  2650                           ;main.c: 327: }
  2651                           ;main.c: 329: serialPrintPeripheral("AT+CREG?\r\n");
  2652  01E1  307A               	movlw	low (STR_8| (0+32768))
  2653  01E2  00F2               	movwf	serialPrintPeripheral@s
  2654  01E3  3085               	movlw	high (STR_8| (0+32768))
  2655  01E4  00F3               	movwf	serialPrintPeripheral@s+1
  2656  01E5  3184  2437  3181   	fcall	_serialPrintPeripheral
  2657                           
  2658                           ;main.c: 330: _delay((unsigned long)((10)*(32000000/4000.0)));
  2659  01E8  3068               	movlw	104
  2660  01E9  00F7               	movwf	??_getGSMData
  2661  01EA  30E4               	movlw	228
  2662  01EB                     u1387:	
  2663  01EB  0B89               	decfsz	9,f
  2664  01EC  29EB               	goto	u1387
  2665  01ED  0BF7               	decfsz	??_getGSMData,f
  2666  01EE  29EB               	goto	u1387
  2667  01EF  3200               	nop2
  2668                           
  2669                           ;main.c: 332: startTimer(1);
  2670  01F0  3001               	movlw	1
  2671  01F1  00F1               	movwf	startTimer@seconds
  2672  01F2  3000               	movlw	0
  2673  01F3  00F2               	movwf	startTimer@seconds+1
  2674  01F4  3184  24DA  3181   	fcall	_startTimer
  2675  01F7                     l1210:	
  2676                           ;main.c: 333: while (!timerDone) {
  2677                           
  2678  01F7  087C               	movf	_timerDone,w
  2679  01F8  1D03               	btfss	3,2
  2680  01F9  2A04               	goto	l1212
  2681                           
  2682                           ;main.c: 334: if (PIR3bits.RC1IF) {
  2683  01FA  014E               	movlb	14	; select bank14
  2684  01FB  1E8F               	btfss	15,5	;volatile
  2685  01FC  29F7               	goto	l1210
  2686                           
  2687                           ;main.c: 335: serialWriteBT(serialReadPeripheral());
  2688  01FD  3186  2601  3181   	fcall	_serialReadPeripheral
  2689  0200  3186  262D  3181   	fcall	_serialWriteBT
  2690  0203  29F7               	goto	l1210
  2691  0204                     l1212:	
  2692                           
  2693                           ;main.c: 336: }
  2694                           ;main.c: 337: }
  2695                           ;main.c: 339: serialPrintBT("GSM_END\r\n");
  2696  0204  30B1               	movlw	low (STR_9| (0+32768))
  2697  0205  00F2               	movwf	serialPrintBT@s
  2698  0206  3085               	movlw	high (STR_9| (0+32768))
  2699  0207  00F3               	movwf	serialPrintBT@s+1
  2700  0208  3184  2451  3181   	fcall	_serialPrintBT
  2701                           
  2702                           ;main.c: 340: _delay((unsigned long)((10)*(32000000/4000.0)));
  2703  020B  3068               	movlw	104
  2704  020C  00F7               	movwf	??_getGSMData
  2705  020D  30E4               	movlw	228
  2706  020E                     u1397:	
  2707  020E  0B89               	decfsz	9,f
  2708  020F  2A0E               	goto	u1397
  2709  0210  0BF7               	decfsz	??_getGSMData,f
  2710  0211  2A0E               	goto	u1397
  2711  0212  3200               	nop2
  2712  0213  0008               	return
  2713  0214                     __end_of_getGSMData:	
  2714                           
  2715                           	psect	text9
  2716  0437                     __ptext9:	
  2717 ;; *************** function _serialPrintPeripheral *****************
  2718 ;; Defined at:
  2719 ;;		line 139 in file "main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  s               2    2[COMMON] PTR unsigned char 
  2722 ;;		 -> STR_38(23), STR_36(12), STR_35(7), waitForCommand@message(30), 
  2723 ;;		 -> STR_29(15), STR_21(3), STR_20(4), STR_19(10), 
  2724 ;;		 -> STR_18(12), STR_17(3), STR_16(7), STR_14(5), 
  2725 ;;		 -> STR_8(11), STR_7(9), STR_6(12), STR_3(11), 
  2726 ;;		 -> STR_2(19), 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  i               2    5[COMMON] int 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2738 ;;      Params:         2       0       0       0       0       0       0       0
  2739 ;;      Locals:         2       0       0       0       0       0       0       0
  2740 ;;      Temps:          1       0       0       0       0       0       0       0
  2741 ;;      Totals:         5       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        5 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    2
  2745 ;; This function calls:
  2746 ;;		_serialWritePeripheral
  2747 ;; This function is called by:
  2748 ;;		_getWiFiData
  2749 ;;		_getGSMData
  2750 ;;		_sendSigfox
  2751 ;;		_sendSMS
  2752 ;;		_getSigfoxData
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _serialPrintPeripheral
  2758  0437                     _serialPrintPeripheral:	
  2759                           
  2760                           ;main.c: 140: int i = 0;
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _serialPrintPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2764  0437  01F5               	clrf	serialPrintPeripheral@i
  2765  0438  01F6               	clrf	serialPrintPeripheral@i+1
  2766  0439                     l1118:	
  2767                           ;main.c: 141: while (s[i] != '\0') {
  2768                           
  2769  0439  0872               	movf	serialPrintPeripheral@s,w
  2770  043A  0775               	addwf	serialPrintPeripheral@i,w
  2771  043B  0084               	movwf	4
  2772  043C  0873               	movf	serialPrintPeripheral@s+1,w
  2773  043D  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2774  043E  0085               	movwf	5
  2775  043F  0012               	moviw fsr0++
  2776  0440  1903               	btfsc	3,2
  2777  0441  0008               	return
  2778                           
  2779                           ;main.c: 142: serialWritePeripheral(s[i]);
  2780  0442  0872               	movf	serialPrintPeripheral@s,w
  2781  0443  0775               	addwf	serialPrintPeripheral@i,w
  2782  0444  0084               	movwf	4
  2783  0445  0873               	movf	serialPrintPeripheral@s+1,w
  2784  0446  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2785  0447  0085               	movwf	5
  2786  0448  0800               	movf	0,w	;code access
  2787  0449  3186  2625  3184   	fcall	_serialWritePeripheral
  2788                           
  2789                           ;main.c: 143: i++;
  2790  044C  3001               	movlw	1
  2791  044D  07F5               	addwf	serialPrintPeripheral@i,f
  2792  044E  3000               	movlw	0
  2793  044F  3DF6               	addwfc	serialPrintPeripheral@i+1,f
  2794  0450  2C39               	goto	l1118
  2795  0451                     __end_of_serialPrintPeripheral:	
  2796                           
  2797                           	psect	text10
  2798  0625                     __ptext10:	
  2799 ;; *************** function _serialWritePeripheral *****************
  2800 ;; Defined at:
  2801 ;;		line 133 in file "main.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  c               1    wreg     unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  c               1    1[COMMON] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2815 ;;      Params:         0       0       0       0       0       0       0       0
  2816 ;;      Locals:         1       0       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0
  2818 ;;      Totals:         1       0       0       0       0       0       0       0
  2819 ;;Total ram usage:        1 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_serialPrintPeripheral
  2826 ;;		_sendSMS
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _serialWritePeripheral
  2832  0625                     _serialWritePeripheral:	
  2833                           
  2834                           ;incstack = 0
  2835                           ; Regs used in _serialWritePeripheral: [wreg]
  2836                           ;serialWritePeripheral@c stored from wreg
  2837  0625  00F1               	movwf	serialWritePeripheral@c
  2838  0626                     l102:	
  2839                           ;main.c: 134: while (!PIR3bits.TX1IF) {
  2840                           
  2841  0626  014E               	movlb	14	; select bank14
  2842  0627  1E0F               	btfss	15,4	;volatile
  2843  0628  2E26               	goto	l102
  2844                           
  2845                           ;main.c: 135: }
  2846                           ;main.c: 136: TX1REG = c;
  2847  0629  0871               	movf	serialWritePeripheral@c,w
  2848  062A  0142               	movlb	2	; select bank2
  2849  062B  009A               	movwf	26	;volatile
  2850  062C  0008               	return
  2851  062D                     __end_of_serialWritePeripheral:	
  2852                           
  2853                           	psect	text11
  2854  0341                     __ptext11:	
  2855 ;; *************** function _getGPSData *****************
  2856 ;; Defined at:
  2857 ;;		line 343 in file "main.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  c               1    9[COMMON] unsigned char 
  2862 ;;  found           1    8[COMMON] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2872 ;;      Params:         0       0       0       0       0       0       0       0
  2873 ;;      Locals:         2       0       0       0       0       0       0       0
  2874 ;;      Temps:          1       0       0       0       0       0       0       0
  2875 ;;      Totals:         3       0       0       0       0       0       0       0
  2876 ;;Total ram usage:        3 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    3
  2879 ;; This function calls:
  2880 ;;		_serialFindPeripheral
  2881 ;;		_serialPrintBT
  2882 ;;		_serialReadPeripheral
  2883 ;;		_serialWriteBT
  2884 ;;		_setActivePeripheral
  2885 ;;		_startTimer
  2886 ;; This function is called by:
  2887 ;;		_waitForCommand
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _getGPSData
  2893  0341                     _getGPSData:	
  2894                           
  2895                           ;main.c: 344: setActivePeripheral(gps);
  2896                           
  2897                           ;incstack = 0
  2898                           ; Regs used in _getGPSData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2899  0341  3000               	movlw	0
  2900  0342  3182  22E8  3183   	fcall	_setActivePeripheral
  2901                           
  2902                           ;main.c: 345: serialPrintBT("GPS_START\r\n");
  2903  0345  3062               	movlw	low (STR_10| (0+32768))
  2904  0346  00F2               	movwf	serialPrintBT@s
  2905  0347  3085               	movlw	high (STR_10| (0+32768))
  2906  0348  00F3               	movwf	serialPrintBT@s+1
  2907  0349  3184  2451  3183   	fcall	_serialPrintBT
  2908                           
  2909                           ;main.c: 346: char found = 0;
  2910  034C  01F8               	clrf	getGPSData@found
  2911                           
  2912                           ;main.c: 347: startTimer(3);
  2913  034D  3003               	movlw	3
  2914  034E  00F1               	movwf	startTimer@seconds
  2915  034F  3000               	movlw	0
  2916  0350  00F2               	movwf	startTimer@seconds+1
  2917  0351  3184  24DA  3183   	fcall	_startTimer
  2918                           
  2919                           ;main.c: 348: while (!timerDone && !found) {
  2920  0354  2B77               	goto	l1232
  2921  0355                     l195:	
  2922                           
  2923                           ;main.c: 349: if (PIR3bits.RC1IF) {
  2924  0355  014E               	movlb	14	; select bank14
  2925  0356  1E8F               	btfss	15,5	;volatile
  2926  0357  2B77               	goto	l1232
  2927                           
  2928                           ;main.c: 350: if (serialFindPeripheral("$GPGGA,")) {
  2929  0358  301D               	movlw	low (STR_11| (0+32768))
  2930  0359  00F1               	movwf	serialFindPeripheral@s
  2931  035A  3086               	movlw	high (STR_11| (0+32768))
  2932  035B  00F2               	movwf	serialFindPeripheral@s+1
  2933  035C  3184  2415  3183   	fcall	_serialFindPeripheral
  2934  035F  3A00               	xorlw	0
  2935  0360  1903               	skipnz
  2936  0361  2B77               	goto	l1232
  2937                           
  2938                           ;main.c: 351: char c = 'c';
  2939  0362  3063               	movlw	99
  2940  0363  00F7               	movwf	??_getGPSData
  2941  0364  0877               	movf	??_getGPSData,w
  2942  0365  00F9               	movwf	getGPSData@c
  2943  0366                     l1230:	
  2944                           ;main.c: 352: while (c != '\n') {
  2945                           
  2946  0366  300A               	movlw	10
  2947  0367  0679               	xorwf	getGPSData@c,w
  2948  0368  1903               	btfsc	3,2
  2949  0369  2B75               	goto	l200
  2950                           
  2951                           ;main.c: 353: c = serialReadPeripheral();
  2952  036A  3186  2601  3183   	fcall	_serialReadPeripheral
  2953  036D  00F7               	movwf	??_getGPSData
  2954  036E  0877               	movf	??_getGPSData,w
  2955  036F  00F9               	movwf	getGPSData@c
  2956                           
  2957                           ;main.c: 354: serialWriteBT(c);
  2958  0370  0879               	movf	getGPSData@c,w
  2959  0371  3186  262D  3183   	fcall	_serialWriteBT
  2960  0374  2B66               	goto	l1230
  2961  0375                     l200:	
  2962                           
  2963                           ;main.c: 355: }
  2964                           ;main.c: 356: found = 1;
  2965  0375  01F8               	clrf	getGPSData@found
  2966  0376  0AF8               	incf	getGPSData@found,f
  2967  0377                     l1232:	
  2968  0377  087C               	movf	_timerDone,w
  2969  0378  1903               	btfsc	3,2
  2970  0379  0878               	movf	getGPSData@found,w
  2971  037A  1903               	btfsc	3,2
  2972  037B  2B55               	goto	l195
  2973                           
  2974                           ;main.c: 357: }
  2975                           ;main.c: 358: }
  2976                           ;main.c: 359: }
  2977                           ;main.c: 360: serialPrintBT("GPS_END\r\n");
  2978  037C  30BB               	movlw	low (STR_12| (0+32768))
  2979  037D  00F2               	movwf	serialPrintBT@s
  2980  037E  3085               	movlw	high (STR_12| (0+32768))
  2981  037F  00F3               	movwf	serialPrintBT@s+1
  2982  0380  3184  2451  3183   	fcall	_serialPrintBT
  2983                           
  2984                           ;main.c: 361: _delay((unsigned long)((10)*(32000000/4000.0)));
  2985  0383  3068               	movlw	104
  2986  0384  00F7               	movwf	??_getGPSData
  2987  0385  30E4               	movlw	228
  2988  0386                     u1407:	
  2989  0386  0B89               	decfsz	9,f
  2990  0387  2B86               	goto	u1407
  2991  0388  0BF7               	decfsz	??_getGPSData,f
  2992  0389  2B86               	goto	u1407
  2993  038A  3200               	nop2
  2994  038B  0008               	return
  2995  038C                     __end_of_getGPSData:	
  2996                           
  2997                           	psect	text12
  2998  04DA                     __ptext12:	
  2999 ;; *************** function _startTimer *****************
  3000 ;; Defined at:
  3001 ;;		line 274 in file "main.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  seconds         2    1[COMMON] int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3015 ;;      Params:         2       0       0       0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0
  3018 ;;      Totals:         2       0       0       0       0       0       0       0
  3019 ;;Total ram usage:        2 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_getWiFiData
  3026 ;;		_getGSMData
  3027 ;;		_getGPSData
  3028 ;;		_waitForCommand
  3029 ;;		_getSigfoxData
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _startTimer
  3035  04DA                     _startTimer:	
  3036                           
  3037                           ;main.c: 277: timerDone = 0;
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _startTimer: [wreg+status,2]
  3041  04DA  01FC               	clrf	_timerDone
  3042                           
  3043                           ;main.c: 278: timerSetpoint = seconds;
  3044  04DB  0872               	movf	startTimer@seconds+1,w
  3045  04DC  0140               	movlb	0	; select bank0
  3046  04DD  00EC               	movwf	_timerSetpoint+1
  3047  04DE  0871               	movf	startTimer@seconds,w
  3048  04DF  00EB               	movwf	_timerSetpoint
  3049                           
  3050                           ;main.c: 279: timerActual = 0;
  3051  04E0  01E9               	clrf	_timerActual
  3052  04E1  01EA               	clrf	_timerActual+1
  3053                           
  3054                           ;main.c: 281: PIE0bits.TMR0IE = 1;
  3055  04E2  014E               	movlb	14	; select bank14
  3056  04E3  1696               	bsf	22,5	;volatile
  3057                           
  3058                           ;main.c: 282: T0CON0 = 0b00010000;
  3059  04E4  3010               	movlw	16
  3060  04E5  014B               	movlb	11	; select bank11
  3061  04E6  009E               	movwf	30	;volatile
  3062                           
  3063                           ;main.c: 283: T0CON1 = 0b01000111;
  3064  04E7  3047               	movlw	71
  3065  04E8  009F               	movwf	31	;volatile
  3066                           
  3067                           ;main.c: 284: T0CON0bits.T0EN = 1;
  3068  04E9  179E               	bsf	30,7	;volatile
  3069  04EA  0008               	return
  3070  04EB                     __end_of_startTimer:	
  3071                           
  3072                           	psect	text13
  3073  02E8                     __ptext13:	
  3074 ;; *************** function _setActivePeripheral *****************
  3075 ;; Defined at:
  3076 ;;		line 169 in file "main.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  peri            1    wreg     enum E8210
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  peri            1    1[COMMON] enum E8210
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3090 ;;      Params:         0       0       0       0       0       0       0       0
  3091 ;;      Locals:         1       0       0       0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0       0
  3093 ;;      Totals:         1       0       0       0       0       0       0       0
  3094 ;;Total ram usage:        1 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;;		_getWiFiData
  3102 ;;		_getGSMData
  3103 ;;		_getGPSData
  3104 ;;		_sendSigfox
  3105 ;;		_sendSMS
  3106 ;;		_getSigfoxData
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _setActivePeripheral
  3112  02E8                     _setActivePeripheral:	
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _setActivePeripheral: [wreg-fsr0h+status,2+status,0]
  3116                           ;setActivePeripheral@peri stored from wreg
  3117  02E8  00F1               	movwf	setActivePeripheral@peri
  3118                           
  3119                           ;main.c: 178: RC6PPS = 0x00;
  3120  02E9  017E               	movlb	62	; select bank62
  3121  02EA  01A6               	clrf	38	;volatile
  3122                           
  3123                           ;main.c: 179: RC1PPS = 0x00;
  3124  02EB  01A1               	clrf	33	;volatile
  3125                           
  3126                           ;main.c: 180: RA4PPS = 0x00;
  3127  02EC  0194               	clrf	20	;volatile
  3128                           
  3129                           ;main.c: 181: RC4PPS = 0x00;
  3130  02ED  01A4               	clrf	36	;volatile
  3131                           
  3132                           ;main.c: 184: switch (peri) {
  3133  02EE  2B2C               	goto	l1110
  3134  02EF                     l1076:	
  3135                           ;main.c: 185: case sigfox:
  3136                           
  3137                           
  3138                           ;main.c: 186: {
  3139                           ;main.c: 187: RC6PPS = 0x0F;
  3140  02EF  300F               	movlw	15
  3141  02F0  017E               	movlb	62	; select bank62
  3142  02F1  00A6               	movwf	38	;volatile
  3143                           
  3144                           ;main.c: 188: SP1BRG = 207;
  3145  02F2  3000               	movlw	0
  3146  02F3  0142               	movlb	2	; select bank2
  3147  02F4  009C               	movwf	28	;volatile
  3148  02F5  30CF               	movlw	207
  3149  02F6  009B               	movwf	27	;volatile
  3150                           
  3151                           ;main.c: 189: TRISC3 = 1;
  3152  02F7  0140               	movlb	0	; select bank0
  3153  02F8  1594               	bsf	20,3	;volatile
  3154                           
  3155                           ;main.c: 190: RX1DTPPSbits.RX1DTPPS = 0x13;
  3156  02F9  017D               	movlb	61	; select bank61
  3157  02FA  084B               	movf	75,w	;volatile
  3158  02FB  39C0               	andlw	-64
  3159  02FC  3813               	iorlw	19
  3160  02FD  2B2A               	goto	L3
  3161  02FE                     l1084:	
  3162                           ;main.c: 192: }
  3163                           ;main.c: 193: case gsm:
  3164                           
  3165                           ;main.c: 191: break;
  3166                           
  3167                           
  3168                           ;main.c: 194: {
  3169                           ;main.c: 195: RC1PPS = 0x0F;
  3170  02FE  300F               	movlw	15
  3171  02FF  017E               	movlb	62	; select bank62
  3172  0300  00A1               	movwf	33	;volatile
  3173                           
  3174                           ;main.c: 196: SP1BRG = 16;
  3175  0301  3000               	movlw	0
  3176  0302  0142               	movlb	2	; select bank2
  3177  0303  009C               	movwf	28	;volatile
  3178  0304  3010               	movlw	16
  3179  0305  009B               	movwf	27	;volatile
  3180                           
  3181                           ;main.c: 197: TRISC0 = 1;
  3182  0306  0140               	movlb	0	; select bank0
  3183  0307  1414               	bsf	20,0	;volatile
  3184                           
  3185                           ;main.c: 198: RX1DTPPSbits.RX1DTPPS = 0x10;
  3186  0308  017D               	movlb	61	; select bank61
  3187  0309  084B               	movf	75,w	;volatile
  3188  030A  39C0               	andlw	-64
  3189  030B  3810               	iorlw	16
  3190  030C  2B2A               	goto	L3
  3191  030D                     l1092:	
  3192                           ;main.c: 200: }
  3193                           ;main.c: 201: case wifi:
  3194                           
  3195                           ;main.c: 199: break;
  3196                           
  3197                           
  3198                           ;main.c: 202: {
  3199                           ;main.c: 203: RA4PPS = 0x0F;
  3200  030D  300F               	movlw	15
  3201  030E  017E               	movlb	62	; select bank62
  3202  030F  0094               	movwf	20	;volatile
  3203                           
  3204                           ;main.c: 204: SP1BRG = 16;
  3205  0310  3000               	movlw	0
  3206  0311  0142               	movlb	2	; select bank2
  3207  0312  009C               	movwf	28	;volatile
  3208  0313  3010               	movlw	16
  3209  0314  009B               	movwf	27	;volatile
  3210                           
  3211                           ;main.c: 205: TRISA5 = 1;
  3212  0315  0140               	movlb	0	; select bank0
  3213  0316  1692               	bsf	18,5	;volatile
  3214                           
  3215                           ;main.c: 206: RX1DTPPSbits.RX1DTPPS = 0x05;
  3216  0317  017D               	movlb	61	; select bank61
  3217  0318  084B               	movf	75,w	;volatile
  3218  0319  39C0               	andlw	-64
  3219  031A  3805               	iorlw	5
  3220  031B  2B2A               	goto	L3
  3221  031C                     l1100:	
  3222                           ;main.c: 208: }
  3223                           ;main.c: 209: case gps:
  3224                           
  3225                           ;main.c: 207: break;
  3226                           
  3227                           
  3228                           ;main.c: 210: {
  3229                           ;main.c: 211: RC4PPS = 0x0F;
  3230  031C  300F               	movlw	15
  3231  031D  017E               	movlb	62	; select bank62
  3232  031E  00A4               	movwf	36	;volatile
  3233                           
  3234                           ;main.c: 212: SP1BRG = 207;
  3235  031F  3000               	movlw	0
  3236  0320  0142               	movlb	2	; select bank2
  3237  0321  009C               	movwf	28	;volatile
  3238  0322  30CF               	movlw	207
  3239  0323  009B               	movwf	27	;volatile
  3240                           
  3241                           ;main.c: 213: TRISC5 = 1;
  3242  0324  0140               	movlb	0	; select bank0
  3243  0325  1694               	bsf	20,5	;volatile
  3244                           
  3245                           ;main.c: 214: RX1DTPPSbits.RX1DTPPS = 0x15;
  3246  0326  017D               	movlb	61	; select bank61
  3247  0327  084B               	movf	75,w	;volatile
  3248  0328  39C0               	andlw	-64
  3249  0329  3815               	iorlw	21
  3250  032A                     L3:	
  3251  032A  00CB               	movwf	75	;volatile
  3252                           
  3253                           ;main.c: 216: }
  3254                           ;main.c: 217: }
  3255                           
  3256                           ;main.c: 215: break;
  3257  032B  2B3A               	goto	l131
  3258  032C                     l1110:	
  3259  032C  0871               	movf	setActivePeripheral@peri,w
  3260                           
  3261                           ; Switch size 1, requested type "space"
  3262                           ; Number of cases is 4, Range of values is 0 to 3
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte           13     7 (average)
  3266                           ; direct_byte           14     6 (fixed)
  3267                           ; jumptable            260     6 (fixed)
  3268                           ;	Chosen strategy is simple_byte
  3269  032D  3A00               	xorlw	0	; case 0
  3270  032E  1903               	skipnz
  3271  032F  2B1C               	goto	l1100
  3272  0330  3A01               	xorlw	1	; case 1
  3273  0331  1903               	skipnz
  3274  0332  2B0D               	goto	l1092
  3275  0333  3A03               	xorlw	3	; case 2
  3276  0334  1903               	skipnz
  3277  0335  2AEF               	goto	l1076
  3278  0336  3A01               	xorlw	1	; case 3
  3279  0337  1903               	skipnz
  3280  0338  2AFE               	goto	l1084
  3281  0339  2B3A               	goto	l131
  3282  033A                     l131:	
  3283                           
  3284                           ;main.c: 219: TX1STAbits.BRGH = 1;
  3285  033A  0142               	movlb	2	; select bank2
  3286  033B  151E               	bsf	30,2	;volatile
  3287                           
  3288                           ;main.c: 220: TX1STAbits.SYNC = 0;
  3289  033C  121E               	bcf	30,4	;volatile
  3290                           
  3291                           ;main.c: 221: RC1STAbits.SPEN = 1;
  3292  033D  179D               	bsf	29,7	;volatile
  3293                           
  3294                           ;main.c: 222: TX1STAbits.TXEN = 1;
  3295  033E  169E               	bsf	30,5	;volatile
  3296                           
  3297                           ;main.c: 223: RC1STAbits.CREN = 1;
  3298  033F  161D               	bsf	29,4	;volatile
  3299  0340  0008               	return
  3300  0341                     __end_of_setActivePeripheral:	
  3301                           
  3302                           	psect	text14
  3303  0451                     __ptext14:	
  3304 ;; *************** function _serialPrintBT *****************
  3305 ;; Defined at:
  3306 ;;		line 232 in file "main.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  s               2    2[COMMON] PTR unsigned char 
  3309 ;;		 -> STR_32(14), STR_30(14), STR_27(14), STR_25(14), 
  3310 ;;		 -> STR_23(14), STR_15(13), STR_13(15), STR_12(10), 
  3311 ;;		 -> STR_10(12), STR_9(10), STR_5(12), STR_4(11), 
  3312 ;;		 -> STR_1(13), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  i               2    5[COMMON] int 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3324 ;;      Params:         2       0       0       0       0       0       0       0
  3325 ;;      Locals:         2       0       0       0       0       0       0       0
  3326 ;;      Temps:          1       0       0       0       0       0       0       0
  3327 ;;      Totals:         5       0       0       0       0       0       0       0
  3328 ;;Total ram usage:        5 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    2
  3331 ;; This function calls:
  3332 ;;		_serialWriteBT
  3333 ;; This function is called by:
  3334 ;;		_getWiFiData
  3335 ;;		_getGSMData
  3336 ;;		_getGPSData
  3337 ;;		_waitForCommand
  3338 ;;		_getSigfoxData
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _serialPrintBT
  3344  0451                     _serialPrintBT:	
  3345                           
  3346                           ;main.c: 233: int i = 0;
  3347                           
  3348                           ;incstack = 0
  3349                           ; Regs used in _serialPrintBT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3350  0451  01F5               	clrf	serialPrintBT@i
  3351  0452  01F6               	clrf	serialPrintBT@i+1
  3352  0453                     l1142:	
  3353                           ;main.c: 234: while (s[i] != '\0') {
  3354                           
  3355  0453  0872               	movf	serialPrintBT@s,w
  3356  0454  0775               	addwf	serialPrintBT@i,w
  3357  0455  0084               	movwf	4
  3358  0456  0873               	movf	serialPrintBT@s+1,w
  3359  0457  3D76               	addwfc	serialPrintBT@i+1,w
  3360  0458  0085               	movwf	5
  3361  0459  0012               	moviw fsr0++
  3362  045A  1903               	btfsc	3,2
  3363  045B  0008               	return
  3364                           
  3365                           ;main.c: 235: serialWriteBT(s[i]);
  3366  045C  0872               	movf	serialPrintBT@s,w
  3367  045D  0775               	addwf	serialPrintBT@i,w
  3368  045E  0084               	movwf	4
  3369  045F  0873               	movf	serialPrintBT@s+1,w
  3370  0460  3D76               	addwfc	serialPrintBT@i+1,w
  3371  0461  0085               	movwf	5
  3372  0462  0800               	movf	0,w	;code access
  3373  0463  3186  262D  3184   	fcall	_serialWriteBT
  3374                           
  3375                           ;main.c: 236: i++;
  3376  0466  3001               	movlw	1
  3377  0467  07F5               	addwf	serialPrintBT@i,f
  3378  0468  3000               	movlw	0
  3379  0469  3DF6               	addwfc	serialPrintBT@i+1,f
  3380  046A  2C53               	goto	l1142
  3381  046B                     __end_of_serialPrintBT:	
  3382                           
  3383                           	psect	text15
  3384  062D                     __ptext15:	
  3385 ;; *************** function _serialWriteBT *****************
  3386 ;; Defined at:
  3387 ;;		line 226 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  c               1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  c               1    1[COMMON] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3401 ;;      Params:         0       0       0       0       0       0       0       0
  3402 ;;      Locals:         1       0       0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0
  3404 ;;      Totals:         1       0       0       0       0       0       0       0
  3405 ;;Total ram usage:        1 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_serialPrintBT
  3412 ;;		_getWiFiData
  3413 ;;		_getGSMData
  3414 ;;		_getGPSData
  3415 ;;		_waitForCommand
  3416 ;;		_getSigfoxData
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _serialWriteBT
  3422  062D                     _serialWriteBT:	
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _serialWriteBT: [wreg]
  3426                           ;serialWriteBT@c stored from wreg
  3427  062D  00F1               	movwf	serialWriteBT@c
  3428  062E                     l138:	
  3429                           ;main.c: 227: while (!PIR3bits.TX2IF) {
  3430                           
  3431  062E  014E               	movlb	14	; select bank14
  3432  062F  1F0F               	btfss	15,6	;volatile
  3433  0630  2E2E               	goto	l138
  3434                           
  3435                           ;main.c: 228: }
  3436                           ;main.c: 229: TX2REG = c;
  3437  0631  0871               	movf	serialWriteBT@c,w
  3438  0632  0154               	movlb	20	; select bank20
  3439  0633  009A               	movwf	26	;volatile
  3440  0634  0008               	return
  3441  0635                     __end_of_serialWriteBT:	
  3442                           
  3443                           	psect	text16
  3444  0415                     __ptext16:	
  3445 ;; *************** function _serialFindPeripheral *****************
  3446 ;; Defined at:
  3447 ;;		line 157 in file "main.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  s               2    1[COMMON] PTR unsigned char 
  3450 ;;		 -> STR_11(8), 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  i               2    4[COMMON] int 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      unsigned char 
  3455 ;; Registers used:
  3456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3462 ;;      Params:         2       0       0       0       0       0       0       0
  3463 ;;      Locals:         2       0       0       0       0       0       0       0
  3464 ;;      Temps:          1       0       0       0       0       0       0       0
  3465 ;;      Totals:         5       0       0       0       0       0       0       0
  3466 ;;Total ram usage:        5 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    2
  3469 ;; This function calls:
  3470 ;;		_serialReadPeripheral
  3471 ;; This function is called by:
  3472 ;;		_getGPSData
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _serialFindPeripheral
  3478  0415                     _serialFindPeripheral:	
  3479                           
  3480                           ;main.c: 158: int i = 0;
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _serialFindPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3484  0415  01F4               	clrf	serialFindPeripheral@i
  3485  0416  01F5               	clrf	serialFindPeripheral@i+1
  3486  0417                     l1130:	
  3487                           ;main.c: 159: while (s[i] != '\0') {
  3488                           
  3489  0417  0871               	movf	serialFindPeripheral@s,w
  3490  0418  0774               	addwf	serialFindPeripheral@i,w
  3491  0419  0084               	movwf	4
  3492  041A  0872               	movf	serialFindPeripheral@s+1,w
  3493  041B  3D75               	addwfc	serialFindPeripheral@i+1,w
  3494  041C  0085               	movwf	5
  3495  041D  0012               	moviw fsr0++
  3496  041E  1903               	btfsc	3,2
  3497  041F  2C35               	goto	l1132
  3498                           
  3499                           ;main.c: 160: if (serialReadPeripheral() == s[i]) {
  3500  0420  0871               	movf	serialFindPeripheral@s,w
  3501  0421  0774               	addwf	serialFindPeripheral@i,w
  3502  0422  0084               	movwf	4
  3503  0423  0872               	movf	serialFindPeripheral@s+1,w
  3504  0424  3D75               	addwfc	serialFindPeripheral@i+1,w
  3505  0425  0085               	movwf	5
  3506  0426  0800               	movf	0,w	;code access
  3507  0427  00F3               	movwf	??_serialFindPeripheral
  3508  0428  3186  2601  3184   	fcall	_serialReadPeripheral
  3509  042B  0673               	xorwf	??_serialFindPeripheral,w
  3510  042C  1D03               	skipz
  3511  042D  2C33               	goto	l1126
  3512                           
  3513                           ;main.c: 161: i++;
  3514  042E  3001               	movlw	1
  3515  042F  07F4               	addwf	serialFindPeripheral@i,f
  3516  0430  3000               	movlw	0
  3517  0431  3DF5               	addwfc	serialFindPeripheral@i+1,f
  3518                           
  3519                           ;main.c: 162: } else {
  3520  0432  2C17               	goto	l1130
  3521  0433                     l1126:	
  3522                           
  3523                           ;main.c: 163: return 0;
  3524  0433  3000               	movlw	0
  3525  0434  0008               	return
  3526  0435                     l1132:	
  3527                           
  3528                           ;main.c: 164: }
  3529                           ;main.c: 165: }
  3530                           ;main.c: 166: return 1;
  3531  0435  3001               	movlw	1
  3532  0436  0008               	return
  3533  0437                     __end_of_serialFindPeripheral:	
  3534                           
  3535                           	psect	text17
  3536  0601                     __ptext17:	
  3537 ;; *************** function _serialReadPeripheral *****************
  3538 ;; Defined at:
  3539 ;;		line 147 in file "main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      unsigned char 
  3546 ;; Registers used:
  3547 ;;		wreg
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3553 ;;      Params:         0       0       0       0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_serialFindPeripheral
  3564 ;;		_getWiFiData
  3565 ;;		_getGSMData
  3566 ;;		_getGPSData
  3567 ;;		_waitForCommand
  3568 ;;		_getSigfoxData
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _serialReadPeripheral
  3574  0601                     _serialReadPeripheral:	
  3575  0601                     l114:	
  3576                           ;main.c: 148: while (!PIR3bits.RC1IF) {
  3577                           
  3578                           ;incstack = 0
  3579                           ; Regs used in _serialReadPeripheral: [wreg]
  3580                           
  3581  0601  014E               	movlb	14	; select bank14
  3582  0602  1E8F               	btfss	15,5	;volatile
  3583  0603  2E01               	goto	l114
  3584                           
  3585                           ;main.c: 149: }
  3586                           ;main.c: 150: if (1 == RC1STAbits.OERR) {
  3587  0604  0142               	movlb	2	; select bank2
  3588  0605  1C9D               	btfss	29,1	;volatile
  3589  0606  2E09               	goto	l1066
  3590                           
  3591                           ;main.c: 151: RC1STAbits.SPEN = 0;
  3592  0607  139D               	bcf	29,7	;volatile
  3593                           
  3594                           ;main.c: 152: RC1STAbits.SPEN = 1;
  3595  0608  179D               	bsf	29,7	;volatile
  3596  0609                     l1066:	
  3597                           
  3598                           ;main.c: 153: }
  3599                           ;main.c: 154: return RC1REG;
  3600  0609  0819               	movf	25,w	;volatile
  3601  060A  0008               	return
  3602  060B                     __end_of_serialReadPeripheral:	
  3603                           
  3604                           	psect	text18
  3605  04B1                     __ptext18:	
  3606 ;; *************** function _initBTSerial *****************
  3607 ;; Defined at:
  3608 ;;		line 115 in file "main.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3622 ;;      Params:         0       0       0       0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function _initBTSerial
  3638  04B1                     _initBTSerial:	
  3639                           
  3640                           ;main.c: 120: RB6PPS = 0x11;
  3641                           
  3642                           ;incstack = 0
  3643                           ; Regs used in _initBTSerial: [wreg+status,2+status,0]
  3644  04B1  3011               	movlw	17
  3645  04B2  017E               	movlb	62	; select bank62
  3646  04B3  009E               	movwf	30	;volatile
  3647                           
  3648                           ;main.c: 121: TX2STAbits.BRGH = 1;
  3649  04B4  0154               	movlb	20	; select bank20
  3650  04B5  151E               	bsf	30,2	;volatile
  3651                           
  3652                           ;main.c: 122: SP2BRG = 16;
  3653  04B6  3000               	movlw	0
  3654  04B7  009C               	movwf	28	;volatile
  3655  04B8  3010               	movlw	16
  3656  04B9  009B               	movwf	27	;volatile
  3657                           
  3658                           ;main.c: 123: TX2STAbits.SYNC = 0;
  3659  04BA  121E               	bcf	30,4	;volatile
  3660                           
  3661                           ;main.c: 124: RC2STAbits.SPEN = 1;
  3662  04BB  179D               	bsf	29,7	;volatile
  3663                           
  3664                           ;main.c: 125: TX2STAbits.TXEN = 1;
  3665  04BC  169E               	bsf	30,5	;volatile
  3666                           
  3667                           ;main.c: 128: TRISB5 = 1;
  3668  04BD  0140               	movlb	0	; select bank0
  3669  04BE  1693               	bsf	19,5	;volatile
  3670                           
  3671                           ;main.c: 129: RX2DTPPSbits.RX2DTPPS = 0x0D;
  3672  04BF  017D               	movlb	61	; select bank61
  3673  04C0  084D               	movf	77,w	;volatile
  3674  04C1  39C0               	andlw	-64
  3675  04C2  380D               	iorlw	13
  3676  04C3  00CD               	movwf	77	;volatile
  3677                           
  3678                           ;main.c: 130: RC2STAbits.CREN = 1;
  3679  04C4  0154               	movlb	20	; select bank20
  3680  04C5  161D               	bsf	29,4	;volatile
  3681  04C6  0008               	return
  3682  04C7                     __end_of_initBTSerial:	
  3683                           
  3684                           	psect	intentry
  3685  0004                     __pintentry:	
  3686 ;; *************** function _timerCount *****************
  3687 ;; Defined at:
  3688 ;;		line 262 in file "main.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3702 ;;      Params:         0       0       0       0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0       0       0       0
  3704 ;;      Temps:          1       0       0       0       0       0       0       0
  3705 ;;      Totals:         1       0       0       0       0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		Interrupt level 1
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715  0004                     _timerCount:	
  3716                           
  3717                           ;incstack = 0
  3718  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3719                           
  3720                           ; Regs used in _timerCount: [wreg]
  3721  0005  3180               	pagesel	$
  3722  0006  0140               	movlb	0	; select bank0
  3723  0007  087F               	movf	127,w
  3724  0008  00F0               	movwf	??_timerCount
  3725                           
  3726                           ;main.c: 264: if (PIR0bits.TMR0IF) {
  3727  0009  014E               	movlb	14	; select bank14
  3728  000A  1E8C               	btfss	12,5	;volatile
  3729  000B  2813               	goto	i1l167
  3730                           
  3731                           ;main.c: 265: timerActual++;
  3732  000C  3001               	movlw	1
  3733  000D  0140               	movlb	0	; select bank0
  3734  000E  07E9               	addwf	_timerActual,f
  3735  000F  3000               	movlw	0
  3736  0010  3DEA               	addwfc	_timerActual+1,f
  3737                           
  3738                           ;main.c: 266: PIR0bits.TMR0IF = 0;
  3739  0011  014E               	movlb	14	; select bank14
  3740  0012  128C               	bcf	12,5	;volatile
  3741  0013                     i1l167:	
  3742                           
  3743                           ;main.c: 267: }
  3744                           ;main.c: 268: if (timerActual == timerSetpoint) {
  3745  0013  0140               	movlb	0	; select bank0
  3746  0014  086C               	movf	_timerSetpoint+1,w
  3747  0015  066A               	xorwf	_timerActual+1,w
  3748  0016  1D03               	skipz
  3749  0017  281A               	goto	u104_25
  3750  0018  086B               	movf	_timerSetpoint,w
  3751  0019  0669               	xorwf	_timerActual,w
  3752  001A                     u104_25:	
  3753  001A  1D03               	skipz
  3754  001B  2820               	goto	i1l169
  3755                           
  3756                           ;main.c: 269: timerDone = 1;
  3757  001C  01FC               	clrf	_timerDone
  3758  001D  0AFC               	incf	_timerDone,f
  3759                           
  3760                           ;main.c: 270: T0CON0bits.T0EN = 0;
  3761  001E  014B               	movlb	11	; select bank11
  3762  001F  139E               	bcf	30,7	;volatile
  3763  0020                     i1l169:	
  3764  0020  0870               	movf	??_timerCount,w
  3765  0021  0140               	movlb	0	; select bank0
  3766  0022  00FF               	movwf	127
  3767  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3768  0024  0009               	retfie
  3769  0025                     __end_of_timerCount:	
  3770  007E                     btemp	set	126	;btemp
  3771  007E                     int$flags	set	126
  3772  007E                     wtemp0	set	126


Data Sizes:
    Strings     381
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     73      77
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_33(CODE[13]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_40(CODE[10]), STR_39(CODE[9]), STR_37(CODE[14]), STR_34(CODE[11]), 
		 -> STR_31(CODE[10]), STR_28(CODE[22]), STR_26(CODE[11]), STR_24(CODE[10]), 
		 -> STR_22(CODE[10]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    waitForCommand@p	PTR unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    sendSMS@message	PTR unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    sendSMS@number	PTR unsigned char  size(2) Largest target is 7
		 -> STR_35(CODE[7]), 

    sendSigfox@hexMessage	PTR unsigned char  size(2) Largest target is 30
		 -> STR_38(CODE[23]), waitForCommand@message(BANK0[30]), STR_29(CODE[15]), 

    serialPrintBT@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_32(CODE[14]), STR_30(CODE[14]), STR_27(CODE[14]), STR_25(CODE[14]), 
		 -> STR_23(CODE[14]), STR_15(CODE[13]), STR_13(CODE[15]), STR_12(CODE[10]), 
		 -> STR_10(CODE[12]), STR_9(CODE[10]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_1(CODE[13]), 

    serialFindPeripheral@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[8]), 

    serialPrintPeripheral@s	PTR unsigned char  size(2) Largest target is 30
		 -> STR_38(CODE[23]), STR_36(CODE[12]), STR_35(CODE[7]), waitForCommand@message(BANK0[30]), 
		 -> STR_29(CODE[15]), STR_21(CODE[3]), STR_20(CODE[4]), STR_19(CODE[10]), 
		 -> STR_18(CODE[12]), STR_17(CODE[3]), STR_16(CODE[7]), STR_14(CODE[5]), 
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[12]), STR_3(CODE[11]), 
		 -> STR_2(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_waitForCommand
    _waitForCommand->_sendSMS
    _sendSigfox->_serialPrintPeripheral
    _sendSMS->_serialPrintPeripheral
    _getWiFiData->_serialPrintBT
    _getWiFiData->_serialPrintPeripheral
    _getGSMData->_serialPrintBT
    _getGSMData->_serialPrintPeripheral
    _serialPrintPeripheral->_serialWritePeripheral
    _getGPSData->_serialPrintBT
    _serialPrintBT->_serialWriteBT

Critical Paths under _timerCount in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_waitForCommand
    _waitForCommand->_sendSMS

Critical Paths under _timerCount in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timerCount in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timerCount in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timerCount in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timerCount in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timerCount in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timerCount in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11448
                                             71 BANK0      2     2      0
                       _initBTSerial
                _setActivePeripheral
                     _waitForCommand
 ---------------------------------------------------------------------------------
 (1) _waitForCommand                                      70    70      0   11426
                                             11 COMMON     1     1      0
                                              2 BANK0     69    69      0
                         _getGPSData
                         _getGSMData
                        _getWiFiData
                            _sendSMS
                         _sendSigfox
                      _serialPrintBT
                       _serialReadBT
               _serialReadPeripheral
                      _serialWriteBT
                         _startTimer
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     267
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     811
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _serialReadBT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sendSigfox                                           2     0      2    1110
                                              7 COMMON     2     0      2
              _serialPrintPeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _sendSMS                                              6     2      4    1143
                                              7 COMMON     4     0      4
                                              0 BANK0      2     2      0
              _serialPrintPeripheral
              _serialWritePeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _getWiFiData                                          3     3      0    2243
                                              7 COMMON     3     3      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _getGSMData                                           2     2      0    2198
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (3) _serialPrintPeripheral                                5     3      2     907
                                              2 COMMON     5     3      2
              _serialWritePeripheral
 ---------------------------------------------------------------------------------
 (4) _serialWritePeripheral                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getGPSData                                           3     3      0    1504
                                              7 COMMON     3     3      0
               _serialFindPeripheral
                      _serialPrintBT
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           2     0      2     446
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _setActivePeripheral                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialPrintBT                                        5     3      2     801
                                              2 COMMON     5     3      2
                      _serialWriteBT
 ---------------------------------------------------------------------------------
 (2) _serialWriteBT                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serialFindPeripheral                                 5     3      2     143
                                              1 COMMON     5     3      2
               _serialReadPeripheral
 ---------------------------------------------------------------------------------
 (2) _serialReadPeripheral                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBTSerial                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timerCount                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initBTSerial
   _setActivePeripheral
   _waitForCommand
     _getGPSData
       _serialFindPeripheral
         _serialReadPeripheral
       _serialPrintBT
         _serialWriteBT
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getGSMData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getWiFiData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _sendSMS
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialWritePeripheral
       _setActivePeripheral
     _sendSigfox
       _serialPrintPeripheral
         _serialWritePeripheral
       _setActivePeripheral
     _serialPrintBT
       _serialWriteBT
     _serialReadBT
     _serialReadPeripheral
     _serialWriteBT
     _startTimer
     _strcmp
     _strncmp

 _timerCount (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      4D       6       96.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue May 08 18:59:44 2018

                   __CFG_CP$OFF 0000                     __CFG_LVP$ON 0000                             l102 0626  
                           l200 0375                             l114 0601                             l131 033A  
                           l220 0031                             l150 05F7                             l138 062E  
                           l195 0355           serialFindPeripheral@i 0074           serialFindPeripheral@s 0071  
          sendSigfox@hexMessage 0077                    __CFG_BORV$LO 0000                             wreg 0009  
                 __CFG_BBEN$OFF 0000                    __CFG_ZCD$OFF 0000                            l1100 031C  
                          l1110 032C                            l1200 01D4                            l1130 0417  
                          l1210 01F7                            l1202 01E1                            l1132 0435  
                          l1212 0204                            l1126 0433                            l1142 0453  
                          l1230 0366                            l1118 0439                            l1232 0377  
                          l1066 0609                            l1092 030D                            l1084 02FE  
                          l1076 02EF                            l1180 02D3                            l1500 00DB  
                          l1182 02C1                            l1158 05FF                            l1270 03D6  
                          l1184 02D8                            l1512 00F2                            l1274 03ED  
                          l1514 010D                            l1268 03CE                            l1284 03A9  
                          l1292 038D                            l1532 0137                            l1294 03C9  
                          l1550 0169                            l1534 014D                            l1518 0119  
                          l1288 03C0                            l1552 017F                            l1556 018E  
                          l1492 009C                            l1484 0070                            l1476 003E  
                          l1478 0054                            l1496 00BF                            l1488 0086  
                          l1576 0411                            STR_1 0524                            STR_2 04C7  
                          STR_3 059B                            STR_4 0585                            STR_5 0556  
                          STR_6 054A                            STR_7 0614                            STR_8 057A  
                          STR_9 05B1                            u1307 025B                            u1317 026C  
                          u1407 0386                            u1327 0281                            u1337 029F  
                          u1347 02B2                            u1357 02E2                            u1277 0403  
                          u1367 01B4                            u1287 0225                            u1377 01C5  
                          u1297 0247                            u1387 01EB                            u1397 020E  
                 __CFG_FCMEN$ON 0000    __end_of_serialFindPeripheral 0437                            _main 03F3  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          btemp 007E                   __CFG_BOREN$ON 0000                            start 0025  
                 __CFG_CSWEN$ON 0000                   __CFG_MCLRE$ON 0000                           ?_main 0070  
                         STR_10 0562                           STR_11 061D                           STR_20 0648  
                         STR_12 05BB                           STR_21 0649                           STR_13 04FA  
                         STR_30 0509                           STR_14 0643                           STR_22 05E3  
                         STR_31 05CF                           STR_15 0517                           STR_23 0509  
                         STR_32 0509                           STR_16 0635                           STR_24 05D9  
                         STR_40 05C5                           STR_17 0649                           STR_25 0509  
                         STR_33 0531                   __CFG_WDTE$OFF 0000                           STR_34 05A6  
                         STR_26 0590                           STR_18 053E                           STR_27 0509  
                         STR_35 063C                           STR_19 05ED                           STR_36 056E  
                         STR_28 049B                           STR_37 04A3                           STR_29 04EB  
                         STR_38 0484                           STR_39 060B                   ?_initBTSerial 0070  
                         _LATC7 00D7                           i1l167 0013                           i1l169 0020  
  __size_of_setActivePeripheral 0059                   __CFG_WRTB$OFF 0000                   __CFG_WRTC$OFF 0000  
               __end_of_sendSMS 0288                           status 0003                           wtemp0 007E  
               __end_of_strncmp 03CC                 __initialization 0027            _serialReadPeripheral 0601  
                  __end_of_main 0415                  __CFG_SAFEN$OFF 0000         ??_serialPrintPeripheral 0074  
                ??_initBTSerial 0071                          ??_main 0067            __size_of_getWiFiData 0060  
                        _ANSELA 1F38                          _ANSELB 1F43                          _ANSELC 1F4E  
                        _T0CON0 059E                          _T0CON1 059F                          _RC1REG 0119  
                        _RC2REG 0A19                          _RA4PPS 1F14                          _RC1PPS 1F21  
                        _RB6PPS 1F1E                          _RC4PPS 1F24                          _RC6PPS 1F26  
                        u104_25 001A                          _RC7PPS 1F27                  __CFG_WDTCCS$SC 0000  
                        _SP1BRG 011B                          _SP2BRG 0A1B         setActivePeripheral@peri 0071  
                        _TX1REG 011A                          _TX2REG 0A1A                          _TRISC0 00A0  
                        _TRISA5 0095                          _TRISB5 009D                          _TRISC3 00A3  
                        _TRISC5 00A5                          _TRISC7 00A7                  __CFG_PWRTE$OFF 0000  
           waitForCommand@c_458 0061             waitForCommand@i_450 0064           ?_serialReadPeripheral 0070  
               getGPSData@found 0078                  __CFG_STVREN$ON 0000                   sendSMS@number 0077  
                        _strcmp 03CC            _serialFindPeripheral 0415         __size_of_waitForCommand 016C  
                     ??_sendSMS 0020                       ??_strncmp 0075         __end_of__initialization 002D  
         __end_of_serialPrintBT 046B  __size_of_serialWritePeripheral 0008           __end_of_serialWriteBT 0635  
 __end_of_serialWritePeripheral 062D                  __pcstackCOMMON 0070           ?_serialFindPeripheral 0071  
                    __pbssBANK0 0069                      _getGSMData 019D                      _getGPSData 0341  
          __end_of_initBTSerial 04C7          ??_serialReadPeripheral 0071             _setActivePeripheral 02E8  
        serialPrintPeripheral@i 0075          serialPrintPeripheral@s 0072                      __pmaintext 03F3  
               __CFG_PPS1WAY$ON 0000                      __pintentry 0004             __CFG_RSTOSC$HFINT32 0000  
                       ?_strcmp 0071            ?_setActivePeripheral 0070                   ?_serialReadBT 0070  
        ??_serialFindPeripheral 0073                         __ptext1 0031                         __ptext2 038C  
                       __ptext3 03CC                         __ptext4 05F7                         __ptext5 046B  
                       __ptext6 0214                         __ptext7 0288                         __ptext8 019D  
                       __ptext9 0437  __size_of_serialPrintPeripheral 001A   __end_of_serialPrintPeripheral 0451  
                _waitForCommand 0031                 __CFG_WRTAPP$OFF 0000                 __size_of_strcmp 0027  
         ??_setActivePeripheral 0071                  sendSMS@message 0079                         _sendSMS 0214  
               __CFG_WRTSAF$OFF 0000                         _strncmp 038C            end_of_initialization 002D  
                    _sendSigfox 046B                     ?_getGPSData 0070                     ?_getGSMData 0070  
                ??_serialReadBT 0071                  serialPrintBT@i 0075                  serialPrintBT@s 0072  
                    _timerCount 0004          __end_of_waitForCommand 019D                         strcmp@r 0074  
         __CFG_WDTCPS$WDTCPS_31 0000                  serialWriteBT@c 0071                   ??_getWiFiData 0077  
         __size_of_initBTSerial 0016                __CFG_FEXTOSC$OFF 0000                      _startTimer 04DA  
               ?_waitForCommand 0070             __size_of_getGPSData 004B             __size_of_getGSMData 0077  
                  _initBTSerial 04B1                  __end_of_strcmp 03F3             start_initialization 0027  
           __end_of_getWiFiData 02E8                     ?_sendSigfox 0077                __CFG_LPBOREN$OFF 0000  
         _serialWritePeripheral 0625                     ?_timerCount 0070                        ??_strcmp 0073  
          __end_of_serialReadBT 0601                     __pbssCOMMON 007C          __size_of_serialPrintBT 001A  
                     ___latbits 0001                   __pcstackBANK0 0020          __size_of_serialWriteBT 0008  
                   ?_startTimer 0071   __size_of_serialReadPeripheral 000A             __size_of_sendSigfox 0019  
                   _getWiFiData 0288                        ?_sendSMS 0077                        ?_strncmp 0071  
        serialWritePeripheral@c 0071                    ??_getGPSData 0077                    ??_getGSMData 0077  
           __size_of_timerCount 0021                        _PIE0bits 0716                   _serialPrintBT 0451  
                      _PIR0bits 070C                        _PIR3bits 070F                   _serialWriteBT 062D  
        ?_serialWritePeripheral 0070               __CFG_BBSIZE$BB512 0000                       _timerDone 007C  
   __end_of_setActivePeripheral 0341             __size_of_startTimer 0011                    _RX1DTPPSbits 1ECB  
 __size_of_serialFindPeripheral 0022              __end_of_getGPSData 038C              __end_of_getGSMData 0214  
             startTimer@seconds 0071                 waitForCommand@c 0060                 waitForCommand@i 0062  
               waitForCommand@p 0066           _serialPrintPeripheral 0437                    _RX2DTPPSbits 1ECD  
                ?_serialPrintBT 0072                  ?_serialWriteBT 0070                ??_waitForCommand 007B  
         __size_of_serialReadBT 000A           waitForCommand@command 0040                     getGPSData@c 0079  
         waitForCommand@message 0022                      _T0CON0bits 059E                __size_of_sendSMS 0074  
                      __ptext10 0625                        __ptext11 0341                        __ptext12 04DA  
                      __ptext13 02E8                        __ptext14 0451                        __ptext15 062D  
                      __ptext16 0415                        __ptext17 0601                        __ptext18 04B1  
                  ??_sendSigfox 0079                __size_of_strncmp 0040                   __size_of_main 0022  
                    strncmp@len 0073                   _timerSetpoint 006B                    _serialReadBT 05F7  
          __CFG_WDTCWS$WDTCWS_7 0000                      _RC1STAbits 011D                      _RC2STAbits 0A1D  
                      int$flags 007E                    ??_timerCount 0070                    getWiFiData@c 0079  
            __end_of_sendSigfox 0484          ?_serialPrintPeripheral 0072                      _INTCONbits 000B  
                __pstringtext10 053E                  __pstringtext11 054A                  __pstringtext20 05B1  
                __pstringtext12 0556                  __pstringtext21 05BB                  __pstringtext13 0562  
                __pstringtext30 0635                  __pstringtext22 05C5                  __pstringtext14 056E  
                __pstringtext31 063C                  __pstringtext23 05CF                  __pstringtext15 057A  
                __pstringtext32 0643                  __pstringtext24 05D9                  __pstringtext16 0585  
                __pstringtext33 0648                  __pstringtext25 05E3                  __pstringtext17 0590  
                __pstringtext34 0000                  __pstringtext26 05ED                  __pstringtext18 059B  
                __pstringtext27 060B                  __pstringtext19 05A6                  __pstringtext28 0614  
                __pstringtext29 061D                    ??_startTimer 0073                        intlevel1 0000  
               ??_serialPrintBT 0074              __end_of_timerCount 0025               __CFG_CLKOUTEN$OFF 0000  
               ??_serialWriteBT 0071                       strncmp@s1 0077                       strncmp@s2 0071  
            __end_of_startTimer 04EB                   __pstringtext1 0484                   __pstringtext2 049B  
                 __pstringtext3 04C7                   __pstringtext4 04EB                   __pstringtext5 04FA  
                 __pstringtext6 0509                   __pstringtext7 0517                   __pstringtext8 0524  
                 __pstringtext9 0531                    ?_getWiFiData 0070                     _timerActual 0069  
                      strcmp@s1 0075                        strcmp@s2 0071    __end_of_serialReadPeripheral 060B  
                    _TX1STAbits 011E                      _TX2STAbits 0A1E         ??_serialWritePeripheral 0071  
