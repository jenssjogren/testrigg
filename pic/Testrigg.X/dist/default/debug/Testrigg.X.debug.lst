

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue May 08 14:32:00 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F15344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	stringtext15,global,class=STRCODE,delta=2
    19                           	psect	stringtext16,global,class=STRCODE,delta=2
    20                           	psect	stringtext17,global,class=STRCODE,delta=2
    21                           	psect	stringtext18,global,class=STRCODE,delta=2
    22                           	psect	stringtext19,global,class=STRCODE,delta=2
    23                           	psect	stringtext20,global,class=STRCODE,delta=2
    24                           	psect	stringtext21,global,class=STRCODE,delta=2
    25                           	psect	stringtext22,global,class=STRCODE,delta=2
    26                           	psect	stringtext23,global,class=STRCODE,delta=2
    27                           	psect	stringtext24,global,class=STRCODE,delta=2
    28                           	psect	stringtext25,global,class=STRCODE,delta=2
    29                           	psect	stringtext26,global,class=STRCODE,delta=2
    30                           	psect	stringtext27,global,class=STRCODE,delta=2
    31                           	psect	stringtext28,global,class=STRCODE,delta=2
    32                           	psect	stringtext29,global,class=STRCODE,delta=2
    33                           	psect	stringtext30,global,class=STRCODE,delta=2
    34                           	psect	stringtext31,global,class=STRCODE,delta=2
    35                           	psect	stringtext32,global,class=STRCODE,delta=2
    36                           	psect	stringtext33,global,class=STRCODE,delta=2
    37                           	psect	stringtext34,global,class=STRCODE,delta=2
    38                           	psect	cinit,global,class=CODE,merge=1,delta=2
    39                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    40                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    41                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    43                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    44                           	psect	text1,local,class=CODE,merge=1,delta=2
    45                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text4,local,class=CODE,merge=1,delta=2
    48                           	psect	text5,local,class=CODE,merge=1,delta=2
    49                           	psect	text6,local,class=CODE,merge=1,delta=2
    50                           	psect	text7,local,class=CODE,merge=1,delta=2
    51                           	psect	text8,local,class=CODE,merge=1,delta=2
    52                           	psect	text9,local,class=CODE,merge=1,delta=2
    53                           	psect	text10,local,class=CODE,merge=1,delta=2
    54                           	psect	text11,local,class=CODE,merge=1,delta=2
    55                           	psect	text12,local,class=CODE,merge=1,delta=2
    56                           	psect	text13,local,class=CODE,merge=1,delta=2
    57                           	psect	text14,local,class=CODE,merge=1,delta=2
    58                           	psect	text15,local,class=CODE,merge=1,delta=2
    59                           	psect	text16,local,class=CODE,merge=1,delta=2
    60                           	psect	text17,local,class=CODE,merge=1,delta=2
    61                           	psect	text18,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 1.44
    66                           ; Generated 14/09/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F15344 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  020C                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  020F                     	;# 
   163  020F                     	;# 
   164  0210                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  028C                     	;# 
   169  028C                     	;# 
   170  028D                     	;# 
   171  028D                     	;# 
   172  028E                     	;# 
   173  028F                     	;# 
   174  0290                     	;# 
   175  0291                     	;# 
   176  030C                     	;# 
   177  030C                     	;# 
   178  030D                     	;# 
   179  030E                     	;# 
   180  030F                     	;# 
   181  0310                     	;# 
   182  0310                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0314                     	;# 
   187  0315                     	;# 
   188  0316                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  038C                     	;# 
   196  038D                     	;# 
   197  038E                     	;# 
   198  058C                     	;# 
   199  058C                     	;# 
   200  058D                     	;# 
   201  058E                     	;# 
   202  058F                     	;# 
   203  058F                     	;# 
   204  0590                     	;# 
   205  0591                     	;# 
   206  0592                     	;# 
   207  0593                     	;# 
   208  059C                     	;# 
   209  059C                     	;# 
   210  059D                     	;# 
   211  059D                     	;# 
   212  059E                     	;# 
   213  059F                     	;# 
   214  060C                     	;# 
   215  060D                     	;# 
   216  060E                     	;# 
   217  060F                     	;# 
   218  0610                     	;# 
   219  0611                     	;# 
   220  0612                     	;# 
   221  0613                     	;# 
   222  0614                     	;# 
   223  070C                     	;# 
   224  070D                     	;# 
   225  070E                     	;# 
   226  070F                     	;# 
   227  0710                     	;# 
   228  0711                     	;# 
   229  0712                     	;# 
   230  0713                     	;# 
   231  0716                     	;# 
   232  0717                     	;# 
   233  0718                     	;# 
   234  0719                     	;# 
   235  071A                     	;# 
   236  071B                     	;# 
   237  071C                     	;# 
   238  071D                     	;# 
   239  0796                     	;# 
   240  0797                     	;# 
   241  0798                     	;# 
   242  0799                     	;# 
   243  079A                     	;# 
   244  079B                     	;# 
   245  080C                     	;# 
   246  080D                     	;# 
   247  080E                     	;# 
   248  080F                     	;# 
   249  0810                     	;# 
   250  0811                     	;# 
   251  0812                     	;# 
   252  0813                     	;# 
   253  0814                     	;# 
   254  081A                     	;# 
   255  081A                     	;# 
   256  081B                     	;# 
   257  081C                     	;# 
   258  081C                     	;# 
   259  081D                     	;# 
   260  081E                     	;# 
   261  081F                     	;# 
   262  088C                     	;# 
   263  088D                     	;# 
   264  088E                     	;# 
   265  088F                     	;# 
   266  0890                     	;# 
   267  0891                     	;# 
   268  0892                     	;# 
   269  0893                     	;# 
   270  0895                     	;# 
   271  0896                     	;# 
   272  090C                     	;# 
   273  090E                     	;# 
   274  090F                     	;# 
   275  091F                     	;# 
   276  098F                     	;# 
   277  098F                     	;# 
   278  0990                     	;# 
   279  0991                     	;# 
   280  0992                     	;# 
   281  0993                     	;# 
   282  0994                     	;# 
   283  0995                     	;# 
   284  0996                     	;# 
   285  0997                     	;# 
   286  0A19                     	;# 
   287  0A19                     	;# 
   288  0A1A                     	;# 
   289  0A1A                     	;# 
   290  0A1B                     	;# 
   291  0A1B                     	;# 
   292  0A1B                     	;# 
   293  0A1C                     	;# 
   294  0A1C                     	;# 
   295  0A1D                     	;# 
   296  0A1D                     	;# 
   297  0A1E                     	;# 
   298  0A1E                     	;# 
   299  0A1F                     	;# 
   300  0A1F                     	;# 
   301  0A1F                     	;# 
   302  1E0F                     	;# 
   303  1E10                     	;# 
   304  1E11                     	;# 
   305  1E12                     	;# 
   306  1E13                     	;# 
   307  1E14                     	;# 
   308  1E15                     	;# 
   309  1E16                     	;# 
   310  1E17                     	;# 
   311  1E18                     	;# 
   312  1E19                     	;# 
   313  1E1A                     	;# 
   314  1E1B                     	;# 
   315  1E1C                     	;# 
   316  1E1D                     	;# 
   317  1E1E                     	;# 
   318  1E1F                     	;# 
   319  1E20                     	;# 
   320  1E21                     	;# 
   321  1E22                     	;# 
   322  1E23                     	;# 
   323  1E24                     	;# 
   324  1E25                     	;# 
   325  1E26                     	;# 
   326  1E27                     	;# 
   327  1E28                     	;# 
   328  1E29                     	;# 
   329  1E2A                     	;# 
   330  1E2B                     	;# 
   331  1E2C                     	;# 
   332  1E2D                     	;# 
   333  1E2E                     	;# 
   334  1E2F                     	;# 
   335  1E30                     	;# 
   336  1E31                     	;# 
   337  1E32                     	;# 
   338  1E33                     	;# 
   339  1E34                     	;# 
   340  1E35                     	;# 
   341  1E36                     	;# 
   342  1E37                     	;# 
   343  1E8F                     	;# 
   344  1E90                     	;# 
   345  1E91                     	;# 
   346  1E92                     	;# 
   347  1E93                     	;# 
   348  1E9C                     	;# 
   349  1EA1                     	;# 
   350  1EA2                     	;# 
   351  1EB1                     	;# 
   352  1EBB                     	;# 
   353  1EBC                     	;# 
   354  1EBD                     	;# 
   355  1EBE                     	;# 
   356  1EC3                     	;# 
   357  1EC5                     	;# 
   358  1EC6                     	;# 
   359  1EC7                     	;# 
   360  1ECB                     	;# 
   361  1ECC                     	;# 
   362  1ECD                     	;# 
   363  1ECE                     	;# 
   364  1F10                     	;# 
   365  1F11                     	;# 
   366  1F12                     	;# 
   367  1F13                     	;# 
   368  1F14                     	;# 
   369  1F15                     	;# 
   370  1F1C                     	;# 
   371  1F1D                     	;# 
   372  1F1E                     	;# 
   373  1F1F                     	;# 
   374  1F20                     	;# 
   375  1F21                     	;# 
   376  1F22                     	;# 
   377  1F23                     	;# 
   378  1F24                     	;# 
   379  1F25                     	;# 
   380  1F26                     	;# 
   381  1F27                     	;# 
   382  1F38                     	;# 
   383  1F39                     	;# 
   384  1F3A                     	;# 
   385  1F3B                     	;# 
   386  1F3C                     	;# 
   387  1F3D                     	;# 
   388  1F3E                     	;# 
   389  1F3F                     	;# 
   390  1F43                     	;# 
   391  1F44                     	;# 
   392  1F45                     	;# 
   393  1F46                     	;# 
   394  1F47                     	;# 
   395  1F48                     	;# 
   396  1F49                     	;# 
   397  1F4A                     	;# 
   398  1F4E                     	;# 
   399  1F4F                     	;# 
   400  1F50                     	;# 
   401  1F51                     	;# 
   402  1F52                     	;# 
   403  1F53                     	;# 
   404  1F54                     	;# 
   405  1F55                     	;# 
   406  1FE4                     	;# 
   407  1FE5                     	;# 
   408  1FE6                     	;# 
   409  1FE7                     	;# 
   410  1FE8                     	;# 
   411  1FE8                     	;# 
   412  1FE9                     	;# 
   413  1FEA                     	;# 
   414  1FEA                     	;# 
   415  1FEB                     	;# 
   416  1FED                     	;# 
   417  1FEE                     	;# 
   418  1FEF                     	;# 
   419  000B                     _INTCONbits	set	11
   420  00A5                     _TRISC5	set	165
   421  0095                     _TRISA5	set	149
   422  00A0                     _TRISC0	set	160
   423  00A3                     _TRISC3	set	163
   424  009D                     _TRISB5	set	157
   425  00D7                     _LATC7	set	215
   426  00A7                     _TRISC7	set	167
   427  011B                     _SP1BRG	set	283
   428  011E                     _TX1STAbits	set	286
   429  0119                     _RC1REG	set	281
   430  011D                     _RC1STAbits	set	285
   431  011A                     _TX1REG	set	282
   432  059F                     _T0CON1	set	1439
   433  059E                     _T0CON0	set	1438
   434  059E                     _T0CON0bits	set	1438
   435  0716                     _PIE0bits	set	1814
   436  070C                     _PIR0bits	set	1804
   437  070F                     _PIR3bits	set	1807
   438  0A1B                     _SP2BRG	set	2587
   439  0A19                     _RC2REG	set	2585
   440  0A1A                     _TX2REG	set	2586
   441  0A1D                     _RC2STAbits	set	2589
   442  0A1E                     _TX2STAbits	set	2590
   443  1ECB                     _RX1DTPPSbits	set	7883
   444  1ECD                     _RX2DTPPSbits	set	7885
   445  1F24                     _RC4PPS	set	7972
   446  1F14                     _RA4PPS	set	7956
   447  1F21                     _RC1PPS	set	7969
   448  1F26                     _RC6PPS	set	7974
   449  1F1E                     _RB6PPS	set	7966
   450  1F27                     _RC7PPS	set	7975
   451  1F4E                     _ANSELC	set	8014
   452  1F43                     _ANSELB	set	8003
   453  1F38                     _ANSELA	set	7992
   454                           
   455                           	psect	stringtext1
   456  043E                     __pstringtext1:	
   457  043E                     STR_38:	
   458  043E  3434               	retlw	52	;'4'
   459  043F  3438               	retlw	56	;'8'
   460  0440  3436               	retlw	54	;'6'
   461  0441  3435               	retlw	53	;'5'
   462  0442  3436               	retlw	54	;'6'
   463  0443  3463               	retlw	99	;'c'
   464  0444  3436               	retlw	54	;'6'
   465  0445  3463               	retlw	99	;'c'
   466  0446  3436               	retlw	54	;'6'
   467  0447  3466               	retlw	102	;'f'
   468  0448  3432               	retlw	50	;'2'
   469  0449  3430               	retlw	48	;'0'
   470  044A  3435               	retlw	53	;'5'
   471  044B  3437               	retlw	55	;'7'
   472  044C  3436               	retlw	54	;'6'
   473  044D  3466               	retlw	102	;'f'
   474  044E  3437               	retlw	55	;'7'
   475  044F  3432               	retlw	50	;'2'
   476  0450  3436               	retlw	54	;'6'
   477  0451  3463               	retlw	99	;'c'
   478  0452  3436               	retlw	54	;'6'
   479  0453  3434               	retlw	52	;'4'
   480  0454  3400               	retlw	0
   481                           
   482                           	psect	stringtext2
   483  0455                     __pstringtext2:	
   484  0455                     STR_28:	
   485  0455  3447               	retlw	71	;'G'
   486  0456  3445               	retlw	69	;'E'
   487  0457  3454               	retlw	84	;'T'
   488  0458  345F               	retlw	95	;'_'
   489  0459  3441               	retlw	65	;'A'
   490  045A  344C               	retlw	76	;'L'
   491  045B  344C               	retlw	76	;'L'
   492  045C  345F               	retlw	95	;'_'
   493  045D  3453               	retlw	83	;'S'
   494  045E  3445               	retlw	69	;'E'
   495  045F  344E               	retlw	78	;'N'
   496  0460  3444               	retlw	68	;'D'
   497  0461  345F               	retlw	95	;'_'
   498  0462  3453               	retlw	83	;'S'
   499  0463  3449               	retlw	73	;'I'
   500  0464  3447               	retlw	71	;'G'
   501  0465  3446               	retlw	70	;'F'
   502  0466  344F               	retlw	79	;'O'
   503  0467  3458               	retlw	88	;'X'
   504  0468  340D               	retlw	13
   505  0469  340A               	retlw	10
   506  046A  3400               	retlw	0
   507                           
   508                           	psect	stringtext3
   509  0481                     __pstringtext3:	
   510  0481                     STR_2:	
   511  0481  3441               	retlw	65	;'A'
   512  0482  3454               	retlw	84	;'T'
   513  0483  342B               	retlw	43	;'+'
   514  0484  3443               	retlw	67	;'C'
   515  0485  3457               	retlw	87	;'W'
   516  0486  344C               	retlw	76	;'L'
   517  0487  3441               	retlw	65	;'A'
   518  0488  3450               	retlw	80	;'P'
   519  0489  344F               	retlw	79	;'O'
   520  048A  3450               	retlw	80	;'P'
   521  048B  3454               	retlw	84	;'T'
   522  048C  343D               	retlw	61	;'='
   523  048D  3431               	retlw	49	;'1'
   524  048E  342C               	retlw	44	;','
   525  048F  3431               	retlw	49	;'1'
   526  0490  3432               	retlw	50	;'2'
   527  0491  340D               	retlw	13
   528  0492  340A               	retlw	10
   529  0493  3400               	retlw	0
   530                           
   531                           	psect	stringtext4
   532  04A5                     __pstringtext4:	
   533  04A5                     STR_29:	
   534  04A5  3430               	retlw	48	;'0'
   535  04A6  3430               	retlw	48	;'0'
   536  04A7  3430               	retlw	48	;'0'
   537  04A8  3430               	retlw	48	;'0'
   538  04A9  3430               	retlw	48	;'0'
   539  04AA  3430               	retlw	48	;'0'
   540  04AB  3430               	retlw	48	;'0'
   541  04AC  3430               	retlw	48	;'0'
   542  04AD  3430               	retlw	48	;'0'
   543  04AE  3430               	retlw	48	;'0'
   544  04AF  3430               	retlw	48	;'0'
   545  04B0  3430               	retlw	48	;'0'
   546  04B1  340D               	retlw	13
   547  04B2  340A               	retlw	10
   548  04B3  3400               	retlw	0
   549                           
   550                           	psect	stringtext5
   551  04B4                     __pstringtext5:	
   552  04B4                     STR_13:	
   553  04B4  3453               	retlw	83	;'S'
   554  04B5  3449               	retlw	73	;'I'
   555  04B6  3447               	retlw	71	;'G'
   556  04B7  3446               	retlw	70	;'F'
   557  04B8  344F               	retlw	79	;'O'
   558  04B9  3458               	retlw	88	;'X'
   559  04BA  345F               	retlw	95	;'_'
   560  04BB  3453               	retlw	83	;'S'
   561  04BC  3454               	retlw	84	;'T'
   562  04BD  3441               	retlw	65	;'A'
   563  04BE  3452               	retlw	82	;'R'
   564  04BF  3454               	retlw	84	;'T'
   565  04C0  340D               	retlw	13
   566  04C1  340A               	retlw	10
   567  04C2  3400               	retlw	0
   568                           
   569                           	psect	stringtext6
   570  04C3                     __pstringtext6:	
   571  04C3                     STR_23:	
   572  04C3  344D               	retlw	77	;'M'
   573  04C4  3445               	retlw	69	;'E'
   574  04C5  3453               	retlw	83	;'S'
   575  04C6  3453               	retlw	83	;'S'
   576  04C7  3441               	retlw	65	;'A'
   577  04C8  3447               	retlw	71	;'G'
   578  04C9  3445               	retlw	69	;'E'
   579  04CA  345F               	retlw	95	;'_'
   580  04CB  3445               	retlw	69	;'E'
   581  04CC  344E               	retlw	78	;'N'
   582  04CD  3444               	retlw	68	;'D'
   583  04CE  340D               	retlw	13
   584  04CF  340A               	retlw	10
   585  04D0  3400               	retlw	0
   586                           
   587                           	psect	stringtext7
   588  04D1                     __pstringtext7:	
   589  04D1                     STR_15:	
   590  04D1  3453               	retlw	83	;'S'
   591  04D2  3449               	retlw	73	;'I'
   592  04D3  3447               	retlw	71	;'G'
   593  04D4  3446               	retlw	70	;'F'
   594  04D5  344F               	retlw	79	;'O'
   595  04D6  3458               	retlw	88	;'X'
   596  04D7  345F               	retlw	95	;'_'
   597  04D8  3445               	retlw	69	;'E'
   598  04D9  344E               	retlw	78	;'N'
   599  04DA  3444               	retlw	68	;'D'
   600  04DB  340D               	retlw	13
   601  04DC  340A               	retlw	10
   602  04DD  3400               	retlw	0
   603                           
   604                           	psect	stringtext8
   605  04DE                     __pstringtext8:	
   606  04DE                     STR_1:	
   607  04DE  3457               	retlw	87	;'W'
   608  04DF  3449               	retlw	73	;'I'
   609  04E0  3446               	retlw	70	;'F'
   610  04E1  3449               	retlw	73	;'I'
   611  04E2  345F               	retlw	95	;'_'
   612  04E3  3453               	retlw	83	;'S'
   613  04E4  3454               	retlw	84	;'T'
   614  04E5  3441               	retlw	65	;'A'
   615  04E6  3452               	retlw	82	;'R'
   616  04E7  3454               	retlw	84	;'T'
   617  04E8  340D               	retlw	13
   618  04E9  340A               	retlw	10
   619  04EA  3400               	retlw	0
   620                           
   621                           	psect	stringtext9
   622  04EB                     __pstringtext9:	
   623  04EB                     STR_33:	
   624  04EB  3453               	retlw	83	;'S'
   625  04EC  3445               	retlw	69	;'E'
   626  04ED  344E               	retlw	78	;'N'
   627  04EE  3444               	retlw	68	;'D'
   628  04EF  345F               	retlw	95	;'_'
   629  04F0  3453               	retlw	83	;'S'
   630  04F1  3449               	retlw	73	;'I'
   631  04F2  3447               	retlw	71	;'G'
   632  04F3  3446               	retlw	70	;'F'
   633  04F4  344F               	retlw	79	;'O'
   634  04F5  3458               	retlw	88	;'X'
   635  04F6  343A               	retlw	58	;':'
   636  04F7  3400               	retlw	0
   637                           
   638                           	psect	stringtext10
   639  04F8                     __pstringtext10:	
   640  04F8                     STR_18:	
   641  04F8  3441               	retlw	65	;'A'
   642  04F9  3454               	retlw	84	;'T'
   643  04FA  342B               	retlw	43	;'+'
   644  04FB  3443               	retlw	67	;'C'
   645  04FC  344D               	retlw	77	;'M'
   646  04FD  3447               	retlw	71	;'G'
   647  04FE  3446               	retlw	70	;'F'
   648  04FF  343D               	retlw	61	;'='
   649  0500  3431               	retlw	49	;'1'
   650  0501  340D               	retlw	13
   651  0502  340A               	retlw	10
   652  0503  3400               	retlw	0
   653                           
   654                           	psect	stringtext11
   655  0504                     __pstringtext11:	
   656  0504                     STR_6:	
   657  0504  3441               	retlw	65	;'A'
   658  0505  3454               	retlw	84	;'T'
   659  0506  342B               	retlw	43	;'+'
   660  0507  3443               	retlw	67	;'C'
   661  0508  3452               	retlw	82	;'R'
   662  0509  3445               	retlw	69	;'E'
   663  050A  3447               	retlw	71	;'G'
   664  050B  343D               	retlw	61	;'='
   665  050C  3432               	retlw	50	;'2'
   666  050D  340D               	retlw	13
   667  050E  340A               	retlw	10
   668  050F  3400               	retlw	0
   669                           
   670                           	psect	stringtext12
   671  0510                     __pstringtext12:	
   672  0510                     STR_5:	
   673  0510  3447               	retlw	71	;'G'
   674  0511  3453               	retlw	83	;'S'
   675  0512  344D               	retlw	77	;'M'
   676  0513  345F               	retlw	95	;'_'
   677  0514  3453               	retlw	83	;'S'
   678  0515  3454               	retlw	84	;'T'
   679  0516  3441               	retlw	65	;'A'
   680  0517  3452               	retlw	82	;'R'
   681  0518  3454               	retlw	84	;'T'
   682  0519  340D               	retlw	13
   683  051A  340A               	retlw	10
   684  051B  3400               	retlw	0
   685                           
   686                           	psect	stringtext13
   687  051C                     __pstringtext13:	
   688  051C                     STR_10:	
   689  051C  3447               	retlw	71	;'G'
   690  051D  3450               	retlw	80	;'P'
   691  051E  3453               	retlw	83	;'S'
   692  051F  345F               	retlw	95	;'_'
   693  0520  3453               	retlw	83	;'S'
   694  0521  3454               	retlw	84	;'T'
   695  0522  3441               	retlw	65	;'A'
   696  0523  3452               	retlw	82	;'R'
   697  0524  3454               	retlw	84	;'T'
   698  0525  340D               	retlw	13
   699  0526  340A               	retlw	10
   700  0527  3400               	retlw	0
   701                           
   702                           	psect	stringtext14
   703  0528                     __pstringtext14:	
   704  0528                     STR_36:	
   705  0528  3448               	retlw	72	;'H'
   706  0529  3465               	retlw	101	;'e'
   707  052A  346C               	retlw	108	;'l'
   708  052B  346C               	retlw	108	;'l'
   709  052C  346F               	retlw	111	;'o'
   710  052D  3420               	retlw	32	;' '
   711  052E  3457               	retlw	87	;'W'
   712  052F  346F               	retlw	111	;'o'
   713  0530  3472               	retlw	114	;'r'
   714  0531  346C               	retlw	108	;'l'
   715  0532  3464               	retlw	100	;'d'
   716  0533  3400               	retlw	0
   717                           
   718                           	psect	stringtext15
   719  0534                     __pstringtext15:	
   720  0534                     STR_8:	
   721  0534  3441               	retlw	65	;'A'
   722  0535  3454               	retlw	84	;'T'
   723  0536  342B               	retlw	43	;'+'
   724  0537  3443               	retlw	67	;'C'
   725  0538  3452               	retlw	82	;'R'
   726  0539  3445               	retlw	69	;'E'
   727  053A  3447               	retlw	71	;'G'
   728  053B  343F               	retlw	63	;'?'
   729  053C  340D               	retlw	13
   730  053D  340A               	retlw	10
   731  053E  3400               	retlw	0
   732                           
   733                           	psect	stringtext16
   734  053F                     __pstringtext16:	
   735  053F                     STR_4:	
   736  053F  3457               	retlw	87	;'W'
   737  0540  3449               	retlw	73	;'I'
   738  0541  3446               	retlw	70	;'F'
   739  0542  3449               	retlw	73	;'I'
   740  0543  345F               	retlw	95	;'_'
   741  0544  3445               	retlw	69	;'E'
   742  0545  344E               	retlw	78	;'N'
   743  0546  3444               	retlw	68	;'D'
   744  0547  340D               	retlw	13
   745  0548  340A               	retlw	10
   746  0549  3400               	retlw	0
   747                           
   748                           	psect	stringtext17
   749  054A                     __pstringtext17:	
   750  054A                     STR_26:	
   751  054A  3447               	retlw	71	;'G'
   752  054B  3445               	retlw	69	;'E'
   753  054C  3454               	retlw	84	;'T'
   754  054D  345F               	retlw	95	;'_'
   755  054E  3457               	retlw	87	;'W'
   756  054F  3449               	retlw	73	;'I'
   757  0550  3446               	retlw	70	;'F'
   758  0551  3449               	retlw	73	;'I'
   759  0552  340D               	retlw	13
   760  0553  340A               	retlw	10
   761  0554  3400               	retlw	0
   762                           
   763                           	psect	stringtext18
   764  0555                     __pstringtext18:	
   765  0555                     STR_3:	
   766  0555  3441               	retlw	65	;'A'
   767  0556  3454               	retlw	84	;'T'
   768  0557  342B               	retlw	43	;'+'
   769  0558  3443               	retlw	67	;'C'
   770  0559  3457               	retlw	87	;'W'
   771  055A  344C               	retlw	76	;'L'
   772  055B  3441               	retlw	65	;'A'
   773  055C  3450               	retlw	80	;'P'
   774  055D  340D               	retlw	13
   775  055E  340A               	retlw	10
   776  055F  3400               	retlw	0
   777                           
   778                           	psect	stringtext19
   779  0560                     __pstringtext19:	
   780  0560                     STR_34:	
   781  0560  3453               	retlw	83	;'S'
   782  0561  3445               	retlw	69	;'E'
   783  0562  344E               	retlw	78	;'N'
   784  0563  3444               	retlw	68	;'D'
   785  0564  345F               	retlw	95	;'_'
   786  0565  3453               	retlw	83	;'S'
   787  0566  344D               	retlw	77	;'M'
   788  0567  3453               	retlw	83	;'S'
   789  0568  340D               	retlw	13
   790  0569  340A               	retlw	10
   791  056A  3400               	retlw	0
   792                           
   793                           	psect	stringtext20
   794  056B                     __pstringtext20:	
   795  056B                     STR_9:	
   796  056B  3447               	retlw	71	;'G'
   797  056C  3453               	retlw	83	;'S'
   798  056D  344D               	retlw	77	;'M'
   799  056E  345F               	retlw	95	;'_'
   800  056F  3445               	retlw	69	;'E'
   801  0570  344E               	retlw	78	;'N'
   802  0571  3444               	retlw	68	;'D'
   803  0572  340D               	retlw	13
   804  0573  340A               	retlw	10
   805  0574  3400               	retlw	0
   806                           
   807                           	psect	stringtext21
   808  0575                     __pstringtext21:	
   809  0575                     STR_12:	
   810  0575  3447               	retlw	71	;'G'
   811  0576  3450               	retlw	80	;'P'
   812  0577  3453               	retlw	83	;'S'
   813  0578  345F               	retlw	95	;'_'
   814  0579  3445               	retlw	69	;'E'
   815  057A  344E               	retlw	78	;'N'
   816  057B  3444               	retlw	68	;'D'
   817  057C  340D               	retlw	13
   818  057D  340A               	retlw	10
   819  057E  3400               	retlw	0
   820                           
   821                           	psect	stringtext22
   822  057F                     __pstringtext22:	
   823  057F                     STR_40:	
   824  057F  3454               	retlw	84	;'T'
   825  0580  3452               	retlw	82	;'R'
   826  0581  3449               	retlw	73	;'I'
   827  0582  3447               	retlw	71	;'G'
   828  0583  344F               	retlw	79	;'O'
   829  0584  3446               	retlw	70	;'F'
   830  0585  3446               	retlw	70	;'F'
   831  0586  340D               	retlw	13
   832  0587  340A               	retlw	10
   833  0588  3400               	retlw	0
   834                           
   835                           	psect	stringtext23
   836  0589                     __pstringtext23:	
   837  0589                     STR_31:	
   838  0589  3447               	retlw	71	;'G'
   839  058A  3445               	retlw	69	;'E'
   840  058B  3454               	retlw	84	;'T'
   841  058C  345F               	retlw	95	;'_'
   842  058D  3441               	retlw	65	;'A'
   843  058E  344C               	retlw	76	;'L'
   844  058F  344C               	retlw	76	;'L'
   845  0590  340D               	retlw	13
   846  0591  340A               	retlw	10
   847  0592  3400               	retlw	0
   848                           
   849                           	psect	stringtext24
   850  0593                     __pstringtext24:	
   851  0593                     STR_24:	
   852  0593  3447               	retlw	71	;'G'
   853  0594  3445               	retlw	69	;'E'
   854  0595  3454               	retlw	84	;'T'
   855  0596  345F               	retlw	95	;'_'
   856  0597  3447               	retlw	71	;'G'
   857  0598  3453               	retlw	83	;'S'
   858  0599  344D               	retlw	77	;'M'
   859  059A  340D               	retlw	13
   860  059B  340A               	retlw	10
   861  059C  3400               	retlw	0
   862                           
   863                           	psect	stringtext25
   864  059D                     __pstringtext25:	
   865  059D                     STR_22:	
   866  059D  3447               	retlw	71	;'G'
   867  059E  3445               	retlw	69	;'E'
   868  059F  3454               	retlw	84	;'T'
   869  05A0  345F               	retlw	95	;'_'
   870  05A1  3447               	retlw	71	;'G'
   871  05A2  3450               	retlw	80	;'P'
   872  05A3  3453               	retlw	83	;'S'
   873  05A4  340D               	retlw	13
   874  05A5  340A               	retlw	10
   875  05A6  3400               	retlw	0
   876                           
   877                           	psect	stringtext26
   878  05A7                     __pstringtext26:	
   879  05A7                     STR_19:	
   880  05A7  3441               	retlw	65	;'A'
   881  05A8  3454               	retlw	84	;'T'
   882  05A9  342B               	retlw	43	;'+'
   883  05AA  3443               	retlw	67	;'C'
   884  05AB  344D               	retlw	77	;'M'
   885  05AC  3447               	retlw	71	;'G'
   886  05AD  3453               	retlw	83	;'S'
   887  05AE  343D               	retlw	61	;'='
   888  05AF  3422               	retlw	34	;'"'
   889  05B0  3400               	retlw	0
   890                           
   891                           	psect	stringtext27
   892  05C5                     __pstringtext27:	
   893  05C5                     STR_39:	
   894  05C5  3454               	retlw	84	;'T'
   895  05C6  3452               	retlw	82	;'R'
   896  05C7  3449               	retlw	73	;'I'
   897  05C8  3447               	retlw	71	;'G'
   898  05C9  344F               	retlw	79	;'O'
   899  05CA  344E               	retlw	78	;'N'
   900  05CB  340D               	retlw	13
   901  05CC  340A               	retlw	10
   902  05CD  3400               	retlw	0
   903                           
   904                           	psect	stringtext28
   905  05CE                     __pstringtext28:	
   906  05CE                     STR_7:	
   907  05CE  3441               	retlw	65	;'A'
   908  05CF  3454               	retlw	84	;'T'
   909  05D0  342B               	retlw	43	;'+'
   910  05D1  3443               	retlw	67	;'C'
   911  05D2  3453               	retlw	83	;'S'
   912  05D3  3451               	retlw	81	;'Q'
   913  05D4  340D               	retlw	13
   914  05D5  340A               	retlw	10
   915  05D6  3400               	retlw	0
   916                           
   917                           	psect	stringtext29
   918  05D7                     __pstringtext29:	
   919  05D7                     STR_11:	
   920  05D7  3424               	retlw	36	;'$'
   921  05D8  3447               	retlw	71	;'G'
   922  05D9  3450               	retlw	80	;'P'
   923  05DA  3447               	retlw	71	;'G'
   924  05DB  3447               	retlw	71	;'G'
   925  05DC  3441               	retlw	65	;'A'
   926  05DD  342C               	retlw	44	;','
   927  05DE  3400               	retlw	0
   928                           
   929                           	psect	stringtext30
   930  05EF                     __pstringtext30:	
   931  05EF                     STR_16:	
   932  05EF  3441               	retlw	65	;'A'
   933  05F0  3454               	retlw	84	;'T'
   934  05F1  3424               	retlw	36	;'$'
   935  05F2  3453               	retlw	83	;'S'
   936  05F3  3446               	retlw	70	;'F'
   937  05F4  343D               	retlw	61	;'='
   938  05F5  3400               	retlw	0
   939                           
   940                           	psect	stringtext31
   941  05F6                     __pstringtext31:	
   942  05F6                     STR_35:	
   943  05F6  346E               	retlw	110	;'n'
   944  05F7  3475               	retlw	117	;'u'
   945  05F8  346D               	retlw	109	;'m'
   946  05F9  346D               	retlw	109	;'m'
   947  05FA  3465               	retlw	101	;'e'
   948  05FB  3472               	retlw	114	;'r'
   949  05FC  3400               	retlw	0
   950                           
   951                           	psect	stringtext32
   952  05FD                     __pstringtext32:	
   953  05FD                     STR_14:	
   954  05FD  3441               	retlw	65	;'A'
   955  05FE  3454               	retlw	84	;'T'
   956  05FF  340D               	retlw	13
   957  0600  340A               	retlw	10
   958  0601  3400               	retlw	0
   959                           
   960                           	psect	stringtext33
   961  0602                     __pstringtext33:	
   962  0602                     STR_20:	
   963  0602  3422               	retlw	34	;'"'
   964  0603  340D               	retlw	13
   965  0604  340A               	retlw	10
   966  0605  3400               	retlw	0
   967                           
   968                           	psect	stringtext34
   969  0000                     __pstringtext34:	
   970  0603                     
   971                           ; #config settings
   972  0000                     
   973                           	psect	cinit
   974  0027                     start_initialization:	
   975  0027                     __initialization:	
   976                           
   977                           ; Clear objects allocated to COMMON
   978  0027  01FC               	clrf	__pbssCOMMON& (0+127)
   979                           
   980                           ; Clear objects allocated to BANK0
   981  0028  0140               	movlb	0	; select bank0
   982  0029  01E9               	clrf	__pbssBANK0& (0+127)
   983  002A  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   984  002B  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   985  002C  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   986  002D                     end_of_initialization:	
   987                           ;End of C runtime variable initialization code
   988                           
   989  002D                     __end_of__initialization:	
   990  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   991  002E  0140               	movlb	0
   992  002F  3183  2BAD         	ljmp	_main	;jump to C main() function
   993                           
   994                           	psect	bssCOMMON
   995  007C                     __pbssCOMMON:	
   996  007C                     _timerDone:	
   997  007C                     	ds	1
   998                           
   999                           	psect	bssBANK0
  1000  0069                     __pbssBANK0:	
  1001  0069                     _timerActual:	
  1002  0069                     	ds	2
  1003  006B                     _timerSetpoint:	
  1004  006B                     	ds	2
  1005                           
  1006                           	psect	cstackCOMMON
  1007  0070                     __pcstackCOMMON:	
  1008  0070                     ?_initBTSerial:	
  1009  0070                     ?_setActivePeripheral:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_waitForCommand:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_main:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?_serialWritePeripheral:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_serialReadPeripheral:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_serialWriteBT:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_serialReadBT:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?_timerCount:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0070                     ??_timerCount:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     ?_getWiFiData:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ?_getGSMData:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     ?_getGPSData:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x0
  1047  0070                     	ds	1
  1048  0071                     ??_initBTSerial:	
  1049  0071                     ??_setActivePeripheral:	
  1050                           ; 1 bytes @ 0x1
  1051                           
  1052  0071                     ??_serialWritePeripheral:	
  1053                           ; 1 bytes @ 0x1
  1054                           
  1055  0071                     ??_serialReadPeripheral:	
  1056                           ; 1 bytes @ 0x1
  1057                           
  1058  0071                     ?_serialFindPeripheral:	
  1059                           ; 1 bytes @ 0x1
  1060                           
  1061  0071                     ??_serialWriteBT:	
  1062                           ; 1 bytes @ 0x1
  1063                           
  1064  0071                     ??_serialReadBT:	
  1065                           ; 1 bytes @ 0x1
  1066                           
  1067  0071                     ?_startTimer:	
  1068                           ; 1 bytes @ 0x1
  1069                           
  1070  0071                     ?_strcmp:	
  1071                           ; 1 bytes @ 0x1
  1072                           
  1073  0071                     ?_strncmp:	
  1074                           ; 2 bytes @ 0x1
  1075                           
  1076  0071                     serialWritePeripheral@c:	
  1077                           ; 2 bytes @ 0x1
  1078                           
  1079  0071                     setActivePeripheral@peri:	
  1080                           ; 1 bytes @ 0x1
  1081                           
  1082  0071                     serialWriteBT@c:	
  1083                           ; 1 bytes @ 0x1
  1084                           
  1085  0071                     serialFindPeripheral@s:	
  1086                           ; 1 bytes @ 0x1
  1087                           
  1088  0071                     startTimer@seconds:	
  1089                           ; 2 bytes @ 0x1
  1090                           
  1091  0071                     strcmp@s2:	
  1092                           ; 2 bytes @ 0x1
  1093                           
  1094  0071                     strncmp@s2:	
  1095                           ; 2 bytes @ 0x1
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x1
  1099  0071                     	ds	1
  1100  0072                     ?_serialPrintPeripheral:	
  1101  0072                     ?_serialPrintBT:	
  1102                           ; 1 bytes @ 0x2
  1103                           
  1104  0072                     serialPrintPeripheral@s:	
  1105                           ; 1 bytes @ 0x2
  1106                           
  1107  0072                     serialPrintBT@s:	
  1108                           ; 2 bytes @ 0x2
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x2
  1112  0072                     	ds	1
  1113  0073                     ??_strcmp:	
  1114  0073                     ??_serialFindPeripheral:	
  1115                           ; 1 bytes @ 0x3
  1116                           
  1117  0073                     ??_startTimer:	
  1118                           ; 1 bytes @ 0x3
  1119                           
  1120  0073                     strncmp@len:	
  1121                           ; 1 bytes @ 0x3
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0x3
  1125  0073                     	ds	1
  1126  0074                     ??_serialPrintPeripheral:	
  1127  0074                     ??_serialPrintBT:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  0074                     strcmp@r:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133  0074                     serialFindPeripheral@i:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136                           
  1137                           ; 2 bytes @ 0x4
  1138  0074                     	ds	1
  1139  0075                     ??_strncmp:	
  1140  0075                     strcmp@s1:	
  1141                           ; 1 bytes @ 0x5
  1142                           
  1143  0075                     serialPrintPeripheral@i:	
  1144                           ; 1 bytes @ 0x5
  1145                           
  1146  0075                     serialPrintBT@i:	
  1147                           ; 2 bytes @ 0x5
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x5
  1151  0075                     	ds	2
  1152  0077                     ??_getWiFiData:	
  1153  0077                     ??_getGSMData:	
  1154                           ; 1 bytes @ 0x7
  1155                           
  1156  0077                     ??_getGPSData:	
  1157                           ; 1 bytes @ 0x7
  1158                           
  1159  0077                     ?_sendSigfox:	
  1160                           ; 1 bytes @ 0x7
  1161                           
  1162  0077                     ?_sendSMS:	
  1163                           ; 1 bytes @ 0x7
  1164                           
  1165  0077                     strncmp@s1:	
  1166                           ; 1 bytes @ 0x7
  1167                           
  1168  0077                     sendSigfox@hexMessage:	
  1169                           ; 1 bytes @ 0x7
  1170                           
  1171  0077                     sendSMS@number:	
  1172                           ; 2 bytes @ 0x7
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x7
  1176  0077                     	ds	1
  1177  0078                     getGPSData@found:	
  1178                           
  1179                           ; 1 bytes @ 0x8
  1180  0078                     	ds	1
  1181  0079                     ??_sendSigfox:	
  1182  0079                     getWiFiData@c:	
  1183                           ; 1 bytes @ 0x9
  1184                           
  1185  0079                     getGPSData@c:	
  1186                           ; 1 bytes @ 0x9
  1187                           
  1188  0079                     sendSMS@message:	
  1189                           ; 1 bytes @ 0x9
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x9
  1193  0079                     	ds	2
  1194  007B                     ??_waitForCommand:	
  1195                           
  1196                           ; 1 bytes @ 0xB
  1197  007B                     	ds	1
  1198                           
  1199                           	psect	cstackBANK0
  1200  0020                     __pcstackBANK0:	
  1201  0020                     ??_sendSMS:	
  1202                           
  1203                           ; 1 bytes @ 0x0
  1204  0020                     	ds	2
  1205  0022                     waitForCommand@message:	
  1206                           
  1207                           ; 30 bytes @ 0x2
  1208  0022                     	ds	30
  1209  0040                     waitForCommand@command:	
  1210                           
  1211                           ; 32 bytes @ 0x20
  1212  0040                     	ds	32
  1213  0060                     waitForCommand@c:	
  1214                           
  1215                           ; 1 bytes @ 0x40
  1216  0060                     	ds	1
  1217  0061                     waitForCommand@c_459:	
  1218                           
  1219                           ; 1 bytes @ 0x41
  1220  0061                     	ds	1
  1221  0062                     waitForCommand@i:	
  1222                           
  1223                           ; 2 bytes @ 0x42
  1224  0062                     	ds	2
  1225  0064                     waitForCommand@i_450:	
  1226                           
  1227                           ; 2 bytes @ 0x44
  1228  0064                     	ds	2
  1229  0066                     waitForCommand@p:	
  1230                           
  1231                           ; 1 bytes @ 0x46
  1232  0066                     	ds	1
  1233  0067                     ??_main:	
  1234                           
  1235                           ; 1 bytes @ 0x47
  1236  0067                     	ds	2
  1237                           
  1238                           	psect	maintext
  1239  03AD                     __pmaintext:	
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 88 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : B3F/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1259 ;;      Params:         0       0       0       0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0
  1261 ;;      Temps:          0       2       0       0       0       0       0       0
  1262 ;;      Totals:         0       2       0       0       0       0       0       0
  1263 ;;Total ram usage:        2 bytes
  1264 ;; Hardware stack levels required when called:    5
  1265 ;; This function calls:
  1266 ;;		_initBTSerial
  1267 ;;		_setActivePeripheral
  1268 ;;		_waitForCommand
  1269 ;; This function is called by:
  1270 ;;		Startup code after reset
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           
  1275                           ;psect for function _main
  1276  03AD                     _main:	
  1277                           
  1278                           ;main.c: 90: ANSELA = 0;
  1279                           
  1280                           ;incstack = 0
  1281                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1282  03AD  017E               	movlb	62	; select bank62
  1283  03AE  01B8               	clrf	56	;volatile
  1284                           
  1285                           ;main.c: 91: ANSELB = 0;
  1286  03AF  01C3               	clrf	67	;volatile
  1287                           
  1288                           ;main.c: 92: ANSELC = 0;
  1289  03B0  01CE               	clrf	78	;volatile
  1290                           
  1291                           ;main.c: 95: RC7PPS = 0;
  1292  03B1  01A7               	clrf	39	;volatile
  1293                           
  1294                           ;main.c: 96: TRISC7 = 0;
  1295  03B2  0140               	movlb	0	; select bank0
  1296  03B3  1394               	bcf	20,7	;volatile
  1297                           
  1298                           ;main.c: 97: LATC7 = 0;
  1299  03B4  139A               	bcf	26,7	;volatile
  1300                           
  1301                           ;main.c: 100: INTCONbits.GIE = 1;
  1302  03B5  178B               	bsf	11,7	;volatile
  1303                           
  1304                           ;main.c: 101: INTCONbits.PEIE = 1;
  1305  03B6  170B               	bsf	11,6	;volatile
  1306                           
  1307                           ;main.c: 104: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1308  03B7  30CB               	movlw	203
  1309  03B8  0140               	movlb	0	; select bank0
  1310  03B9  00E8               	movwf	??_main+1
  1311  03BA  30EC               	movlw	236
  1312  03BB  00E7               	movwf	??_main
  1313  03BC  3084               	movlw	132
  1314  03BD                     u1157:	
  1315  03BD  0B89               	decfsz	9,f
  1316  03BE  2BBD               	goto	u1157
  1317  03BF  0BE7               	decfsz	??_main,f
  1318  03C0  2BBD               	goto	u1157
  1319  03C1  0BE8               	decfsz	??_main+1,f
  1320  03C2  2BBD               	goto	u1157
  1321  03C3  0000               	nop
  1322                           
  1323                           ;main.c: 105: initBTSerial();
  1324  03C4  3184  246B  3183   	fcall	_initBTSerial
  1325                           
  1326                           ;main.c: 106: setActivePeripheral(sigfox);
  1327  03C7  3002               	movlw	2
  1328  03C8  3182  22A2  3183   	fcall	_setActivePeripheral
  1329  03CB                     l1540:	
  1330                           ;main.c: 108: while (1) {
  1331                           
  1332                           
  1333                           ;main.c: 109: waitForCommand();
  1334  03CB  3180  2031  3183   	fcall	_waitForCommand
  1335  03CE  2BCB               	goto	l1540
  1336  03CF                     __end_of_main:	
  1337                           ;main.c: 111: }
  1338                           ;main.c: 112: return;
  1339                           
  1340                           
  1341                           	psect	text1
  1342  0031                     __ptext1:	
  1343 ;; *************** function _waitForCommand *****************
  1344 ;; Defined at:
  1345 ;;		line 408 in file "main.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  c               1   65[BANK0 ] unsigned char 
  1350 ;;  c               1   64[BANK0 ] unsigned char 
  1351 ;;  message        30    2[BANK0 ] unsigned char [30]
  1352 ;;  i               2   68[BANK0 ] int 
  1353 ;;  p               1   70[BANK0 ] PTR unsigned char 
  1354 ;;		 -> waitForCommand@command(32), 
  1355 ;;  command        32   32[BANK0 ] unsigned char [32]
  1356 ;;  i               2   66[BANK0 ] int 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1366 ;;      Params:         0       0       0       0       0       0       0       0
  1367 ;;      Locals:         0      69       0       0       0       0       0       0
  1368 ;;      Temps:          1       0       0       0       0       0       0       0
  1369 ;;      Totals:         1      69       0       0       0       0       0       0
  1370 ;;Total ram usage:       70 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    4
  1373 ;; This function calls:
  1374 ;;		_getGPSData
  1375 ;;		_getGSMData
  1376 ;;		_getWiFiData
  1377 ;;		_sendSMS
  1378 ;;		_sendSigfox
  1379 ;;		_serialPrintBT
  1380 ;;		_serialReadBT
  1381 ;;		_serialReadPeripheral
  1382 ;;		_serialWriteBT
  1383 ;;		_startTimer
  1384 ;;		_strcmp
  1385 ;;		_strncmp
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _waitForCommand
  1393  0031                     _waitForCommand:	
  1394  0031                     l220:	
  1395                           ;main.c: 409: char command[32];
  1396                           ;main.c: 411: while (!PIR3bits.RC2IF) {
  1397                           
  1398                           ;incstack = 0
  1399                           ; Regs used in _waitForCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1400                           
  1401  0031  014E               	movlb	14	; select bank14
  1402  0032  1F8F               	btfss	15,7	;volatile
  1403  0033  2831               	goto	l220
  1404                           
  1405                           ;main.c: 412: }
  1406                           ;main.c: 414: startTimer(2);
  1407  0034  3002               	movlw	2
  1408  0035  00F1               	movwf	startTimer@seconds
  1409  0036  3000               	movlw	0
  1410  0037  00F2               	movwf	startTimer@seconds+1
  1411  0038  3184  2494  3180   	fcall	_startTimer
  1412                           
  1413                           ;main.c: 415: int i = 0;
  1414  003B  0140               	movlb	0	; select bank0
  1415  003C  01E2               	clrf	waitForCommand@i
  1416  003D  01E3               	clrf	waitForCommand@i+1
  1417  003E                     l1452:	
  1418                           ;main.c: 416: while (!timerDone) {
  1419                           
  1420  003E  087C               	movf	_timerDone,w
  1421  003F  1D03               	btfss	3,2
  1422  0040  2854               	goto	l1454
  1423                           
  1424                           ;main.c: 417: if (PIR3bits.RC2IF) {
  1425  0041  014E               	movlb	14	; select bank14
  1426  0042  1F8F               	btfss	15,7	;volatile
  1427  0043  283E               	goto	l1452
  1428                           
  1429                           ;main.c: 418: command[i] = serialReadBT();
  1430  0044  3185  25B1  3180   	fcall	_serialReadBT
  1431  0047  00FB               	movwf	??_waitForCommand
  1432  0048  0140               	movlb	0	; select bank0
  1433  0049  0862               	movf	waitForCommand@i,w
  1434  004A  3E40               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1435  004B  0086               	movwf	6
  1436  004C  0187               	clrf	7
  1437  004D  087B               	movf	??_waitForCommand,w
  1438  004E  0081               	movwf	1
  1439                           
  1440                           ;main.c: 419: i++;
  1441  004F  3001               	movlw	1
  1442  0050  07E2               	addwf	waitForCommand@i,f
  1443  0051  3000               	movlw	0
  1444  0052  3DE3               	addwfc	waitForCommand@i+1,f
  1445  0053  283E               	goto	l1452
  1446  0054                     l1454:	
  1447                           
  1448                           ;main.c: 420: }
  1449                           ;main.c: 421: }
  1450                           ;main.c: 422: command[i] = '\0';
  1451  0054  0140               	movlb	0	; select bank0
  1452  0055  0862               	movf	waitForCommand@i,w
  1453  0056  3E40               	addlw	(low (waitForCommand@command| 0))& (0+255)
  1454  0057  0086               	movwf	6
  1455  0058  0187               	clrf	7
  1456  0059  0181               	clrf	1
  1457                           
  1458                           ;main.c: 425: if (strcmp(command, "GET_GPS\r\n") == 0) {
  1459  005A  309D               	movlw	low (STR_22| (0+32768))
  1460  005B  00F1               	movwf	strcmp@s2
  1461  005C  3085               	movlw	high (STR_22| (0+32768))
  1462  005D  00F2               	movwf	strcmp@s2+1
  1463  005E  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1464  005F  3183  2386  3180   	fcall	_strcmp
  1465  0062  0871               	movf	?_strcmp,w
  1466  0063  0472               	iorwf	?_strcmp+1,w
  1467  0064  1D03               	btfss	3,2
  1468  0065  2870               	goto	l1460
  1469                           
  1470                           ;main.c: 426: getGPSData();
  1471  0066  3182  22FB  3180   	fcall	_getGPSData
  1472                           
  1473                           ;main.c: 427: serialPrintBT("MESSAGE_END\r\n");
  1474  0069  30C3               	movlw	low (STR_23| (0+32768))
  1475  006A  00F2               	movwf	serialPrintBT@s
  1476  006B  3084               	movlw	high (STR_23| (0+32768))
  1477  006C  00F3               	movwf	serialPrintBT@s+1
  1478  006D  3184  240B         	fcall	_serialPrintBT
  1479                           
  1480                           ;main.c: 428: } else if (strcmp(command, "GET_GSM\r\n") == 0) {
  1481  006F  0008               	return
  1482  0070                     l1460:	
  1483  0070  3093               	movlw	low (STR_24| (0+32768))
  1484  0071  00F1               	movwf	strcmp@s2
  1485  0072  3085               	movlw	high (STR_24| (0+32768))
  1486  0073  00F2               	movwf	strcmp@s2+1
  1487  0074  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1488  0075  3183  2386  3180   	fcall	_strcmp
  1489  0078  0871               	movf	?_strcmp,w
  1490  0079  0472               	iorwf	?_strcmp+1,w
  1491  007A  1D03               	btfss	3,2
  1492  007B  2886               	goto	l1464
  1493                           
  1494                           ;main.c: 429: getGSMData();
  1495  007C  3181  2157  3180   	fcall	_getGSMData
  1496                           
  1497                           ;main.c: 430: serialPrintBT("MESSAGE_END\r\n");
  1498  007F  30C3               	movlw	low (STR_23| (0+32768))
  1499  0080  00F2               	movwf	serialPrintBT@s
  1500  0081  3084               	movlw	high (STR_23| (0+32768))
  1501  0082  00F3               	movwf	serialPrintBT@s+1
  1502  0083  3184  240B         	fcall	_serialPrintBT
  1503                           
  1504                           ;main.c: 431: } else if (strcmp(command, "GET_WIFI\r\n") == 0) {
  1505  0085  0008               	return
  1506  0086                     l1464:	
  1507  0086  304A               	movlw	low (STR_26| (0+32768))
  1508  0087  00F1               	movwf	strcmp@s2
  1509  0088  3085               	movlw	high (STR_26| (0+32768))
  1510  0089  00F2               	movwf	strcmp@s2+1
  1511  008A  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1512  008B  3183  2386  3180   	fcall	_strcmp
  1513  008E  0871               	movf	?_strcmp,w
  1514  008F  0472               	iorwf	?_strcmp+1,w
  1515  0090  1D03               	btfss	3,2
  1516  0091  289C               	goto	l1468
  1517                           
  1518                           ;main.c: 432: getWiFiData();
  1519  0092  3182  2242  3180   	fcall	_getWiFiData
  1520                           
  1521                           ;main.c: 433: serialPrintBT("MESSAGE_END\r\n");
  1522  0095  30C3               	movlw	low (STR_23| (0+32768))
  1523  0096  00F2               	movwf	serialPrintBT@s
  1524  0097  3084               	movlw	high (STR_23| (0+32768))
  1525  0098  00F3               	movwf	serialPrintBT@s+1
  1526  0099  3184  240B         	fcall	_serialPrintBT
  1527                           
  1528                           ;main.c: 434: } else if (strcmp(command, "GET_ALL_SEND_SIGFOX\r\n") == 0) {
  1529  009B  0008               	return
  1530  009C                     l1468:	
  1531  009C  3055               	movlw	low (STR_28| (0+32768))
  1532  009D  00F1               	movwf	strcmp@s2
  1533  009E  3084               	movlw	high (STR_28| (0+32768))
  1534  009F  00F2               	movwf	strcmp@s2+1
  1535  00A0  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1536  00A1  3183  2386  3180   	fcall	_strcmp
  1537  00A4  0871               	movf	?_strcmp,w
  1538  00A5  0472               	iorwf	?_strcmp+1,w
  1539  00A6  1D03               	btfss	3,2
  1540  00A7  28BF               	goto	l1472
  1541                           
  1542                           ;main.c: 435: sendSigfox("000000000000\r\n");
  1543  00A8  30A5               	movlw	low (STR_29| (0+32768))
  1544  00A9  00F7               	movwf	sendSigfox@hexMessage
  1545  00AA  3084               	movlw	high (STR_29| (0+32768))
  1546  00AB  00F8               	movwf	sendSigfox@hexMessage+1
  1547  00AC  3184  2425  3180   	fcall	_sendSigfox
  1548                           
  1549                           ;main.c: 436: getGPSData();
  1550  00AF  3182  22FB  3180   	fcall	_getGPSData
  1551                           
  1552                           ;main.c: 437: getGSMData();
  1553  00B2  3181  2157  3180   	fcall	_getGSMData
  1554                           
  1555                           ;main.c: 438: getWiFiData();
  1556  00B5  3182  2242  3180   	fcall	_getWiFiData
  1557                           
  1558                           ;main.c: 439: serialPrintBT("MESSAGE_END\r\n");
  1559  00B8  30C3               	movlw	low (STR_23| (0+32768))
  1560  00B9  00F2               	movwf	serialPrintBT@s
  1561  00BA  3084               	movlw	high (STR_23| (0+32768))
  1562  00BB  00F3               	movwf	serialPrintBT@s+1
  1563  00BC  3184  240B         	fcall	_serialPrintBT
  1564                           
  1565                           ;main.c: 440: } else if (strcmp(command, "GET_ALL\r\n") == 0) {
  1566  00BE  0008               	return
  1567  00BF                     l1472:	
  1568  00BF  3089               	movlw	low (STR_31| (0+32768))
  1569  00C0  00F1               	movwf	strcmp@s2
  1570  00C1  3085               	movlw	high (STR_31| (0+32768))
  1571  00C2  00F2               	movwf	strcmp@s2+1
  1572  00C3  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1573  00C4  3183  2386  3180   	fcall	_strcmp
  1574  00C7  0871               	movf	?_strcmp,w
  1575  00C8  0472               	iorwf	?_strcmp+1,w
  1576  00C9  1D03               	btfss	3,2
  1577  00CA  28DB               	goto	l1476
  1578                           
  1579                           ;main.c: 441: getGPSData();
  1580  00CB  3182  22FB  3180   	fcall	_getGPSData
  1581                           
  1582                           ;main.c: 442: getGSMData();
  1583  00CE  3181  2157  3180   	fcall	_getGSMData
  1584                           
  1585                           ;main.c: 443: getWiFiData();
  1586  00D1  3182  2242  3180   	fcall	_getWiFiData
  1587                           
  1588                           ;main.c: 444: serialPrintBT("MESSAGE_END\r\n");
  1589  00D4  30C3               	movlw	low (STR_23| (0+32768))
  1590  00D5  00F2               	movwf	serialPrintBT@s
  1591  00D6  3084               	movlw	high (STR_23| (0+32768))
  1592  00D7  00F3               	movwf	serialPrintBT@s+1
  1593  00D8  3184  240B         	fcall	_serialPrintBT
  1594                           
  1595                           ;main.c: 445: } else if (strncmp(command, "SEND_SIGFOX:", 12) == 0) {
  1596  00DA  0008               	return
  1597  00DB                     l1476:	
  1598  00DB  30EB               	movlw	low (STR_33| (0+32768))
  1599  00DC  00F1               	movwf	strncmp@s2
  1600  00DD  3084               	movlw	high (STR_33| (0+32768))
  1601  00DE  00F2               	movwf	strncmp@s2+1
  1602  00DF  300C               	movlw	12
  1603  00E0  00F3               	movwf	strncmp@len
  1604  00E1  3000               	movlw	0
  1605  00E2  00F4               	movwf	strncmp@len+1
  1606  00E3  3040               	movlw	(low (waitForCommand@command| 0))& (0+255)
  1607  00E4  3183  2346  3180   	fcall	_strncmp
  1608  00E7  0871               	movf	?_strncmp,w
  1609  00E8  0472               	iorwf	?_strncmp+1,w
  1610  00E9  1D03               	btfss	3,2
  1611  00EA  2919               	goto	l1494
  1612                           
  1613                           ;main.c: 446: char * p;
  1614                           ;main.c: 447: p = command + 12;
  1615  00EB  304C               	movlw	(low ((waitForCommand@command| 0+12)))& (0+255)
  1616  00EC  00FB               	movwf	??_waitForCommand
  1617  00ED  087B               	movf	??_waitForCommand,w
  1618  00EE  0140               	movlb	0	; select bank0
  1619  00EF  00E6               	movwf	waitForCommand@p
  1620                           
  1621                           ;main.c: 448: char message[30];
  1622                           ;main.c: 449: int i = 0;
  1623  00F0  01E4               	clrf	waitForCommand@i_450
  1624  00F1  01E5               	clrf	waitForCommand@i_450+1
  1625  00F2                     l1488:	
  1626                           ;main.c: 451: while (*p != '\r') {
  1627                           
  1628  00F2  0866               	movf	waitForCommand@p,w
  1629  00F3  0086               	movwf	6
  1630  00F4  0187               	clrf	7
  1631  00F5  300D               	movlw	13
  1632  00F6  0601               	xorwf	1,w
  1633  00F7  1903               	btfsc	3,2
  1634  00F8  290D               	goto	l1490
  1635                           
  1636                           ;main.c: 452: message[i] = *p;
  1637  00F9  0866               	movf	waitForCommand@p,w
  1638  00FA  0086               	movwf	6
  1639  00FB  0187               	clrf	7
  1640  00FC  0801               	movf	1,w
  1641  00FD  00FB               	movwf	??_waitForCommand
  1642  00FE  0864               	movf	waitForCommand@i_450,w
  1643  00FF  3E22               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1644  0100  0086               	movwf	6
  1645  0101  0187               	clrf	7
  1646  0102  087B               	movf	??_waitForCommand,w
  1647  0103  0081               	movwf	1
  1648                           
  1649                           ;main.c: 453: p++;
  1650  0104  3001               	movlw	1
  1651  0105  00FB               	movwf	??_waitForCommand
  1652  0106  087B               	movf	??_waitForCommand,w
  1653  0107  07E6               	addwf	waitForCommand@p,f
  1654                           
  1655                           ;main.c: 454: i++;
  1656  0108  3001               	movlw	1
  1657  0109  07E4               	addwf	waitForCommand@i_450,f
  1658  010A  3000               	movlw	0
  1659  010B  3DE5               	addwfc	waitForCommand@i_450+1,f
  1660  010C  28F2               	goto	l1488
  1661  010D                     l1490:	
  1662                           
  1663                           ;main.c: 455: }
  1664                           ;main.c: 456: message[i] = '\0';
  1665  010D  0864               	movf	waitForCommand@i_450,w
  1666  010E  3E22               	addlw	(low (waitForCommand@message| 0))& (0+255)
  1667  010F  0086               	movwf	6
  1668  0110  0187               	clrf	7
  1669  0111  0181               	clrf	1
  1670                           
  1671                           ;main.c: 458: sendSigfox(message);
  1672  0112  3022               	movlw	low waitForCommand@message
  1673  0113  00F7               	movwf	sendSigfox@hexMessage
  1674  0114  3000               	movlw	high waitForCommand@message
  1675  0115  00F8               	movwf	sendSigfox@hexMessage+1
  1676  0116  3184  2425         	fcall	_sendSigfox
  1677                           
  1678                           ;main.c: 459: } else if ("SEND_SMS\r\n") {
  1679  0118  0008               	return
  1680  0119                     l1494:	
  1681                           
  1682                           ;main.c: 460: sendSMS("nummer", "Hello World");
  1683  0119  30F6               	movlw	low (STR_35| (0+32768))
  1684  011A  00F7               	movwf	sendSMS@number
  1685  011B  3085               	movlw	high (STR_35| (0+32768))
  1686  011C  00F8               	movwf	sendSMS@number+1
  1687  011D  3028               	movlw	low (STR_36| (0+32768))
  1688  011E  00F9               	movwf	sendSMS@message
  1689  011F  3085               	movlw	high (STR_36| (0+32768))
  1690  0120  00FA               	movwf	sendSMS@message+1
  1691  0121  3181  21CE  3180   	fcall	_sendSMS
  1692                           
  1693                           ;main.c: 462: startTimer(4);
  1694  0124  3004               	movlw	4
  1695  0125  00F1               	movwf	startTimer@seconds
  1696  0126  3000               	movlw	0
  1697  0127  00F2               	movwf	startTimer@seconds+1
  1698  0128  3184  2494  3180   	fcall	_startTimer
  1699  012B                     l1506:	
  1700                           ;main.c: 463: while (!timerDone) {
  1701                           
  1702  012B  087C               	movf	_timerDone,w
  1703  012C  1D03               	btfss	3,2
  1704  012D  0008               	return
  1705                           
  1706                           ;main.c: 464: if (PIR3bits.RC1IF) {
  1707  012E  014E               	movlb	14	; select bank14
  1708  012F  1E8F               	btfss	15,5	;volatile
  1709  0130  292B               	goto	l1506
  1710                           
  1711                           ;main.c: 465: char c = serialReadPeripheral();
  1712  0131  3185  25BB  3180   	fcall	_serialReadPeripheral
  1713  0134  00FB               	movwf	??_waitForCommand
  1714  0135  087B               	movf	??_waitForCommand,w
  1715  0136  0140               	movlb	0	; select bank0
  1716  0137  00E0               	movwf	waitForCommand@c
  1717                           
  1718                           ;main.c: 466: if (c == 'O') {
  1719  0138  304F               	movlw	79
  1720  0139  0660               	xorwf	waitForCommand@c,w
  1721  013A  1903               	btfsc	3,2
  1722                           
  1723                           ;main.c: 467: LATC7 = 0;
  1724  013B  139A               	bcf	26,7	;volatile
  1725                           
  1726                           ;main.c: 468: }
  1727                           ;main.c: 469: serialWriteBT(c);
  1728  013C  0860               	movf	waitForCommand@c,w
  1729  013D  3185  25E7  3180   	fcall	_serialWriteBT
  1730  0140  292B               	goto	l1506
  1731  0141                     l251:	
  1732                           ;main.c: 476: while (!timerDone) {
  1733                           
  1734                           ;main.c: 475: startTimer(4);
  1735                           
  1736                           ;main.c: 474: LATC7 = 1;
  1737                           
  1738                           ;main.c: 473: sendSigfox("48656c6c6f20576f726c64");
  1739                           
  1740                           ;main.c: 470: }
  1741                           ;main.c: 471: }
  1742                           ;main.c: 472: } else if ("SEND_SIGFOX\r\n") {
  1743                           
  1744                           
  1745                           ;main.c: 477: if (PIR3bits.RC1IF) {
  1746  0141  014E               	movlb	14	; select bank14
  1747  0142  1E8F               	btfss	15,5	;volatile
  1748  0143  2953               	goto	l1522
  1749                           
  1750                           ;main.c: 478: char c = serialReadPeripheral();
  1751  0144  3185  25BB  3180   	fcall	_serialReadPeripheral
  1752  0147  00FB               	movwf	??_waitForCommand
  1753  0148  087B               	movf	??_waitForCommand,w
  1754  0149  0140               	movlb	0	; select bank0
  1755  014A  00E1               	movwf	waitForCommand@c_459
  1756                           
  1757                           ;main.c: 479: if (c == 'O') {
  1758  014B  304F               	movlw	79
  1759  014C  0661               	xorwf	waitForCommand@c_459,w
  1760  014D  1903               	btfsc	3,2
  1761                           
  1762                           ;main.c: 480: LATC7 = 0;
  1763  014E  139A               	bcf	26,7	;volatile
  1764                           
  1765                           ;main.c: 481: }
  1766                           ;main.c: 482: serialWriteBT(c);
  1767  014F  0861               	movf	waitForCommand@c_459,w
  1768  0150  3185  25E7  3180   	fcall	_serialWriteBT
  1769  0153                     l1522:	
  1770  0153  087C               	movf	_timerDone,w
  1771  0154  1D03               	btfss	3,2
  1772  0155  0008               	return
  1773  0156  2941               	goto	l251
  1774  0157                     __end_of_waitForCommand:	
  1775                           ;main.c: 488: LATC7 = 0;
  1776                           
  1777                           ;main.c: 487: } else if("TRIGOFF\r\n") {
  1778                           
  1779                           ;main.c: 486: LATC7 = 1;
  1780                           
  1781                           ;main.c: 483: }
  1782                           ;main.c: 484: }
  1783                           ;main.c: 485: } else if("TRIGON\r\n") {
  1784                           
  1785                           
  1786                           	psect	text2
  1787  0346                     __ptext2:	
  1788 ;; *************** function _strncmp *****************
  1789 ;; Defined at:
  1790 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  s1              1    wreg     PTR const unsigned char 
  1793 ;;		 -> waitForCommand@command(32), 
  1794 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1795 ;;		 -> STR_33(13), 
  1796 ;;  len             2    3[COMMON] unsigned int 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  s1              1    7[COMMON] PTR const unsigned char 
  1799 ;;		 -> waitForCommand@command(32), 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    1[COMMON] int 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1809 ;;      Params:         4       0       0       0       0       0       0       0
  1810 ;;      Locals:         1       0       0       0       0       0       0       0
  1811 ;;      Temps:          2       0       0       0       0       0       0       0
  1812 ;;      Totals:         7       0       0       0       0       0       0       0
  1813 ;;Total ram usage:        7 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_waitForCommand
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _strncmp
  1825  0346                     _strncmp:	
  1826                           
  1827                           ;incstack = 0
  1828                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  1829                           ;strncmp@s1 stored from wreg
  1830  0346  00F7               	movwf	strncmp@s1
  1831  0347                     l1280:	
  1832  0347  3001               	movlw	1
  1833  0348  02F3               	subwf	strncmp@len,f
  1834  0349  3000               	movlw	0
  1835  034A  3BF4               	subwfb	strncmp@len+1,f
  1836  034B  0A73               	incf	strncmp@len,w
  1837  034C  1903               	btfsc	3,2
  1838  034D  0A74               	incf	strncmp@len+1,w
  1839  034E  1903               	btfsc	3,2
  1840  034F  2B83               	goto	l1282
  1841  0350  0877               	movf	strncmp@s1,w
  1842  0351  0086               	movwf	6
  1843  0352  0187               	clrf	7
  1844  0353  0801               	movf	1,w
  1845  0354  1903               	btfsc	3,2
  1846  0355  2B63               	goto	l1272
  1847  0356  0871               	movf	strncmp@s2,w
  1848  0357  0084               	movwf	4
  1849  0358  0872               	movf	strncmp@s2+1,w
  1850  0359  0085               	movwf	5
  1851  035A  0800               	movf	0,w	;code access
  1852  035B  00F5               	movwf	??_strncmp
  1853  035C  0877               	movf	strncmp@s1,w
  1854  035D  0086               	movwf	6
  1855  035E  0187               	clrf	7
  1856  035F  0801               	movf	1,w
  1857  0360  0675               	xorwf	??_strncmp,w
  1858  0361  1903               	skipnz
  1859  0362  2B7A               	goto	l1276
  1860  0363                     l1272:	
  1861  0363  0871               	movf	strncmp@s2,w
  1862  0364  0084               	movwf	4
  1863  0365  0872               	movf	strncmp@s2+1,w
  1864  0366  0085               	movwf	5
  1865  0367  0800               	movf	0,w	;code access
  1866  0368  00F5               	movwf	??_strncmp
  1867  0369  01F6               	clrf	??_strncmp+1
  1868  036A  09F5               	comf	??_strncmp,f
  1869  036B  09F6               	comf	??_strncmp+1,f
  1870  036C  0AF5               	incf	??_strncmp,f
  1871  036D  1903               	skipnz
  1872  036E  0AF6               	incf	??_strncmp+1,f
  1873  036F  0877               	movf	strncmp@s1,w
  1874  0370  0086               	movwf	6
  1875  0371  0187               	clrf	7
  1876  0372  0801               	movf	1,w
  1877  0373  0775               	addwf	??_strncmp,w
  1878  0374  00F1               	movwf	?_strncmp
  1879  0375  0876               	movf	??_strncmp+1,w
  1880  0376  1803               	skipnc
  1881  0377  0A76               	incf	??_strncmp+1,w
  1882  0378  00F2               	movwf	?_strncmp+1
  1883  0379  0008               	return
  1884  037A                     l1276:	
  1885  037A  3001               	movlw	1
  1886  037B  00F5               	movwf	??_strncmp
  1887  037C  0875               	movf	??_strncmp,w
  1888  037D  07F7               	addwf	strncmp@s1,f
  1889  037E  3001               	movlw	1
  1890  037F  07F1               	addwf	strncmp@s2,f
  1891  0380  3000               	movlw	0
  1892  0381  3DF2               	addwfc	strncmp@s2+1,f
  1893  0382  2B47               	goto	l1280
  1894  0383                     l1282:	
  1895  0383  01F1               	clrf	?_strncmp
  1896  0384  01F2               	clrf	?_strncmp+1
  1897  0385  0008               	return
  1898  0386                     __end_of_strncmp:	
  1899                           
  1900                           	psect	text3
  1901  0386                     __ptext3:	
  1902 ;; *************** function _strcmp *****************
  1903 ;; Defined at:
  1904 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  s1              1    wreg     PTR const unsigned char 
  1907 ;;		 -> waitForCommand@command(32), 
  1908 ;;  s2              2    1[COMMON] PTR const unsigned char 
  1909 ;;		 -> STR_31(10), STR_28(22), STR_26(11), STR_24(10), 
  1910 ;;		 -> STR_22(10), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1913 ;;		 -> waitForCommand@command(32), 
  1914 ;;  r               1    4[COMMON] char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2    1[COMMON] int 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1924 ;;      Params:         2       0       0       0       0       0       0       0
  1925 ;;      Locals:         2       0       0       0       0       0       0       0
  1926 ;;      Temps:          1       0       0       0       0       0       0       0
  1927 ;;      Totals:         5       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        5 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_waitForCommand
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _strcmp
  1940  0386                     _strcmp:	
  1941                           
  1942                           ;incstack = 0
  1943                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  1944                           ;strcmp@s1 stored from wreg
  1945  0386  00F5               	movwf	strcmp@s1
  1946  0387  2B90               	goto	l1258
  1947  0388                     l1256:	
  1948  0388  3001               	movlw	1
  1949  0389  00F3               	movwf	??_strcmp
  1950  038A  0873               	movf	??_strcmp,w
  1951  038B  07F5               	addwf	strcmp@s1,f
  1952  038C  3001               	movlw	1
  1953  038D  07F1               	addwf	strcmp@s2,f
  1954  038E  3000               	movlw	0
  1955  038F  3DF2               	addwfc	strcmp@s2+1,f
  1956  0390                     l1258:	
  1957  0390  0875               	movf	strcmp@s1,w
  1958  0391  0086               	movwf	6
  1959  0392  0187               	clrf	7
  1960  0393  0871               	movf	strcmp@s2,w
  1961  0394  0084               	movwf	4
  1962  0395  0872               	movf	strcmp@s2+1,w
  1963  0396  0085               	movwf	5
  1964  0397  0800               	movf	0,w	;code access
  1965  0398  3AFF               	xorlw	255
  1966  0399  3E01               	addlw	1
  1967  039A  0701               	addwf	1,w
  1968  039B  00F3               	movwf	??_strcmp
  1969  039C  0873               	movf	??_strcmp,w
  1970  039D  00F4               	movwf	strcmp@r
  1971  039E  0874               	movf	strcmp@r,w
  1972  039F  1D03               	btfss	3,2
  1973  03A0  2BA7               	goto	l1262
  1974  03A1  0875               	movf	strcmp@s1,w
  1975  03A2  0086               	movwf	6
  1976  03A3  0187               	clrf	7
  1977  03A4  0801               	movf	1,w
  1978  03A5  1D03               	btfss	3,2
  1979  03A6  2B88               	goto	l1256
  1980  03A7                     l1262:	
  1981  03A7  0874               	movf	strcmp@r,w
  1982  03A8  00F1               	movwf	?_strcmp
  1983  03A9  01F2               	clrf	?_strcmp+1
  1984  03AA  1BF1               	btfsc	?_strcmp,7
  1985  03AB  03F2               	decf	?_strcmp+1,f
  1986  03AC  0008               	return
  1987  03AD                     __end_of_strcmp:	
  1988                           
  1989                           	psect	text4
  1990  05B1                     __ptext4:	
  1991 ;; *************** function _serialReadBT *****************
  1992 ;; Defined at:
  1993 ;;		line 240 in file "main.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2007 ;;      Params:         0       0       0       0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_waitForCommand
  2018 ;;		_serialFindBT
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _serialReadBT
  2024  05B1                     _serialReadBT:	
  2025  05B1                     l150:	
  2026                           ;main.c: 241: while (!PIR3bits.RC2IF) {
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _serialReadBT: [wreg]
  2030                           
  2031  05B1  014E               	movlb	14	; select bank14
  2032  05B2  1F8F               	btfss	15,7	;volatile
  2033  05B3  2DB1               	goto	l150
  2034                           
  2035                           ;main.c: 242: }
  2036                           ;main.c: 243: if (1 == RC2STAbits.OERR) {
  2037  05B4  0154               	movlb	20	; select bank20
  2038  05B5  1C9D               	btfss	29,1	;volatile
  2039  05B6  2DB9               	goto	l1146
  2040                           
  2041                           ;main.c: 244: RC2STAbits.SPEN = 0;
  2042  05B7  139D               	bcf	29,7	;volatile
  2043                           
  2044                           ;main.c: 245: RC2STAbits.SPEN = 1;
  2045  05B8  179D               	bsf	29,7	;volatile
  2046  05B9                     l1146:	
  2047                           
  2048                           ;main.c: 246: }
  2049                           ;main.c: 247: return RC2REG;
  2050  05B9  0819               	movf	25,w	;volatile
  2051  05BA  0008               	return
  2052  05BB                     __end_of_serialReadBT:	
  2053                           
  2054                           	psect	text5
  2055  0425                     __ptext5:	
  2056 ;; *************** function _sendSigfox *****************
  2057 ;; Defined at:
  2058 ;;		line 383 in file "main.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  hexMessage      2    7[COMMON] PTR unsigned char 
  2061 ;;		 -> STR_38(23), waitForCommand@message(30), STR_29(15), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2073 ;;      Params:         2       0       0       0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0
  2076 ;;      Totals:         2       0       0       0       0       0       0       0
  2077 ;;Total ram usage:        2 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		_serialPrintPeripheral
  2082 ;;		_setActivePeripheral
  2083 ;; This function is called by:
  2084 ;;		_waitForCommand
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _sendSigfox
  2090  0425                     _sendSigfox:	
  2091                           
  2092                           ;main.c: 384: setActivePeripheral(sigfox);
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in _sendSigfox: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2096  0425  3002               	movlw	2
  2097  0426  3182  22A2  3184   	fcall	_setActivePeripheral
  2098                           
  2099                           ;main.c: 385: serialPrintPeripheral("AT$SF=");
  2100  0429  30EF               	movlw	low (STR_16| (0+32768))
  2101  042A  00F2               	movwf	serialPrintPeripheral@s
  2102  042B  3085               	movlw	high (STR_16| (0+32768))
  2103  042C  00F3               	movwf	serialPrintPeripheral@s+1
  2104  042D  3183  23F1  3184   	fcall	_serialPrintPeripheral
  2105                           
  2106                           ;main.c: 386: serialPrintPeripheral(hexMessage);
  2107  0430  0878               	movf	sendSigfox@hexMessage+1,w
  2108  0431  00F3               	movwf	serialPrintPeripheral@s+1
  2109  0432  0877               	movf	sendSigfox@hexMessage,w
  2110  0433  00F2               	movwf	serialPrintPeripheral@s
  2111  0434  3183  23F1  3184   	fcall	_serialPrintPeripheral
  2112                           
  2113                           ;main.c: 387: serialPrintPeripheral("\r\n");
  2114  0437  3003               	movlw	low ((STR_20+1)| (0+32768))
  2115  0438  00F2               	movwf	serialPrintPeripheral@s
  2116  0439  3086               	movlw	high ((STR_20+1)| (0+32768))
  2117  043A  00F3               	movwf	serialPrintPeripheral@s+1
  2118  043B  3183  23F1         	fcall	_serialPrintPeripheral
  2119  043D  0008               	return
  2120  043E                     __end_of_sendSigfox:	
  2121                           
  2122                           	psect	text6
  2123  01CE                     __ptext6:	
  2124 ;; *************** function _sendSMS *****************
  2125 ;; Defined at:
  2126 ;;		line 390 in file "main.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  number          2    7[COMMON] PTR unsigned char 
  2129 ;;		 -> STR_35(7), 
  2130 ;;  message         2    9[COMMON] PTR unsigned char 
  2131 ;;		 -> STR_36(12), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2143 ;;      Params:         4       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       2       0       0       0       0       0       0
  2146 ;;      Totals:         4       2       0       0       0       0       0       0
  2147 ;;Total ram usage:        6 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		_serialPrintPeripheral
  2152 ;;		_serialWritePeripheral
  2153 ;;		_setActivePeripheral
  2154 ;; This function is called by:
  2155 ;;		_waitForCommand
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _sendSMS
  2161  01CE                     _sendSMS:	
  2162                           
  2163                           ;main.c: 392: setActivePeripheral(gsm);
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _sendSMS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2167  01CE  3003               	movlw	3
  2168  01CF  3182  22A2  3181   	fcall	_setActivePeripheral
  2169                           
  2170                           ;main.c: 393: serialPrintPeripheral("AT+CMGF=1\r\n");
  2171  01D2  30F8               	movlw	low (STR_18| (0+32768))
  2172  01D3  00F2               	movwf	serialPrintPeripheral@s
  2173  01D4  3084               	movlw	high (STR_18| (0+32768))
  2174  01D5  00F3               	movwf	serialPrintPeripheral@s+1
  2175  01D6  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2176                           
  2177                           ;main.c: 394: _delay((unsigned long)((2000)*(32000000/4000.0)));
  2178  01D9  3052               	movlw	82
  2179  01DA  0140               	movlb	0	; select bank0
  2180  01DB  00A1               	movwf	??_sendSMS+1
  2181  01DC  302B               	movlw	43
  2182  01DD  00A0               	movwf	??_sendSMS
  2183  01DE  3000               	movlw	0
  2184  01DF                     u1167:	
  2185  01DF  0B89               	decfsz	9,f
  2186  01E0  29DF               	goto	u1167
  2187  01E1  0BA0               	decfsz	??_sendSMS,f
  2188  01E2  29DF               	goto	u1167
  2189  01E3  0BA1               	decfsz	??_sendSMS+1,f
  2190  01E4  29DF               	goto	u1167
  2191  01E5  0000               	nop
  2192                           
  2193                           ;main.c: 395: serialPrintPeripheral("AT+CMGS=\"");
  2194  01E6  30A7               	movlw	low (STR_19| (0+32768))
  2195  01E7  00F2               	movwf	serialPrintPeripheral@s
  2196  01E8  3085               	movlw	high (STR_19| (0+32768))
  2197  01E9  00F3               	movwf	serialPrintPeripheral@s+1
  2198  01EA  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2199                           
  2200                           ;main.c: 396: serialPrintPeripheral(number);
  2201  01ED  0878               	movf	sendSMS@number+1,w
  2202  01EE  00F3               	movwf	serialPrintPeripheral@s+1
  2203  01EF  0877               	movf	sendSMS@number,w
  2204  01F0  00F2               	movwf	serialPrintPeripheral@s
  2205  01F1  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2206                           
  2207                           ;main.c: 397: serialPrintPeripheral("\"\r\n");
  2208  01F4  3002               	movlw	low (STR_20| (0+32768))
  2209  01F5  00F2               	movwf	serialPrintPeripheral@s
  2210  01F6  3086               	movlw	high (STR_20| (0+32768))
  2211  01F7  00F3               	movwf	serialPrintPeripheral@s+1
  2212  01F8  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2213                           
  2214                           ;main.c: 398: _delay((unsigned long)((3000)*(32000000/4000.0)));
  2215  01FB  307A               	movlw	122
  2216  01FC  0140               	movlb	0	; select bank0
  2217  01FD  00A1               	movwf	??_sendSMS+1
  2218  01FE  30C1               	movlw	193
  2219  01FF  00A0               	movwf	??_sendSMS
  2220  0200  3081               	movlw	129
  2221  0201                     u1177:	
  2222  0201  0B89               	decfsz	9,f
  2223  0202  2A01               	goto	u1177
  2224  0203  0BA0               	decfsz	??_sendSMS,f
  2225  0204  2A01               	goto	u1177
  2226  0205  0BA1               	decfsz	??_sendSMS+1,f
  2227  0206  2A01               	goto	u1177
  2228  0207  3200               	nop2
  2229                           
  2230                           ;main.c: 399: serialPrintPeripheral(message);
  2231  0208  087A               	movf	sendSMS@message+1,w
  2232  0209  00F3               	movwf	serialPrintPeripheral@s+1
  2233  020A  0879               	movf	sendSMS@message,w
  2234  020B  00F2               	movwf	serialPrintPeripheral@s
  2235  020C  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2236                           
  2237                           ;main.c: 400: _delay((unsigned long)((500)*(32000000/4000.0)));
  2238  020F  3015               	movlw	21
  2239  0210  0140               	movlb	0	; select bank0
  2240  0211  00A1               	movwf	??_sendSMS+1
  2241  0212  304B               	movlw	75
  2242  0213  00A0               	movwf	??_sendSMS
  2243  0214  30BE               	movlw	190
  2244  0215                     u1187:	
  2245  0215  0B89               	decfsz	9,f
  2246  0216  2A15               	goto	u1187
  2247  0217  0BA0               	decfsz	??_sendSMS,f
  2248  0218  2A15               	goto	u1187
  2249  0219  0BA1               	decfsz	??_sendSMS+1,f
  2250  021A  2A15               	goto	u1187
  2251  021B  0000               	nop
  2252                           
  2253                           ;main.c: 401: serialWritePeripheral('\x1A');
  2254  021C  301A               	movlw	26
  2255  021D  3185  25DF  3181   	fcall	_serialWritePeripheral
  2256                           
  2257                           ;main.c: 402: _delay((unsigned long)((100)*(32000000/4000.0)));
  2258  0220  3005               	movlw	5
  2259  0221  0140               	movlb	0	; select bank0
  2260  0222  00A1               	movwf	??_sendSMS+1
  2261  0223  300F               	movlw	15
  2262  0224  00A0               	movwf	??_sendSMS
  2263  0225  30F1               	movlw	241
  2264  0226                     u1197:	
  2265  0226  0B89               	decfsz	9,f
  2266  0227  2A26               	goto	u1197
  2267  0228  0BA0               	decfsz	??_sendSMS,f
  2268  0229  2A26               	goto	u1197
  2269  022A  0BA1               	decfsz	??_sendSMS+1,f
  2270  022B  2A26               	goto	u1197
  2271                           
  2272                           ;main.c: 403: serialPrintPeripheral("\r\n");
  2273  022C  3003               	movlw	low ((STR_20+1)| (0+32768))
  2274  022D  00F2               	movwf	serialPrintPeripheral@s
  2275  022E  3086               	movlw	high ((STR_20+1)| (0+32768))
  2276  022F  00F3               	movwf	serialPrintPeripheral@s+1
  2277  0230  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2278                           
  2279                           ;main.c: 404: LATC7 = 1;
  2280  0233  0140               	movlb	0	; select bank0
  2281  0234  179A               	bsf	26,7	;volatile
  2282                           
  2283                           ;main.c: 405: _delay((unsigned long)((100)*(32000000/4000.0)));
  2284  0235  3005               	movlw	5
  2285  0236  0140               	movlb	0	; select bank0
  2286  0237  00A1               	movwf	??_sendSMS+1
  2287  0238  300F               	movlw	15
  2288  0239  00A0               	movwf	??_sendSMS
  2289  023A  30F1               	movlw	241
  2290  023B                     u1207:	
  2291  023B  0B89               	decfsz	9,f
  2292  023C  2A3B               	goto	u1207
  2293  023D  0BA0               	decfsz	??_sendSMS,f
  2294  023E  2A3B               	goto	u1207
  2295  023F  0BA1               	decfsz	??_sendSMS+1,f
  2296  0240  2A3B               	goto	u1207
  2297  0241  0008               	return
  2298  0242                     __end_of_sendSMS:	
  2299                           
  2300                           	psect	text7
  2301  0242                     __ptext7:	
  2302 ;; *************** function _getWiFiData *****************
  2303 ;; Defined at:
  2304 ;;		line 287 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  c               1    9[COMMON] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2318 ;;      Params:         0       0       0       0       0       0       0       0
  2319 ;;      Locals:         1       0       0       0       0       0       0       0
  2320 ;;      Temps:          2       0       0       0       0       0       0       0
  2321 ;;      Totals:         3       0       0       0       0       0       0       0
  2322 ;;Total ram usage:        3 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    3
  2325 ;; This function calls:
  2326 ;;		_serialPrintBT
  2327 ;;		_serialPrintPeripheral
  2328 ;;		_serialReadPeripheral
  2329 ;;		_serialWriteBT
  2330 ;;		_setActivePeripheral
  2331 ;;		_startTimer
  2332 ;; This function is called by:
  2333 ;;		_waitForCommand
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _getWiFiData
  2339  0242                     _getWiFiData:	
  2340                           
  2341                           ;main.c: 288: serialPrintBT("WIFI_START\r\n");
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _getWiFiData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2345  0242  30DE               	movlw	low (STR_1| (0+32768))
  2346  0243  00F2               	movwf	serialPrintBT@s
  2347  0244  3084               	movlw	high (STR_1| (0+32768))
  2348  0245  00F3               	movwf	serialPrintBT@s+1
  2349  0246  3184  240B  3182   	fcall	_serialPrintBT
  2350                           
  2351                           ;main.c: 289: setActivePeripheral(wifi);
  2352  0249  3001               	movlw	1
  2353  024A  3182  22A2  3182   	fcall	_setActivePeripheral
  2354                           
  2355                           ;main.c: 290: serialPrintPeripheral("AT+CWLAPOPT=1,12\r\n");
  2356  024D  3081               	movlw	low (STR_2| (0+32768))
  2357  024E  00F2               	movwf	serialPrintPeripheral@s
  2358  024F  3084               	movlw	high (STR_2| (0+32768))
  2359  0250  00F3               	movwf	serialPrintPeripheral@s+1
  2360  0251  3183  23F1  3182   	fcall	_serialPrintPeripheral
  2361                           
  2362                           ;main.c: 291: _delay((unsigned long)((500)*(32000000/4000.0)));
  2363  0254  3015               	movlw	21
  2364  0255  00F8               	movwf	??_getWiFiData+1
  2365  0256  304B               	movlw	75
  2366  0257  00F7               	movwf	??_getWiFiData
  2367  0258  30BE               	movlw	190
  2368  0259                     u1217:	
  2369  0259  0B89               	decfsz	9,f
  2370  025A  2A59               	goto	u1217
  2371  025B  0BF7               	decfsz	??_getWiFiData,f
  2372  025C  2A59               	goto	u1217
  2373  025D  0BF8               	decfsz	??_getWiFiData+1,f
  2374  025E  2A59               	goto	u1217
  2375  025F  3200               	nop2
  2376                           
  2377                           ;main.c: 292: serialPrintPeripheral("AT+CWLAP\r\n");
  2378  0260  3055               	movlw	low (STR_3| (0+32768))
  2379  0261  00F2               	movwf	serialPrintPeripheral@s
  2380  0262  3085               	movlw	high (STR_3| (0+32768))
  2381  0263  00F3               	movwf	serialPrintPeripheral@s+1
  2382  0264  3183  23F1  3182   	fcall	_serialPrintPeripheral
  2383                           
  2384                           ;main.c: 293: LATC7 = 1;
  2385  0267  0140               	movlb	0	; select bank0
  2386  0268  179A               	bsf	26,7	;volatile
  2387                           
  2388                           ;main.c: 294: _delay((unsigned long)((10)*(32000000/4000.0)));
  2389  0269  3068               	movlw	104
  2390  026A  00F7               	movwf	??_getWiFiData
  2391  026B  30E4               	movlw	228
  2392  026C                     u1227:	
  2393  026C  0B89               	decfsz	9,f
  2394  026D  2A6C               	goto	u1227
  2395  026E  0BF7               	decfsz	??_getWiFiData,f
  2396  026F  2A6C               	goto	u1227
  2397  0270  3200               	nop2
  2398                           
  2399                           ;main.c: 296: serialReadPeripheral();
  2400  0271  3185  25BB  3182   	fcall	_serialReadPeripheral
  2401                           
  2402                           ;main.c: 298: startTimer(3);
  2403  0274  3003               	movlw	3
  2404  0275  00F1               	movwf	startTimer@seconds
  2405  0276  3000               	movlw	0
  2406  0277  00F2               	movwf	startTimer@seconds+1
  2407  0278  3184  2494  3182   	fcall	_startTimer
  2408  027B                     l1170:	
  2409                           ;main.c: 299: while (!timerDone) {
  2410                           
  2411  027B  087C               	movf	_timerDone,w
  2412  027C  1D03               	btfss	3,2
  2413  027D  2A92               	goto	l1172
  2414                           
  2415                           ;main.c: 300: if (PIR3bits.RC1IF) {
  2416  027E  014E               	movlb	14	; select bank14
  2417  027F  1E8F               	btfss	15,5	;volatile
  2418  0280  2A7B               	goto	l1170
  2419                           
  2420                           ;main.c: 301: char c = serialReadPeripheral();
  2421  0281  3185  25BB  3182   	fcall	_serialReadPeripheral
  2422  0284  00F7               	movwf	??_getWiFiData
  2423  0285  0877               	movf	??_getWiFiData,w
  2424  0286  00F9               	movwf	getWiFiData@c
  2425                           
  2426                           ;main.c: 302: if (c == 'O') {
  2427  0287  304F               	movlw	79
  2428  0288  0679               	xorwf	getWiFiData@c,w
  2429  0289  1D03               	btfss	3,2
  2430  028A  2A8D               	goto	l1168
  2431                           
  2432                           ;main.c: 303: LATC7 = 0;
  2433  028B  0140               	movlb	0	; select bank0
  2434  028C  139A               	bcf	26,7	;volatile
  2435  028D                     l1168:	
  2436                           
  2437                           ;main.c: 304: }
  2438                           ;main.c: 305: serialWriteBT(c);
  2439  028D  0879               	movf	getWiFiData@c,w
  2440  028E  3185  25E7  3182   	fcall	_serialWriteBT
  2441  0291  2A7B               	goto	l1170
  2442  0292                     l1172:	
  2443                           
  2444                           ;main.c: 306: }
  2445                           ;main.c: 307: }
  2446                           ;main.c: 308: serialPrintBT("WIFI_END\r\n");
  2447  0292  303F               	movlw	low (STR_4| (0+32768))
  2448  0293  00F2               	movwf	serialPrintBT@s
  2449  0294  3085               	movlw	high (STR_4| (0+32768))
  2450  0295  00F3               	movwf	serialPrintBT@s+1
  2451  0296  3184  240B  3182   	fcall	_serialPrintBT
  2452                           
  2453                           ;main.c: 309: _delay((unsigned long)((10)*(32000000/4000.0)));
  2454  0299  3068               	movlw	104
  2455  029A  00F7               	movwf	??_getWiFiData
  2456  029B  30E4               	movlw	228
  2457  029C                     u1237:	
  2458  029C  0B89               	decfsz	9,f
  2459  029D  2A9C               	goto	u1237
  2460  029E  0BF7               	decfsz	??_getWiFiData,f
  2461  029F  2A9C               	goto	u1237
  2462  02A0  3200               	nop2
  2463  02A1  0008               	return
  2464  02A2                     __end_of_getWiFiData:	
  2465                           
  2466                           	psect	text8
  2467  0157                     __ptext8:	
  2468 ;; *************** function _getGSMData *****************
  2469 ;; Defined at:
  2470 ;;		line 312 in file "main.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2484 ;;      Params:         0       0       0       0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0
  2486 ;;      Temps:          2       0       0       0       0       0       0       0
  2487 ;;      Totals:         2       0       0       0       0       0       0       0
  2488 ;;Total ram usage:        2 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    3
  2491 ;; This function calls:
  2492 ;;		_serialPrintBT
  2493 ;;		_serialPrintPeripheral
  2494 ;;		_serialReadPeripheral
  2495 ;;		_serialWriteBT
  2496 ;;		_setActivePeripheral
  2497 ;;		_startTimer
  2498 ;; This function is called by:
  2499 ;;		_waitForCommand
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           
  2504                           ;psect for function _getGSMData
  2505  0157                     _getGSMData:	
  2506                           
  2507                           ;main.c: 313: serialPrintBT("GSM_START\r\n");
  2508                           
  2509                           ;incstack = 0
  2510                           ; Regs used in _getGSMData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2511  0157  3010               	movlw	low (STR_5| (0+32768))
  2512  0158  00F2               	movwf	serialPrintBT@s
  2513  0159  3085               	movlw	high (STR_5| (0+32768))
  2514  015A  00F3               	movwf	serialPrintBT@s+1
  2515  015B  3184  240B  3181   	fcall	_serialPrintBT
  2516                           
  2517                           ;main.c: 315: setActivePeripheral(gsm);
  2518  015E  3003               	movlw	3
  2519  015F  3182  22A2  3181   	fcall	_setActivePeripheral
  2520                           
  2521                           ;main.c: 316: serialPrintPeripheral("AT+CREG=2\r\n");
  2522  0162  3004               	movlw	low (STR_6| (0+32768))
  2523  0163  00F2               	movwf	serialPrintPeripheral@s
  2524  0164  3085               	movlw	high (STR_6| (0+32768))
  2525  0165  00F3               	movwf	serialPrintPeripheral@s+1
  2526  0166  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2527                           
  2528                           ;main.c: 317: _delay((unsigned long)((500)*(32000000/4000.0)));
  2529  0169  3015               	movlw	21
  2530  016A  00F8               	movwf	??_getGSMData+1
  2531  016B  304B               	movlw	75
  2532  016C  00F7               	movwf	??_getGSMData
  2533  016D  30BE               	movlw	190
  2534  016E                     u1247:	
  2535  016E  0B89               	decfsz	9,f
  2536  016F  296E               	goto	u1247
  2537  0170  0BF7               	decfsz	??_getGSMData,f
  2538  0171  296E               	goto	u1247
  2539  0172  0BF8               	decfsz	??_getGSMData+1,f
  2540  0173  296E               	goto	u1247
  2541  0174  3200               	nop2
  2542                           
  2543                           ;main.c: 318: serialPrintPeripheral("AT+CSQ\r\n");
  2544  0175  30CE               	movlw	low (STR_7| (0+32768))
  2545  0176  00F2               	movwf	serialPrintPeripheral@s
  2546  0177  3085               	movlw	high (STR_7| (0+32768))
  2547  0178  00F3               	movwf	serialPrintPeripheral@s+1
  2548  0179  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2549                           
  2550                           ;main.c: 319: _delay((unsigned long)((10)*(32000000/4000.0)));
  2551  017C  3068               	movlw	104
  2552  017D  00F7               	movwf	??_getGSMData
  2553  017E  30E4               	movlw	228
  2554  017F                     u1257:	
  2555  017F  0B89               	decfsz	9,f
  2556  0180  297F               	goto	u1257
  2557  0181  0BF7               	decfsz	??_getGSMData,f
  2558  0182  297F               	goto	u1257
  2559  0183  3200               	nop2
  2560                           
  2561                           ;main.c: 320: serialReadPeripheral();
  2562  0184  3185  25BB  3181   	fcall	_serialReadPeripheral
  2563                           
  2564                           ;main.c: 322: startTimer(1);
  2565  0187  3001               	movlw	1
  2566  0188  00F1               	movwf	startTimer@seconds
  2567  0189  3000               	movlw	0
  2568  018A  00F2               	movwf	startTimer@seconds+1
  2569  018B  3184  2494  3181   	fcall	_startTimer
  2570  018E                     l1188:	
  2571                           ;main.c: 323: while (!timerDone) {
  2572                           
  2573  018E  087C               	movf	_timerDone,w
  2574  018F  1D03               	btfss	3,2
  2575  0190  299B               	goto	l1190
  2576                           
  2577                           ;main.c: 324: if (PIR3bits.RC1IF) {
  2578  0191  014E               	movlb	14	; select bank14
  2579  0192  1E8F               	btfss	15,5	;volatile
  2580  0193  298E               	goto	l1188
  2581                           
  2582                           ;main.c: 325: serialWriteBT(serialReadPeripheral());
  2583  0194  3185  25BB  3181   	fcall	_serialReadPeripheral
  2584  0197  3185  25E7  3181   	fcall	_serialWriteBT
  2585  019A  298E               	goto	l1188
  2586  019B                     l1190:	
  2587                           
  2588                           ;main.c: 326: }
  2589                           ;main.c: 327: }
  2590                           ;main.c: 329: serialPrintPeripheral("AT+CREG?\r\n");
  2591  019B  3034               	movlw	low (STR_8| (0+32768))
  2592  019C  00F2               	movwf	serialPrintPeripheral@s
  2593  019D  3085               	movlw	high (STR_8| (0+32768))
  2594  019E  00F3               	movwf	serialPrintPeripheral@s+1
  2595  019F  3183  23F1  3181   	fcall	_serialPrintPeripheral
  2596                           
  2597                           ;main.c: 330: _delay((unsigned long)((10)*(32000000/4000.0)));
  2598  01A2  3068               	movlw	104
  2599  01A3  00F7               	movwf	??_getGSMData
  2600  01A4  30E4               	movlw	228
  2601  01A5                     u1267:	
  2602  01A5  0B89               	decfsz	9,f
  2603  01A6  29A5               	goto	u1267
  2604  01A7  0BF7               	decfsz	??_getGSMData,f
  2605  01A8  29A5               	goto	u1267
  2606  01A9  3200               	nop2
  2607                           
  2608                           ;main.c: 332: startTimer(1);
  2609  01AA  3001               	movlw	1
  2610  01AB  00F1               	movwf	startTimer@seconds
  2611  01AC  3000               	movlw	0
  2612  01AD  00F2               	movwf	startTimer@seconds+1
  2613  01AE  3184  2494  3181   	fcall	_startTimer
  2614  01B1                     l1198:	
  2615                           ;main.c: 333: while (!timerDone) {
  2616                           
  2617  01B1  087C               	movf	_timerDone,w
  2618  01B2  1D03               	btfss	3,2
  2619  01B3  29BE               	goto	l1200
  2620                           
  2621                           ;main.c: 334: if (PIR3bits.RC1IF) {
  2622  01B4  014E               	movlb	14	; select bank14
  2623  01B5  1E8F               	btfss	15,5	;volatile
  2624  01B6  29B1               	goto	l1198
  2625                           
  2626                           ;main.c: 335: serialWriteBT(serialReadPeripheral());
  2627  01B7  3185  25BB  3181   	fcall	_serialReadPeripheral
  2628  01BA  3185  25E7  3181   	fcall	_serialWriteBT
  2629  01BD  29B1               	goto	l1198
  2630  01BE                     l1200:	
  2631                           
  2632                           ;main.c: 336: }
  2633                           ;main.c: 337: }
  2634                           ;main.c: 339: serialPrintBT("GSM_END\r\n");
  2635  01BE  306B               	movlw	low (STR_9| (0+32768))
  2636  01BF  00F2               	movwf	serialPrintBT@s
  2637  01C0  3085               	movlw	high (STR_9| (0+32768))
  2638  01C1  00F3               	movwf	serialPrintBT@s+1
  2639  01C2  3184  240B  3181   	fcall	_serialPrintBT
  2640                           
  2641                           ;main.c: 340: _delay((unsigned long)((10)*(32000000/4000.0)));
  2642  01C5  3068               	movlw	104
  2643  01C6  00F7               	movwf	??_getGSMData
  2644  01C7  30E4               	movlw	228
  2645  01C8                     u1277:	
  2646  01C8  0B89               	decfsz	9,f
  2647  01C9  29C8               	goto	u1277
  2648  01CA  0BF7               	decfsz	??_getGSMData,f
  2649  01CB  29C8               	goto	u1277
  2650  01CC  3200               	nop2
  2651  01CD  0008               	return
  2652  01CE                     __end_of_getGSMData:	
  2653                           
  2654                           	psect	text9
  2655  03F1                     __ptext9:	
  2656 ;; *************** function _serialPrintPeripheral *****************
  2657 ;; Defined at:
  2658 ;;		line 139 in file "main.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  s               2    2[COMMON] PTR unsigned char 
  2661 ;;		 -> STR_38(23), STR_36(12), STR_35(7), waitForCommand@message(30), 
  2662 ;;		 -> STR_29(15), STR_21(3), STR_20(4), STR_19(10), 
  2663 ;;		 -> STR_18(12), STR_17(3), STR_16(7), STR_14(5), 
  2664 ;;		 -> STR_8(11), STR_7(9), STR_6(12), STR_3(11), 
  2665 ;;		 -> STR_2(19), 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  i               2    5[COMMON] int 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2677 ;;      Params:         2       0       0       0       0       0       0       0
  2678 ;;      Locals:         2       0       0       0       0       0       0       0
  2679 ;;      Temps:          1       0       0       0       0       0       0       0
  2680 ;;      Totals:         5       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        5 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		_serialWritePeripheral
  2686 ;; This function is called by:
  2687 ;;		_getWiFiData
  2688 ;;		_getGSMData
  2689 ;;		_sendSigfox
  2690 ;;		_sendSMS
  2691 ;;		_getSigfoxData
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _serialPrintPeripheral
  2697  03F1                     _serialPrintPeripheral:	
  2698                           
  2699                           ;main.c: 140: int i = 0;
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _serialPrintPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2703  03F1  01F5               	clrf	serialPrintPeripheral@i
  2704  03F2  01F6               	clrf	serialPrintPeripheral@i+1
  2705  03F3                     l1106:	
  2706                           ;main.c: 141: while (s[i] != '\0') {
  2707                           
  2708  03F3  0872               	movf	serialPrintPeripheral@s,w
  2709  03F4  0775               	addwf	serialPrintPeripheral@i,w
  2710  03F5  0084               	movwf	4
  2711  03F6  0873               	movf	serialPrintPeripheral@s+1,w
  2712  03F7  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2713  03F8  0085               	movwf	5
  2714  03F9  0012               	moviw fsr0++
  2715  03FA  1903               	btfsc	3,2
  2716  03FB  0008               	return
  2717                           
  2718                           ;main.c: 142: serialWritePeripheral(s[i]);
  2719  03FC  0872               	movf	serialPrintPeripheral@s,w
  2720  03FD  0775               	addwf	serialPrintPeripheral@i,w
  2721  03FE  0084               	movwf	4
  2722  03FF  0873               	movf	serialPrintPeripheral@s+1,w
  2723  0400  3D76               	addwfc	serialPrintPeripheral@i+1,w
  2724  0401  0085               	movwf	5
  2725  0402  0800               	movf	0,w	;code access
  2726  0403  3185  25DF  3183   	fcall	_serialWritePeripheral
  2727                           
  2728                           ;main.c: 143: i++;
  2729  0406  3001               	movlw	1
  2730  0407  07F5               	addwf	serialPrintPeripheral@i,f
  2731  0408  3000               	movlw	0
  2732  0409  3DF6               	addwfc	serialPrintPeripheral@i+1,f
  2733  040A  2BF3               	goto	l1106
  2734  040B                     __end_of_serialPrintPeripheral:	
  2735                           
  2736                           	psect	text10
  2737  05DF                     __ptext10:	
  2738 ;; *************** function _serialWritePeripheral *****************
  2739 ;; Defined at:
  2740 ;;		line 133 in file "main.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  c               1    wreg     unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  c               1    1[COMMON] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2754 ;;      Params:         0       0       0       0       0       0       0       0
  2755 ;;      Locals:         1       0       0       0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0
  2757 ;;      Totals:         1       0       0       0       0       0       0       0
  2758 ;;Total ram usage:        1 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_serialPrintPeripheral
  2765 ;;		_sendSMS
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _serialWritePeripheral
  2771  05DF                     _serialWritePeripheral:	
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in _serialWritePeripheral: [wreg]
  2775                           ;serialWritePeripheral@c stored from wreg
  2776  05DF  00F1               	movwf	serialWritePeripheral@c
  2777  05E0                     l102:	
  2778                           ;main.c: 134: while (!PIR3bits.TX1IF) {
  2779                           
  2780  05E0  014E               	movlb	14	; select bank14
  2781  05E1  1E0F               	btfss	15,4	;volatile
  2782  05E2  2DE0               	goto	l102
  2783                           
  2784                           ;main.c: 135: }
  2785                           ;main.c: 136: TX1REG = c;
  2786  05E3  0871               	movf	serialWritePeripheral@c,w
  2787  05E4  0142               	movlb	2	; select bank2
  2788  05E5  009A               	movwf	26	;volatile
  2789  05E6  0008               	return
  2790  05E7                     __end_of_serialWritePeripheral:	
  2791                           
  2792                           	psect	text11
  2793  02FB                     __ptext11:	
  2794 ;; *************** function _getGPSData *****************
  2795 ;; Defined at:
  2796 ;;		line 343 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  c               1    9[COMMON] unsigned char 
  2801 ;;  found           1    8[COMMON] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2811 ;;      Params:         0       0       0       0       0       0       0       0
  2812 ;;      Locals:         2       0       0       0       0       0       0       0
  2813 ;;      Temps:          1       0       0       0       0       0       0       0
  2814 ;;      Totals:         3       0       0       0       0       0       0       0
  2815 ;;Total ram usage:        3 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    3
  2818 ;; This function calls:
  2819 ;;		_serialFindPeripheral
  2820 ;;		_serialPrintBT
  2821 ;;		_serialReadPeripheral
  2822 ;;		_serialWriteBT
  2823 ;;		_setActivePeripheral
  2824 ;;		_startTimer
  2825 ;; This function is called by:
  2826 ;;		_waitForCommand
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _getGPSData
  2832  02FB                     _getGPSData:	
  2833                           
  2834                           ;main.c: 344: setActivePeripheral(gps);
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in _getGPSData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2838  02FB  3000               	movlw	0
  2839  02FC  3182  22A2  3182   	fcall	_setActivePeripheral
  2840                           
  2841                           ;main.c: 345: serialPrintBT("GPS_START\r\n");
  2842  02FF  301C               	movlw	low (STR_10| (0+32768))
  2843  0300  00F2               	movwf	serialPrintBT@s
  2844  0301  3085               	movlw	high (STR_10| (0+32768))
  2845  0302  00F3               	movwf	serialPrintBT@s+1
  2846  0303  3184  240B  3182   	fcall	_serialPrintBT
  2847                           
  2848                           ;main.c: 346: char found = 0;
  2849  0306  01F8               	clrf	getGPSData@found
  2850                           
  2851                           ;main.c: 347: startTimer(3);
  2852  0307  3003               	movlw	3
  2853  0308  00F1               	movwf	startTimer@seconds
  2854  0309  3000               	movlw	0
  2855  030A  00F2               	movwf	startTimer@seconds+1
  2856  030B  3184  2494  3182   	fcall	_startTimer
  2857                           
  2858                           ;main.c: 348: while (!timerDone && !found) {
  2859  030E  2B31               	goto	l1220
  2860  030F                     l195:	
  2861                           
  2862                           ;main.c: 349: if (PIR3bits.RC1IF) {
  2863  030F  014E               	movlb	14	; select bank14
  2864  0310  1E8F               	btfss	15,5	;volatile
  2865  0311  2B31               	goto	l1220
  2866                           
  2867                           ;main.c: 350: if (serialFindPeripheral("$GPGGA,")) {
  2868  0312  30D7               	movlw	low (STR_11| (0+32768))
  2869  0313  00F1               	movwf	serialFindPeripheral@s
  2870  0314  3085               	movlw	high (STR_11| (0+32768))
  2871  0315  00F2               	movwf	serialFindPeripheral@s+1
  2872  0316  3183  23CF  3182   	fcall	_serialFindPeripheral
  2873  0319  3A00               	xorlw	0
  2874  031A  1903               	skipnz
  2875  031B  2B31               	goto	l1220
  2876                           
  2877                           ;main.c: 351: char c = 'c';
  2878  031C  3063               	movlw	99
  2879  031D  00F7               	movwf	??_getGPSData
  2880  031E  0877               	movf	??_getGPSData,w
  2881  031F  00F9               	movwf	getGPSData@c
  2882  0320                     l1218:	
  2883                           ;main.c: 352: while (c != '\n') {
  2884                           
  2885  0320  300A               	movlw	10
  2886  0321  0679               	xorwf	getGPSData@c,w
  2887  0322  1903               	btfsc	3,2
  2888  0323  2B2F               	goto	l200
  2889                           
  2890                           ;main.c: 353: c = serialReadPeripheral();
  2891  0324  3185  25BB  3182   	fcall	_serialReadPeripheral
  2892  0327  00F7               	movwf	??_getGPSData
  2893  0328  0877               	movf	??_getGPSData,w
  2894  0329  00F9               	movwf	getGPSData@c
  2895                           
  2896                           ;main.c: 354: serialWriteBT(c);
  2897  032A  0879               	movf	getGPSData@c,w
  2898  032B  3185  25E7  3182   	fcall	_serialWriteBT
  2899  032E  2B20               	goto	l1218
  2900  032F                     l200:	
  2901                           
  2902                           ;main.c: 355: }
  2903                           ;main.c: 356: found = 1;
  2904  032F  01F8               	clrf	getGPSData@found
  2905  0330  0AF8               	incf	getGPSData@found,f
  2906  0331                     l1220:	
  2907  0331  087C               	movf	_timerDone,w
  2908  0332  1903               	btfsc	3,2
  2909  0333  0878               	movf	getGPSData@found,w
  2910  0334  1903               	btfsc	3,2
  2911  0335  2B0F               	goto	l195
  2912                           
  2913                           ;main.c: 357: }
  2914                           ;main.c: 358: }
  2915                           ;main.c: 359: }
  2916                           ;main.c: 360: serialPrintBT("GPS_END\r\n");
  2917  0336  3075               	movlw	low (STR_12| (0+32768))
  2918  0337  00F2               	movwf	serialPrintBT@s
  2919  0338  3085               	movlw	high (STR_12| (0+32768))
  2920  0339  00F3               	movwf	serialPrintBT@s+1
  2921  033A  3184  240B  3182   	fcall	_serialPrintBT
  2922                           
  2923                           ;main.c: 361: _delay((unsigned long)((10)*(32000000/4000.0)));
  2924  033D  3068               	movlw	104
  2925  033E  00F7               	movwf	??_getGPSData
  2926  033F  30E4               	movlw	228
  2927  0340                     u1287:	
  2928  0340  0B89               	decfsz	9,f
  2929  0341  2B40               	goto	u1287
  2930  0342  0BF7               	decfsz	??_getGPSData,f
  2931  0343  2B40               	goto	u1287
  2932  0344  3200               	nop2
  2933  0345  0008               	return
  2934  0346                     __end_of_getGPSData:	
  2935                           
  2936                           	psect	text12
  2937  0494                     __ptext12:	
  2938 ;; *************** function _startTimer *****************
  2939 ;; Defined at:
  2940 ;;		line 274 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  seconds         2    1[COMMON] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2954 ;;      Params:         2       0       0       0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0
  2957 ;;      Totals:         2       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        2 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_getWiFiData
  2965 ;;		_getGSMData
  2966 ;;		_getGPSData
  2967 ;;		_waitForCommand
  2968 ;;		_getSigfoxData
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _startTimer
  2974  0494                     _startTimer:	
  2975                           
  2976                           ;main.c: 277: timerDone = 0;
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _startTimer: [wreg+status,2]
  2980  0494  01FC               	clrf	_timerDone
  2981                           
  2982                           ;main.c: 278: timerSetpoint = seconds;
  2983  0495  0872               	movf	startTimer@seconds+1,w
  2984  0496  0140               	movlb	0	; select bank0
  2985  0497  00EC               	movwf	_timerSetpoint+1
  2986  0498  0871               	movf	startTimer@seconds,w
  2987  0499  00EB               	movwf	_timerSetpoint
  2988                           
  2989                           ;main.c: 279: timerActual = 0;
  2990  049A  01E9               	clrf	_timerActual
  2991  049B  01EA               	clrf	_timerActual+1
  2992                           
  2993                           ;main.c: 281: PIE0bits.TMR0IE = 1;
  2994  049C  014E               	movlb	14	; select bank14
  2995  049D  1696               	bsf	22,5	;volatile
  2996                           
  2997                           ;main.c: 282: T0CON0 = 0b00010000;
  2998  049E  3010               	movlw	16
  2999  049F  014B               	movlb	11	; select bank11
  3000  04A0  009E               	movwf	30	;volatile
  3001                           
  3002                           ;main.c: 283: T0CON1 = 0b01000111;
  3003  04A1  3047               	movlw	71
  3004  04A2  009F               	movwf	31	;volatile
  3005                           
  3006                           ;main.c: 284: T0CON0bits.T0EN = 1;
  3007  04A3  179E               	bsf	30,7	;volatile
  3008  04A4  0008               	return
  3009  04A5                     __end_of_startTimer:	
  3010                           
  3011                           	psect	text13
  3012  02A2                     __ptext13:	
  3013 ;; *************** function _setActivePeripheral *****************
  3014 ;; Defined at:
  3015 ;;		line 169 in file "main.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  peri            1    wreg     enum E8210
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  peri            1    1[COMMON] enum E8210
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3029 ;;      Params:         0       0       0       0       0       0       0       0
  3030 ;;      Locals:         1       0       0       0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0
  3032 ;;      Totals:         1       0       0       0       0       0       0       0
  3033 ;;Total ram usage:        1 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;;		_getWiFiData
  3041 ;;		_getGSMData
  3042 ;;		_getGPSData
  3043 ;;		_sendSigfox
  3044 ;;		_sendSMS
  3045 ;;		_getSigfoxData
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _setActivePeripheral
  3051  02A2                     _setActivePeripheral:	
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _setActivePeripheral: [wreg-fsr0h+status,2+status,0]
  3055                           ;setActivePeripheral@peri stored from wreg
  3056  02A2  00F1               	movwf	setActivePeripheral@peri
  3057                           
  3058                           ;main.c: 178: RC6PPS = 0x00;
  3059  02A3  017E               	movlb	62	; select bank62
  3060  02A4  01A6               	clrf	38	;volatile
  3061                           
  3062                           ;main.c: 179: RC1PPS = 0x00;
  3063  02A5  01A1               	clrf	33	;volatile
  3064                           
  3065                           ;main.c: 180: RA4PPS = 0x00;
  3066  02A6  0194               	clrf	20	;volatile
  3067                           
  3068                           ;main.c: 181: RC4PPS = 0x00;
  3069  02A7  01A4               	clrf	36	;volatile
  3070                           
  3071                           ;main.c: 184: switch (peri) {
  3072  02A8  2AE6               	goto	l1098
  3073  02A9                     l1064:	
  3074                           ;main.c: 185: case sigfox:
  3075                           
  3076                           
  3077                           ;main.c: 186: {
  3078                           ;main.c: 187: RC6PPS = 0x0F;
  3079  02A9  300F               	movlw	15
  3080  02AA  017E               	movlb	62	; select bank62
  3081  02AB  00A6               	movwf	38	;volatile
  3082                           
  3083                           ;main.c: 188: SP1BRG = 207;
  3084  02AC  3000               	movlw	0
  3085  02AD  0142               	movlb	2	; select bank2
  3086  02AE  009C               	movwf	28	;volatile
  3087  02AF  30CF               	movlw	207
  3088  02B0  009B               	movwf	27	;volatile
  3089                           
  3090                           ;main.c: 189: TRISC3 = 1;
  3091  02B1  0140               	movlb	0	; select bank0
  3092  02B2  1594               	bsf	20,3	;volatile
  3093                           
  3094                           ;main.c: 190: RX1DTPPSbits.RX1DTPPS = 0x13;
  3095  02B3  017D               	movlb	61	; select bank61
  3096  02B4  084B               	movf	75,w	;volatile
  3097  02B5  39C0               	andlw	-64
  3098  02B6  3813               	iorlw	19
  3099  02B7  2AE4               	goto	L3
  3100  02B8                     l1072:	
  3101                           ;main.c: 192: }
  3102                           ;main.c: 193: case gsm:
  3103                           
  3104                           ;main.c: 191: break;
  3105                           
  3106                           
  3107                           ;main.c: 194: {
  3108                           ;main.c: 195: RC1PPS = 0x0F;
  3109  02B8  300F               	movlw	15
  3110  02B9  017E               	movlb	62	; select bank62
  3111  02BA  00A1               	movwf	33	;volatile
  3112                           
  3113                           ;main.c: 196: SP1BRG = 16;
  3114  02BB  3000               	movlw	0
  3115  02BC  0142               	movlb	2	; select bank2
  3116  02BD  009C               	movwf	28	;volatile
  3117  02BE  3010               	movlw	16
  3118  02BF  009B               	movwf	27	;volatile
  3119                           
  3120                           ;main.c: 197: TRISC0 = 1;
  3121  02C0  0140               	movlb	0	; select bank0
  3122  02C1  1414               	bsf	20,0	;volatile
  3123                           
  3124                           ;main.c: 198: RX1DTPPSbits.RX1DTPPS = 0x10;
  3125  02C2  017D               	movlb	61	; select bank61
  3126  02C3  084B               	movf	75,w	;volatile
  3127  02C4  39C0               	andlw	-64
  3128  02C5  3810               	iorlw	16
  3129  02C6  2AE4               	goto	L3
  3130  02C7                     l1080:	
  3131                           ;main.c: 200: }
  3132                           ;main.c: 201: case wifi:
  3133                           
  3134                           ;main.c: 199: break;
  3135                           
  3136                           
  3137                           ;main.c: 202: {
  3138                           ;main.c: 203: RA4PPS = 0x0F;
  3139  02C7  300F               	movlw	15
  3140  02C8  017E               	movlb	62	; select bank62
  3141  02C9  0094               	movwf	20	;volatile
  3142                           
  3143                           ;main.c: 204: SP1BRG = 16;
  3144  02CA  3000               	movlw	0
  3145  02CB  0142               	movlb	2	; select bank2
  3146  02CC  009C               	movwf	28	;volatile
  3147  02CD  3010               	movlw	16
  3148  02CE  009B               	movwf	27	;volatile
  3149                           
  3150                           ;main.c: 205: TRISA5 = 1;
  3151  02CF  0140               	movlb	0	; select bank0
  3152  02D0  1692               	bsf	18,5	;volatile
  3153                           
  3154                           ;main.c: 206: RX1DTPPSbits.RX1DTPPS = 0x05;
  3155  02D1  017D               	movlb	61	; select bank61
  3156  02D2  084B               	movf	75,w	;volatile
  3157  02D3  39C0               	andlw	-64
  3158  02D4  3805               	iorlw	5
  3159  02D5  2AE4               	goto	L3
  3160  02D6                     l1088:	
  3161                           ;main.c: 208: }
  3162                           ;main.c: 209: case gps:
  3163                           
  3164                           ;main.c: 207: break;
  3165                           
  3166                           
  3167                           ;main.c: 210: {
  3168                           ;main.c: 211: RC4PPS = 0x0F;
  3169  02D6  300F               	movlw	15
  3170  02D7  017E               	movlb	62	; select bank62
  3171  02D8  00A4               	movwf	36	;volatile
  3172                           
  3173                           ;main.c: 212: SP1BRG = 207;
  3174  02D9  3000               	movlw	0
  3175  02DA  0142               	movlb	2	; select bank2
  3176  02DB  009C               	movwf	28	;volatile
  3177  02DC  30CF               	movlw	207
  3178  02DD  009B               	movwf	27	;volatile
  3179                           
  3180                           ;main.c: 213: TRISC5 = 1;
  3181  02DE  0140               	movlb	0	; select bank0
  3182  02DF  1694               	bsf	20,5	;volatile
  3183                           
  3184                           ;main.c: 214: RX1DTPPSbits.RX1DTPPS = 0x15;
  3185  02E0  017D               	movlb	61	; select bank61
  3186  02E1  084B               	movf	75,w	;volatile
  3187  02E2  39C0               	andlw	-64
  3188  02E3  3815               	iorlw	21
  3189  02E4                     L3:	
  3190  02E4  00CB               	movwf	75	;volatile
  3191                           
  3192                           ;main.c: 216: }
  3193                           ;main.c: 217: }
  3194                           
  3195                           ;main.c: 215: break;
  3196  02E5  2AF4               	goto	l131
  3197  02E6                     l1098:	
  3198  02E6  0871               	movf	setActivePeripheral@peri,w
  3199                           
  3200                           ; Switch size 1, requested type "space"
  3201                           ; Number of cases is 4, Range of values is 0 to 3
  3202                           ; switch strategies available:
  3203                           ; Name         Instructions Cycles
  3204                           ; simple_byte           13     7 (average)
  3205                           ; direct_byte           14     6 (fixed)
  3206                           ; jumptable            260     6 (fixed)
  3207                           ;	Chosen strategy is simple_byte
  3208  02E7  3A00               	xorlw	0	; case 0
  3209  02E8  1903               	skipnz
  3210  02E9  2AD6               	goto	l1088
  3211  02EA  3A01               	xorlw	1	; case 1
  3212  02EB  1903               	skipnz
  3213  02EC  2AC7               	goto	l1080
  3214  02ED  3A03               	xorlw	3	; case 2
  3215  02EE  1903               	skipnz
  3216  02EF  2AA9               	goto	l1064
  3217  02F0  3A01               	xorlw	1	; case 3
  3218  02F1  1903               	skipnz
  3219  02F2  2AB8               	goto	l1072
  3220  02F3  2AF4               	goto	l131
  3221  02F4                     l131:	
  3222                           
  3223                           ;main.c: 219: TX1STAbits.BRGH = 1;
  3224  02F4  0142               	movlb	2	; select bank2
  3225  02F5  151E               	bsf	30,2	;volatile
  3226                           
  3227                           ;main.c: 220: TX1STAbits.SYNC = 0;
  3228  02F6  121E               	bcf	30,4	;volatile
  3229                           
  3230                           ;main.c: 221: RC1STAbits.SPEN = 1;
  3231  02F7  179D               	bsf	29,7	;volatile
  3232                           
  3233                           ;main.c: 222: TX1STAbits.TXEN = 1;
  3234  02F8  169E               	bsf	30,5	;volatile
  3235                           
  3236                           ;main.c: 223: RC1STAbits.CREN = 1;
  3237  02F9  161D               	bsf	29,4	;volatile
  3238  02FA  0008               	return
  3239  02FB                     __end_of_setActivePeripheral:	
  3240                           
  3241                           	psect	text14
  3242  040B                     __ptext14:	
  3243 ;; *************** function _serialPrintBT *****************
  3244 ;; Defined at:
  3245 ;;		line 232 in file "main.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  s               2    2[COMMON] PTR unsigned char 
  3248 ;;		 -> STR_32(14), STR_30(14), STR_27(14), STR_25(14), 
  3249 ;;		 -> STR_23(14), STR_15(13), STR_13(15), STR_12(10), 
  3250 ;;		 -> STR_10(12), STR_9(10), STR_5(12), STR_4(11), 
  3251 ;;		 -> STR_1(13), 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  i               2    5[COMMON] int 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3263 ;;      Params:         2       0       0       0       0       0       0       0
  3264 ;;      Locals:         2       0       0       0       0       0       0       0
  3265 ;;      Temps:          1       0       0       0       0       0       0       0
  3266 ;;      Totals:         5       0       0       0       0       0       0       0
  3267 ;;Total ram usage:        5 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    2
  3270 ;; This function calls:
  3271 ;;		_serialWriteBT
  3272 ;; This function is called by:
  3273 ;;		_getWiFiData
  3274 ;;		_getGSMData
  3275 ;;		_getGPSData
  3276 ;;		_waitForCommand
  3277 ;;		_getSigfoxData
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _serialPrintBT
  3283  040B                     _serialPrintBT:	
  3284                           
  3285                           ;main.c: 233: int i = 0;
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _serialPrintBT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3289  040B  01F5               	clrf	serialPrintBT@i
  3290  040C  01F6               	clrf	serialPrintBT@i+1
  3291  040D                     l1130:	
  3292                           ;main.c: 234: while (s[i] != '\0') {
  3293                           
  3294  040D  0872               	movf	serialPrintBT@s,w
  3295  040E  0775               	addwf	serialPrintBT@i,w
  3296  040F  0084               	movwf	4
  3297  0410  0873               	movf	serialPrintBT@s+1,w
  3298  0411  3D76               	addwfc	serialPrintBT@i+1,w
  3299  0412  0085               	movwf	5
  3300  0413  0012               	moviw fsr0++
  3301  0414  1903               	btfsc	3,2
  3302  0415  0008               	return
  3303                           
  3304                           ;main.c: 235: serialWriteBT(s[i]);
  3305  0416  0872               	movf	serialPrintBT@s,w
  3306  0417  0775               	addwf	serialPrintBT@i,w
  3307  0418  0084               	movwf	4
  3308  0419  0873               	movf	serialPrintBT@s+1,w
  3309  041A  3D76               	addwfc	serialPrintBT@i+1,w
  3310  041B  0085               	movwf	5
  3311  041C  0800               	movf	0,w	;code access
  3312  041D  3185  25E7  3184   	fcall	_serialWriteBT
  3313                           
  3314                           ;main.c: 236: i++;
  3315  0420  3001               	movlw	1
  3316  0421  07F5               	addwf	serialPrintBT@i,f
  3317  0422  3000               	movlw	0
  3318  0423  3DF6               	addwfc	serialPrintBT@i+1,f
  3319  0424  2C0D               	goto	l1130
  3320  0425                     __end_of_serialPrintBT:	
  3321                           
  3322                           	psect	text15
  3323  05E7                     __ptext15:	
  3324 ;; *************** function _serialWriteBT *****************
  3325 ;; Defined at:
  3326 ;;		line 226 in file "main.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  c               1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  c               1    1[COMMON] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3340 ;;      Params:         0       0       0       0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0
  3343 ;;      Totals:         1       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_serialPrintBT
  3351 ;;		_getWiFiData
  3352 ;;		_getGSMData
  3353 ;;		_getGPSData
  3354 ;;		_waitForCommand
  3355 ;;		_getSigfoxData
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _serialWriteBT
  3361  05E7                     _serialWriteBT:	
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _serialWriteBT: [wreg]
  3365                           ;serialWriteBT@c stored from wreg
  3366  05E7  00F1               	movwf	serialWriteBT@c
  3367  05E8                     l138:	
  3368                           ;main.c: 227: while (!PIR3bits.TX2IF) {
  3369                           
  3370  05E8  014E               	movlb	14	; select bank14
  3371  05E9  1F0F               	btfss	15,6	;volatile
  3372  05EA  2DE8               	goto	l138
  3373                           
  3374                           ;main.c: 228: }
  3375                           ;main.c: 229: TX2REG = c;
  3376  05EB  0871               	movf	serialWriteBT@c,w
  3377  05EC  0154               	movlb	20	; select bank20
  3378  05ED  009A               	movwf	26	;volatile
  3379  05EE  0008               	return
  3380  05EF                     __end_of_serialWriteBT:	
  3381                           
  3382                           	psect	text16
  3383  03CF                     __ptext16:	
  3384 ;; *************** function _serialFindPeripheral *****************
  3385 ;; Defined at:
  3386 ;;		line 157 in file "main.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  s               2    1[COMMON] PTR unsigned char 
  3389 ;;		 -> STR_11(8), 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  i               2    4[COMMON] int 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      unsigned char 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3401 ;;      Params:         2       0       0       0       0       0       0       0
  3402 ;;      Locals:         2       0       0       0       0       0       0       0
  3403 ;;      Temps:          1       0       0       0       0       0       0       0
  3404 ;;      Totals:         5       0       0       0       0       0       0       0
  3405 ;;Total ram usage:        5 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    2
  3408 ;; This function calls:
  3409 ;;		_serialReadPeripheral
  3410 ;; This function is called by:
  3411 ;;		_getGPSData
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _serialFindPeripheral
  3417  03CF                     _serialFindPeripheral:	
  3418                           
  3419                           ;main.c: 158: int i = 0;
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _serialFindPeripheral: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3423  03CF  01F4               	clrf	serialFindPeripheral@i
  3424  03D0  01F5               	clrf	serialFindPeripheral@i+1
  3425  03D1                     l1118:	
  3426                           ;main.c: 159: while (s[i] != '\0') {
  3427                           
  3428  03D1  0871               	movf	serialFindPeripheral@s,w
  3429  03D2  0774               	addwf	serialFindPeripheral@i,w
  3430  03D3  0084               	movwf	4
  3431  03D4  0872               	movf	serialFindPeripheral@s+1,w
  3432  03D5  3D75               	addwfc	serialFindPeripheral@i+1,w
  3433  03D6  0085               	movwf	5
  3434  03D7  0012               	moviw fsr0++
  3435  03D8  1903               	btfsc	3,2
  3436  03D9  2BEF               	goto	l1120
  3437                           
  3438                           ;main.c: 160: if (serialReadPeripheral() == s[i]) {
  3439  03DA  0871               	movf	serialFindPeripheral@s,w
  3440  03DB  0774               	addwf	serialFindPeripheral@i,w
  3441  03DC  0084               	movwf	4
  3442  03DD  0872               	movf	serialFindPeripheral@s+1,w
  3443  03DE  3D75               	addwfc	serialFindPeripheral@i+1,w
  3444  03DF  0085               	movwf	5
  3445  03E0  0800               	movf	0,w	;code access
  3446  03E1  00F3               	movwf	??_serialFindPeripheral
  3447  03E2  3185  25BB  3183   	fcall	_serialReadPeripheral
  3448  03E5  0673               	xorwf	??_serialFindPeripheral,w
  3449  03E6  1D03               	skipz
  3450  03E7  2BED               	goto	l1114
  3451                           
  3452                           ;main.c: 161: i++;
  3453  03E8  3001               	movlw	1
  3454  03E9  07F4               	addwf	serialFindPeripheral@i,f
  3455  03EA  3000               	movlw	0
  3456  03EB  3DF5               	addwfc	serialFindPeripheral@i+1,f
  3457                           
  3458                           ;main.c: 162: } else {
  3459  03EC  2BD1               	goto	l1118
  3460  03ED                     l1114:	
  3461                           
  3462                           ;main.c: 163: return 0;
  3463  03ED  3000               	movlw	0
  3464  03EE  0008               	return
  3465  03EF                     l1120:	
  3466                           
  3467                           ;main.c: 164: }
  3468                           ;main.c: 165: }
  3469                           ;main.c: 166: return 1;
  3470  03EF  3001               	movlw	1
  3471  03F0  0008               	return
  3472  03F1                     __end_of_serialFindPeripheral:	
  3473                           
  3474                           	psect	text17
  3475  05BB                     __ptext17:	
  3476 ;; *************** function _serialReadPeripheral *****************
  3477 ;; Defined at:
  3478 ;;		line 147 in file "main.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      unsigned char 
  3485 ;; Registers used:
  3486 ;;		wreg
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3492 ;;      Params:         0       0       0       0       0       0       0       0
  3493 ;;      Locals:         0       0       0       0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0
  3495 ;;      Totals:         0       0       0       0       0       0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_serialFindPeripheral
  3503 ;;		_getWiFiData
  3504 ;;		_getGSMData
  3505 ;;		_getGPSData
  3506 ;;		_waitForCommand
  3507 ;;		_getSigfoxData
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _serialReadPeripheral
  3513  05BB                     _serialReadPeripheral:	
  3514  05BB                     l114:	
  3515                           ;main.c: 148: while (!PIR3bits.RC1IF) {
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _serialReadPeripheral: [wreg]
  3519                           
  3520  05BB  014E               	movlb	14	; select bank14
  3521  05BC  1E8F               	btfss	15,5	;volatile
  3522  05BD  2DBB               	goto	l114
  3523                           
  3524                           ;main.c: 149: }
  3525                           ;main.c: 150: if (1 == RC1STAbits.OERR) {
  3526  05BE  0142               	movlb	2	; select bank2
  3527  05BF  1C9D               	btfss	29,1	;volatile
  3528  05C0  2DC3               	goto	l1054
  3529                           
  3530                           ;main.c: 151: RC1STAbits.SPEN = 0;
  3531  05C1  139D               	bcf	29,7	;volatile
  3532                           
  3533                           ;main.c: 152: RC1STAbits.SPEN = 1;
  3534  05C2  179D               	bsf	29,7	;volatile
  3535  05C3                     l1054:	
  3536                           
  3537                           ;main.c: 153: }
  3538                           ;main.c: 154: return RC1REG;
  3539  05C3  0819               	movf	25,w	;volatile
  3540  05C4  0008               	return
  3541  05C5                     __end_of_serialReadPeripheral:	
  3542                           
  3543                           	psect	text18
  3544  046B                     __ptext18:	
  3545 ;; *************** function _initBTSerial *****************
  3546 ;; Defined at:
  3547 ;;		line 115 in file "main.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3561 ;;      Params:         0       0       0       0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0
  3564 ;;      Totals:         0       0       0       0       0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _initBTSerial
  3577  046B                     _initBTSerial:	
  3578                           
  3579                           ;main.c: 120: RB6PPS = 0x11;
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _initBTSerial: [wreg+status,2+status,0]
  3583  046B  3011               	movlw	17
  3584  046C  017E               	movlb	62	; select bank62
  3585  046D  009E               	movwf	30	;volatile
  3586                           
  3587                           ;main.c: 121: TX2STAbits.BRGH = 1;
  3588  046E  0154               	movlb	20	; select bank20
  3589  046F  151E               	bsf	30,2	;volatile
  3590                           
  3591                           ;main.c: 122: SP2BRG = 16;
  3592  0470  3000               	movlw	0
  3593  0471  009C               	movwf	28	;volatile
  3594  0472  3010               	movlw	16
  3595  0473  009B               	movwf	27	;volatile
  3596                           
  3597                           ;main.c: 123: TX2STAbits.SYNC = 0;
  3598  0474  121E               	bcf	30,4	;volatile
  3599                           
  3600                           ;main.c: 124: RC2STAbits.SPEN = 1;
  3601  0475  179D               	bsf	29,7	;volatile
  3602                           
  3603                           ;main.c: 125: TX2STAbits.TXEN = 1;
  3604  0476  169E               	bsf	30,5	;volatile
  3605                           
  3606                           ;main.c: 128: TRISB5 = 1;
  3607  0477  0140               	movlb	0	; select bank0
  3608  0478  1693               	bsf	19,5	;volatile
  3609                           
  3610                           ;main.c: 129: RX2DTPPSbits.RX2DTPPS = 0x0D;
  3611  0479  017D               	movlb	61	; select bank61
  3612  047A  084D               	movf	77,w	;volatile
  3613  047B  39C0               	andlw	-64
  3614  047C  380D               	iorlw	13
  3615  047D  00CD               	movwf	77	;volatile
  3616                           
  3617                           ;main.c: 130: RC2STAbits.CREN = 1;
  3618  047E  0154               	movlb	20	; select bank20
  3619  047F  161D               	bsf	29,4	;volatile
  3620  0480  0008               	return
  3621  0481                     __end_of_initBTSerial:	
  3622                           
  3623                           	psect	intentry
  3624  0004                     __pintentry:	
  3625 ;; *************** function _timerCount *****************
  3626 ;; Defined at:
  3627 ;;		line 262 in file "main.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3641 ;;      Params:         0       0       0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0
  3643 ;;      Temps:          1       0       0       0       0       0       0       0
  3644 ;;      Totals:         1       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        1 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		Interrupt level 1
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654  0004                     _timerCount:	
  3655                           
  3656                           ;incstack = 0
  3657  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3658                           
  3659                           ; Regs used in _timerCount: [wreg]
  3660  0005  3180               	pagesel	$
  3661  0006  0140               	movlb	0	; select bank0
  3662  0007  087F               	movf	127,w
  3663  0008  00F0               	movwf	??_timerCount
  3664                           
  3665                           ;main.c: 264: if (PIR0bits.TMR0IF) {
  3666  0009  014E               	movlb	14	; select bank14
  3667  000A  1E8C               	btfss	12,5	;volatile
  3668  000B  2813               	goto	i1l167
  3669                           
  3670                           ;main.c: 265: timerActual++;
  3671  000C  3001               	movlw	1
  3672  000D  0140               	movlb	0	; select bank0
  3673  000E  07E9               	addwf	_timerActual,f
  3674  000F  3000               	movlw	0
  3675  0010  3DEA               	addwfc	_timerActual+1,f
  3676                           
  3677                           ;main.c: 266: PIR0bits.TMR0IF = 0;
  3678  0011  014E               	movlb	14	; select bank14
  3679  0012  128C               	bcf	12,5	;volatile
  3680  0013                     i1l167:	
  3681                           
  3682                           ;main.c: 267: }
  3683                           ;main.c: 268: if (timerActual == timerSetpoint) {
  3684  0013  0140               	movlb	0	; select bank0
  3685  0014  086C               	movf	_timerSetpoint+1,w
  3686  0015  066A               	xorwf	_timerActual+1,w
  3687  0016  1D03               	skipz
  3688  0017  281A               	goto	u96_25
  3689  0018  086B               	movf	_timerSetpoint,w
  3690  0019  0669               	xorwf	_timerActual,w
  3691  001A                     u96_25:	
  3692  001A  1D03               	skipz
  3693  001B  2820               	goto	i1l169
  3694                           
  3695                           ;main.c: 269: timerDone = 1;
  3696  001C  01FC               	clrf	_timerDone
  3697  001D  0AFC               	incf	_timerDone,f
  3698                           
  3699                           ;main.c: 270: T0CON0bits.T0EN = 0;
  3700  001E  014B               	movlb	11	; select bank11
  3701  001F  139E               	bcf	30,7	;volatile
  3702  0020                     i1l169:	
  3703  0020  0870               	movf	??_timerCount,w
  3704  0021  0140               	movlb	0	; select bank0
  3705  0022  00FF               	movwf	127
  3706  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3707  0024  0009               	retfie
  3708  0025                     __end_of_timerCount:	
  3709  007E                     btemp	set	126	;btemp
  3710  007E                     int$flags	set	126
  3711  007E                     wtemp0	set	126


Data Sizes:
    Strings     381
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     73      77
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_33(CODE[13]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_31(CODE[10]), STR_28(CODE[22]), STR_26(CODE[11]), STR_24(CODE[10]), 
		 -> STR_22(CODE[10]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    waitForCommand@p	PTR unsigned char  size(1) Largest target is 32
		 -> waitForCommand@command(BANK0[32]), 

    sendSMS@message	PTR unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    sendSMS@number	PTR unsigned char  size(2) Largest target is 7
		 -> STR_35(CODE[7]), 

    sendSigfox@hexMessage	PTR unsigned char  size(2) Largest target is 30
		 -> STR_38(CODE[23]), waitForCommand@message(BANK0[30]), STR_29(CODE[15]), 

    serialPrintBT@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_32(CODE[14]), STR_30(CODE[14]), STR_27(CODE[14]), STR_25(CODE[14]), 
		 -> STR_23(CODE[14]), STR_15(CODE[13]), STR_13(CODE[15]), STR_12(CODE[10]), 
		 -> STR_10(CODE[12]), STR_9(CODE[10]), STR_5(CODE[12]), STR_4(CODE[11]), 
		 -> STR_1(CODE[13]), 

    serialFindPeripheral@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[8]), 

    serialPrintPeripheral@s	PTR unsigned char  size(2) Largest target is 30
		 -> STR_38(CODE[23]), STR_36(CODE[12]), STR_35(CODE[7]), waitForCommand@message(BANK0[30]), 
		 -> STR_29(CODE[15]), STR_21(CODE[3]), STR_20(CODE[4]), STR_19(CODE[10]), 
		 -> STR_18(CODE[12]), STR_17(CODE[3]), STR_16(CODE[7]), STR_14(CODE[5]), 
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[12]), STR_3(CODE[11]), 
		 -> STR_2(CODE[19]), 


Critical Paths under _main in COMMON

    _main->_waitForCommand
    _waitForCommand->_sendSMS
    _sendSigfox->_serialPrintPeripheral
    _sendSMS->_serialPrintPeripheral
    _getWiFiData->_serialPrintBT
    _getWiFiData->_serialPrintPeripheral
    _getGSMData->_serialPrintBT
    _getGSMData->_serialPrintPeripheral
    _serialPrintPeripheral->_serialWritePeripheral
    _getGPSData->_serialPrintBT
    _serialPrintBT->_serialWriteBT

Critical Paths under _timerCount in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_waitForCommand
    _waitForCommand->_sendSMS

Critical Paths under _timerCount in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timerCount in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timerCount in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timerCount in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timerCount in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timerCount in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timerCount in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11004
                                             71 BANK0      2     2      0
                       _initBTSerial
                _setActivePeripheral
                     _waitForCommand
 ---------------------------------------------------------------------------------
 (1) _waitForCommand                                      70    70      0   10982
                                             11 COMMON     1     1      0
                                              2 BANK0     69    69      0
                         _getGPSData
                         _getGSMData
                        _getWiFiData
                            _sendSMS
                         _sendSigfox
                      _serialPrintBT
                       _serialReadBT
               _serialReadPeripheral
                      _serialWriteBT
                         _startTimer
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     3      4     267
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     491
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _serialReadBT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sendSigfox                                           2     0      2    1110
                                              7 COMMON     2     0      2
              _serialPrintPeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _sendSMS                                              6     2      4    1143
                                              7 COMMON     4     0      4
                                              0 BANK0      2     2      0
              _serialPrintPeripheral
              _serialWritePeripheral
                _setActivePeripheral
 ---------------------------------------------------------------------------------
 (2) _getWiFiData                                          3     3      0    2243
                                              7 COMMON     3     3      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _getGSMData                                           2     2      0    2198
                                              7 COMMON     2     2      0
                      _serialPrintBT
              _serialPrintPeripheral
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (3) _serialPrintPeripheral                                5     3      2     907
                                              2 COMMON     5     3      2
              _serialWritePeripheral
 ---------------------------------------------------------------------------------
 (4) _serialWritePeripheral                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getGPSData                                           3     3      0    1504
                                              7 COMMON     3     3      0
               _serialFindPeripheral
                      _serialPrintBT
               _serialReadPeripheral
                      _serialWriteBT
                _setActivePeripheral
                         _startTimer
 ---------------------------------------------------------------------------------
 (2) _startTimer                                           2     0      2     446
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _setActivePeripheral                                  1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialPrintBT                                        5     3      2     801
                                              2 COMMON     5     3      2
                      _serialWriteBT
 ---------------------------------------------------------------------------------
 (2) _serialWriteBT                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _serialFindPeripheral                                 5     3      2     143
                                              1 COMMON     5     3      2
               _serialReadPeripheral
 ---------------------------------------------------------------------------------
 (2) _serialReadPeripheral                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBTSerial                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timerCount                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initBTSerial
   _setActivePeripheral
   _waitForCommand
     _getGPSData
       _serialFindPeripheral
         _serialReadPeripheral
       _serialPrintBT
         _serialWriteBT
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getGSMData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _getWiFiData
       _serialPrintBT
         _serialWriteBT
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialReadPeripheral
       _serialWriteBT
       _setActivePeripheral
       _startTimer
     _sendSMS
       _serialPrintPeripheral
         _serialWritePeripheral
       _serialWritePeripheral
       _setActivePeripheral
     _sendSigfox
       _serialPrintPeripheral
         _serialWritePeripheral
       _setActivePeripheral
     _serialPrintBT
       _serialWriteBT
     _serialReadBT
     _serialReadPeripheral
     _serialWriteBT
     _startTimer
     _strcmp
     _strncmp

 _timerCount (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      4D       6       96.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue May 08 14:32:00 2018

                   __CFG_CP$OFF 0000                     __CFG_LVP$ON 0000                             l102 05E0  
                           l200 032F                             l114 05BB                             l131 02F4  
                           l220 0031                             l150 05B1                             l138 05E8  
                           l251 0141                             l195 030F           serialFindPeripheral@i 0074  
         serialFindPeripheral@s 0071            sendSigfox@hexMessage 0077                    __CFG_BORV$LO 0000  
                           wreg 0009                   __CFG_BBEN$OFF 0000                    __CFG_ZCD$OFF 0000  
                          l1120 03EF                            l1200 01BE                            l1114 03ED  
                          l1130 040D                            l1106 03F3                            l1220 0331  
                          l1054 05C3                            l1118 03D1                            l1080 02C7  
                          l1072 02B8                            l1064 02A9                            l1218 0320  
                          l1170 027B                            l1146 05B9                            l1172 0292  
                          l1190 019B                            l1262 03A7                            l1088 02D6  
                          l1168 028D                            l1256 0388                            l1272 0363  
                          l1280 0347                            l1098 02E6                            l1258 0390  
                          l1282 0383                            l1522 0153                            l1506 012B  
                          l1188 018E                            l1276 037A                            l1460 0070  
                          l1452 003E                            l1540 03CB                            l1198 01B1  
                          l1454 0054                            l1472 00BF                            l1464 0086  
                          l1490 010D                            l1476 00DB                            l1468 009C  
                          l1494 0119                            l1488 00F2                            STR_1 04DE  
                          STR_2 0481                            STR_3 0555                            STR_4 053F  
                          STR_5 0510                            STR_6 0504                            STR_7 05CE  
                          STR_8 0534                            STR_9 056B                            u1207 023B  
                          u1217 0259                            u1227 026C                            u1237 029C  
                          u1157 03BD                            u1247 016E                            u1167 01DF  
                          u1257 017F                            u1177 0201                            u1267 01A5  
                          u1187 0215                            u1277 01C8                            u1197 0226  
                          u1287 0340                   __CFG_FCMEN$ON 0000    __end_of_serialFindPeripheral 03F1  
                          _main 03AD                            fsr0h 0005                            fsr1h 0007  
                          indf0 0000                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            btemp 007E                   __CFG_BOREN$ON 0000  
                          start 0025                   __CFG_CSWEN$ON 0000                   __CFG_MCLRE$ON 0000  
                         ?_main 0070                           STR_10 051C                           STR_11 05D7  
                         STR_20 0602                           STR_12 0575                           STR_21 0603  
                         STR_13 04B4                           STR_30 04C3                           STR_14 05FD  
                         STR_22 059D                           STR_31 0589                           STR_15 04D1  
                         STR_23 04C3                           STR_32 04C3                           STR_16 05EF  
                         STR_24 0593                           STR_40 057F                           STR_17 0603  
                         STR_25 04C3                           STR_33 04EB                   __CFG_WDTE$OFF 0000  
                         STR_34 0560                           STR_26 054A                           STR_18 04F8  
                         STR_27 04C3                           STR_35 05F6                           STR_19 05A7  
                         STR_36 0528                           STR_28 0455                           STR_29 04A5  
                         STR_38 043E                           STR_39 05C5                   ?_initBTSerial 0070  
                         _LATC7 00D7                           i1l167 0013                           i1l169 0020  
                         u96_25 001A    __size_of_setActivePeripheral 0059                   __CFG_WRTB$OFF 0000  
                 __CFG_WRTC$OFF 0000                 __end_of_sendSMS 0242                           status 0003  
                         wtemp0 007E                 __end_of_strncmp 0386                 __initialization 0027  
          _serialReadPeripheral 05BB                    __end_of_main 03CF                  __CFG_SAFEN$OFF 0000  
       ??_serialPrintPeripheral 0074                  ??_initBTSerial 0071                          ??_main 0067  
          __size_of_getWiFiData 0060                          _ANSELA 1F38                          _ANSELB 1F43  
                        _ANSELC 1F4E                          _T0CON0 059E                          _T0CON1 059F  
                        _RC1REG 0119                          _RC2REG 0A19                          _RA4PPS 1F14  
                        _RC1PPS 1F21                          _RB6PPS 1F1E                          _RC4PPS 1F24  
                        _RC6PPS 1F26                          _RC7PPS 1F27                  __CFG_WDTCCS$SC 0000  
                        _SP1BRG 011B                          _SP2BRG 0A1B         setActivePeripheral@peri 0071  
                        _TX1REG 011A                          _TX2REG 0A1A                          _TRISC0 00A0  
                        _TRISA5 0095                          _TRISB5 009D                          _TRISC3 00A3  
                        _TRISC5 00A5                          _TRISC7 00A7                  __CFG_PWRTE$OFF 0000  
           waitForCommand@c_459 0061             waitForCommand@i_450 0064           ?_serialReadPeripheral 0070  
               getGPSData@found 0078                  __CFG_STVREN$ON 0000                   sendSMS@number 0077  
                        _strcmp 0386            _serialFindPeripheral 03CF         __size_of_waitForCommand 0126  
                     ??_sendSMS 0020                       ??_strncmp 0075         __end_of__initialization 002D  
         __end_of_serialPrintBT 0425  __size_of_serialWritePeripheral 0008           __end_of_serialWriteBT 05EF  
 __end_of_serialWritePeripheral 05E7                  __pcstackCOMMON 0070           ?_serialFindPeripheral 0071  
                    __pbssBANK0 0069                      _getGSMData 0157                      _getGPSData 02FB  
          __end_of_initBTSerial 0481          ??_serialReadPeripheral 0071             _setActivePeripheral 02A2  
        serialPrintPeripheral@i 0075          serialPrintPeripheral@s 0072                      __pmaintext 03AD  
               __CFG_PPS1WAY$ON 0000                      __pintentry 0004             __CFG_RSTOSC$HFINT32 0000  
                       ?_strcmp 0071            ?_setActivePeripheral 0070                   ?_serialReadBT 0070  
        ??_serialFindPeripheral 0073                         __ptext1 0031                         __ptext2 0346  
                       __ptext3 0386                         __ptext4 05B1                         __ptext5 0425  
                       __ptext6 01CE                         __ptext7 0242                         __ptext8 0157  
                       __ptext9 03F1  __size_of_serialPrintPeripheral 001A   __end_of_serialPrintPeripheral 040B  
                _waitForCommand 0031                 __CFG_WRTAPP$OFF 0000                 __size_of_strcmp 0027  
         ??_setActivePeripheral 0071                  sendSMS@message 0079                         _sendSMS 01CE  
               __CFG_WRTSAF$OFF 0000                         _strncmp 0346            end_of_initialization 002D  
                    _sendSigfox 0425                     ?_getGPSData 0070                     ?_getGSMData 0070  
                ??_serialReadBT 0071                  serialPrintBT@i 0075                  serialPrintBT@s 0072  
                    _timerCount 0004          __end_of_waitForCommand 0157                         strcmp@r 0074  
         __CFG_WDTCPS$WDTCPS_31 0000                  serialWriteBT@c 0071                   ??_getWiFiData 0077  
         __size_of_initBTSerial 0016                __CFG_FEXTOSC$OFF 0000                      _startTimer 0494  
               ?_waitForCommand 0070             __size_of_getGPSData 004B             __size_of_getGSMData 0077  
                  _initBTSerial 046B                  __end_of_strcmp 03AD             start_initialization 0027  
           __end_of_getWiFiData 02A2                     ?_sendSigfox 0077                __CFG_LPBOREN$OFF 0000  
         _serialWritePeripheral 05DF                     ?_timerCount 0070                        ??_strcmp 0073  
          __end_of_serialReadBT 05BB                     __pbssCOMMON 007C          __size_of_serialPrintBT 001A  
                     ___latbits 0001                   __pcstackBANK0 0020          __size_of_serialWriteBT 0008  
                   ?_startTimer 0071   __size_of_serialReadPeripheral 000A             __size_of_sendSigfox 0019  
                   _getWiFiData 0242                        ?_sendSMS 0077                        ?_strncmp 0071  
        serialWritePeripheral@c 0071                    ??_getGPSData 0077                    ??_getGSMData 0077  
           __size_of_timerCount 0021                        _PIE0bits 0716                   _serialPrintBT 040B  
                      _PIR0bits 070C                        _PIR3bits 070F                   _serialWriteBT 05E7  
        ?_serialWritePeripheral 0070               __CFG_BBSIZE$BB512 0000                       _timerDone 007C  
   __end_of_setActivePeripheral 02FB             __size_of_startTimer 0011                    _RX1DTPPSbits 1ECB  
 __size_of_serialFindPeripheral 0022              __end_of_getGPSData 0346              __end_of_getGSMData 01CE  
             startTimer@seconds 0071                 waitForCommand@c 0060                 waitForCommand@i 0062  
               waitForCommand@p 0066           _serialPrintPeripheral 03F1                    _RX2DTPPSbits 1ECD  
                ?_serialPrintBT 0072                  ?_serialWriteBT 0070                ??_waitForCommand 007B  
         __size_of_serialReadBT 000A           waitForCommand@command 0040                     getGPSData@c 0079  
         waitForCommand@message 0022                      _T0CON0bits 059E                __size_of_sendSMS 0074  
                      __ptext10 05DF                        __ptext11 02FB                        __ptext12 0494  
                      __ptext13 02A2                        __ptext14 040B                        __ptext15 05E7  
                      __ptext16 03CF                        __ptext17 05BB                        __ptext18 046B  
                  ??_sendSigfox 0079                __size_of_strncmp 0040                   __size_of_main 0022  
                    strncmp@len 0073                   _timerSetpoint 006B                    _serialReadBT 05B1  
          __CFG_WDTCWS$WDTCWS_7 0000                      _RC1STAbits 011D                      _RC2STAbits 0A1D  
                      int$flags 007E                    ??_timerCount 0070                    getWiFiData@c 0079  
            __end_of_sendSigfox 043E          ?_serialPrintPeripheral 0072                      _INTCONbits 000B  
                __pstringtext10 04F8                  __pstringtext11 0504                  __pstringtext20 056B  
                __pstringtext12 0510                  __pstringtext21 0575                  __pstringtext13 051C  
                __pstringtext30 05EF                  __pstringtext22 057F                  __pstringtext14 0528  
                __pstringtext31 05F6                  __pstringtext23 0589                  __pstringtext15 0534  
                __pstringtext32 05FD                  __pstringtext24 0593                  __pstringtext16 053F  
                __pstringtext33 0602                  __pstringtext25 059D                  __pstringtext17 054A  
                __pstringtext34 0000                  __pstringtext26 05A7                  __pstringtext18 0555  
                __pstringtext27 05C5                  __pstringtext19 0560                  __pstringtext28 05CE  
                __pstringtext29 05D7                    ??_startTimer 0073                        intlevel1 0000  
               ??_serialPrintBT 0074              __end_of_timerCount 0025               __CFG_CLKOUTEN$OFF 0000  
               ??_serialWriteBT 0071                       strncmp@s1 0077                       strncmp@s2 0071  
            __end_of_startTimer 04A5                   __pstringtext1 043E                   __pstringtext2 0455  
                 __pstringtext3 0481                   __pstringtext4 04A5                   __pstringtext5 04B4  
                 __pstringtext6 04C3                   __pstringtext7 04D1                   __pstringtext8 04DE  
                 __pstringtext9 04EB                    ?_getWiFiData 0070                     _timerActual 0069  
                      strcmp@s1 0075                        strcmp@s2 0071    __end_of_serialReadPeripheral 05C5  
                    _TX1STAbits 011E                      _TX2STAbits 0A1E         ??_serialWritePeripheral 0071  
